!function(g){function I(g){var I=document.getElementsByTagName("head")[0],n=document.createElement("script");n.type="text/javascript",n.charset="utf-8",n.src=B.p+""+g+"."+u+".hot-update.js",I.appendChild(n)}function n(g){if("undefined"==typeof XMLHttpRequest)return g(new Error("No browser support"));try{var I=new XMLHttpRequest,n=B.p+""+u+".hot-update.json";I.open("GET",n,!0),I.timeout=1e4,I.send(null)}catch(c){return g(c)}I.onreadystatechange=function(){if(4===I.readyState)if(0===I.status)g(new Error("Manifest request to "+n+" timed out."));else if(404===I.status)g();else if(200!==I.status&&304!==I.status)g(new Error("Manifest request to "+n+" failed."));else{try{var c=JSON.parse(I.responseText)}catch(t){return void g(t)}g(null,c)}}}function c(g){function I(g,I){"ready"===m&&l("prepare"),x++,B.e(g,function(){function n(){x--,"prepare"===m&&(U[g]||b(g),0===x&&0===Z&&A())}try{I.call(null,c)}finally{n()}})}var n=W[g];if(!n)return B;var c=function(I){return n.hot.active?W[I]?(W[I].parents.indexOf(g)<0&&W[I].parents.push(g),n.children.indexOf(I)<0&&n.children.push(I)):r=[g]:(console.warn("[HMR] unexpected require("+I+") from disposed module "+g),r=[]),B(I)};for(var t in B)Object.prototype.hasOwnProperty.call(B,t)&&(Object.defineProperty?Object.defineProperty(c,t,function(g){return{configurable:!0,enumerable:!0,get:function(){return B[g]},set:function(I){B[g]=I}}}(t)):c[t]=B[t]);return Object.defineProperty?Object.defineProperty(c,"e",{enumerable:!0,value:I}):c.e=I,c}function t(g){var I={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],active:!0,accept:function(g,n){if("undefined"==typeof g)I._selfAccepted=!0;else if("function"==typeof g)I._selfAccepted=g;else if("object"==typeof g)for(var c=0;c<g.length;c++)I._acceptedDependencies[g[c]]=n;else I._acceptedDependencies[g]=n},decline:function(g){if("undefined"==typeof g)I._selfDeclined=!0;else if("number"==typeof g)I._declinedDependencies[g]=!0;else for(var n=0;n<g.length;n++)I._declinedDependencies[g[n]]=!0},dispose:function(g){I._disposeHandlers.push(g)},addDisposeHandler:function(g){I._disposeHandlers.push(g)},removeDisposeHandler:function(g){var n=I._disposeHandlers.indexOf(g);n>=0&&I._disposeHandlers.splice(n,1)},check:e,apply:i,status:function(g){return g?void X.push(g):m},addStatusHandler:function(g){X.push(g)},removeStatusHandler:function(g){var I=X.indexOf(g);I>=0&&X.splice(I,1)},data:G[g]};return I}function l(g){m=g;for(var I=0;I<X.length;I++)X[I].call(null,g)}function C(g){var I=+g+""===g;return I?+g:g}function e(g,I){if("idle"!==m)throw new Error("check() is only allowed in idle status");"function"==typeof g?(s=!1,I=g):(s=g,I=I||function(g){if(g)throw g}),l("check"),n(function(g,n){if(g)return I(g);if(!n)return l("idle"),void I(null,null);p={},h={},U={};for(var c=0;c<n.c.length;c++)h[n.c[c]]=!0;o=n.h,l("prepare"),Q=I,F={};var t=0;b(t),"prepare"===m&&0===x&&0===Z&&A()})}function d(g,I){if(h[g]&&p[g]){p[g]=!1;for(var n in I)Object.prototype.hasOwnProperty.call(I,n)&&(F[n]=I[n]);0===--Z&&0===x&&A()}}function b(g){h[g]?(p[g]=!0,Z++,I(g)):U[g]=!0}function A(){l("ready");var g=Q;if(Q=null,g)if(s)i(s,g);else{var I=[];for(var n in F)Object.prototype.hasOwnProperty.call(F,n)&&I.push(C(n));g(null,I)}}function i(I,n){function c(g){for(var I=[g],n={},c=I.slice();c.length>0;){var l=c.pop(),g=W[l];if(g&&!g.hot._selfAccepted){if(g.hot._selfDeclined)return new Error("Aborted because of self decline: "+l);if(0===l)return;for(var C=0;C<g.parents.length;C++){var e=g.parents[C],d=W[e];if(d.hot._declinedDependencies[l])return new Error("Aborted because of declined dependency: "+l+" in "+e);I.indexOf(e)>=0||(d.hot._acceptedDependencies[l]?(n[e]||(n[e]=[]),t(n[e],[l])):(delete n[e],I.push(e),c.push(e)))}}}return[I,n]}function t(g,I){for(var n=0;n<I.length;n++){var c=I[n];g.indexOf(c)<0&&g.push(c)}}if("ready"!==m)throw new Error("apply() is only allowed in ready status");"function"==typeof I?(n=I,I={}):I&&"object"==typeof I?n=n||function(g){if(g)throw g}:(I={},n=n||function(g){if(g)throw g});var e={},d=[],b={};for(var A in F)if(Object.prototype.hasOwnProperty.call(F,A)){var i=C(A),a=c(i);if(!a){if(I.ignoreUnaccepted)continue;return l("abort"),n(new Error("Aborted because "+i+" is not accepted"))}if(a instanceof Error)return l("abort"),n(a);b[i]=F[i],t(d,a[0]);for(var i in a[1])Object.prototype.hasOwnProperty.call(a[1],i)&&(e[i]||(e[i]=[]),t(e[i],a[1][i]))}for(var Q=[],s=0;s<d.length;s++){var i=d[s];W[i]&&W[i].hot._selfAccepted&&Q.push({module:i,errorHandler:W[i].hot._selfAccepted})}l("dispose");for(var X=d.slice();X.length>0;){var i=X.pop(),Z=W[i];if(Z){for(var x={},U=Z.hot._disposeHandlers,p=0;p<U.length;p++){var h=U[p];h(x)}G[i]=x,Z.hot.active=!1,delete W[i];for(var p=0;p<Z.children.length;p++){var R=W[Z.children[p]];if(R){var y=R.parents.indexOf(i);y>=0&&R.parents.splice(y,1)}}}}for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i))for(var Z=W[i],V=e[i],p=0;p<V.length;p++){var H=V[p],y=Z.children.indexOf(H);y>=0&&Z.children.splice(y,1)}l("apply"),u=o;for(var i in b)Object.prototype.hasOwnProperty.call(b,i)&&(g[i]=b[i]);var N=null;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){for(var Z=W[i],V=e[i],Y=[],s=0;s<V.length;s++){var H=V[s],h=Z.hot._acceptedDependencies[H];Y.indexOf(h)>=0||Y.push(h)}for(var s=0;s<Y.length;s++){var h=Y[s];try{h(e)}catch(v){N||(N=v)}}}for(var s=0;s<Q.length;s++){var J=Q[s],i=J.module;r=[i];try{B(i)}catch(v){if("function"==typeof J.errorHandler)try{J.errorHandler(v)}catch(v){N||(N=v)}else N||(N=v)}}return N?(l("fail"),n(N)):(l("idle"),void n(null,d))}function B(I){if(W[I])return W[I].exports;var n=W[I]={exports:{},id:I,loaded:!1,hot:t(I),parents:r,children:[]};return g[I].call(n.exports,n,n.exports,c(I)),n.loaded=!0,n.exports}var a=this.webpackHotUpdate;this.webpackHotUpdate=function(g,I){d(g,I),a&&a(g,I)};var Q,F,o,s=!0,u="a584431bddd14cd00166",G={},r=[],X=[],m="idle",Z=0,x=0,U={},p={},h={},W={};return B.m=g,B.c=W,B.p="http://localhost:4001/",B.h=function(){return u},c(0)(0)}([function(g,I,n){n(52),n(88),g.exports=n(36)},function(module,exports){eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L34vaW5oZXJpdHMvaW5oZXJpdHNfYnJvd3Nlci5qcz9iOTMzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpZiAodHlwZW9mIE9iamVjdC5jcmVhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgLy8gaW1wbGVtZW50YXRpb24gZnJvbSBzdGFuZGFyZCBub2RlLmpzICd1dGlsJyBtb2R1bGVcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgIGN0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckN0b3IucHJvdG90eXBlLCB7XG4gICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICB2YWx1ZTogY3RvcixcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbn0gZWxzZSB7XG4gIC8vIG9sZCBzY2hvb2wgc2hpbSBmb3Igb2xkIGJyb3dzZXJzXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICB2YXIgVGVtcEN0b3IgPSBmdW5jdGlvbiAoKSB7fVxuICAgIFRlbXBDdG9yLnByb3RvdHlwZSA9IHN1cGVyQ3Rvci5wcm90b3R5cGVcbiAgICBjdG9yLnByb3RvdHlwZSA9IG5ldyBUZW1wQ3RvcigpXG4gICAgY3Rvci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjdG9yXG4gIH1cbn1cblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L34vaW5oZXJpdHMvaW5oZXJpdHNfYnJvd3Nlci5qc1xuICoqIG1vZHVsZSBpZCA9IDFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports){eval("// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25vZGUtbGlicy1icm93c2VyL34vcHJvY2Vzcy9icm93c2VyLmpzPzQ5NGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsVUFBVSIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyXG5cbnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHNldFRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB9XG4gICAgY3VycmVudFF1ZXVlID0gbnVsbDtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbn1cblxucHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7XG4gICAgICAgIHNldFRpbWVvdXQoZHJhaW5RdWV1ZSwgMCk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG5wcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9O1xucHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcbnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9ub2RlLWxpYnMtYnJvd3Nlci9+L3Byb2Nlc3MvYnJvd3Nlci5qc1xuICoqIG1vZHVsZSBpZCA9IDJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(79);\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L34vZGVidWcvYnJvd3Nlci5qcz9mMWUyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogVGhpcyBpcyB0aGUgd2ViIGJyb3dzZXIgaW1wbGVtZW50YXRpb24gb2YgYGRlYnVnKClgLlxuICpcbiAqIEV4cG9zZSBgZGVidWcoKWAgYXMgdGhlIG1vZHVsZS5cbiAqL1xuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2RlYnVnJyk7XG5leHBvcnRzLmxvZyA9IGxvZztcbmV4cG9ydHMuZm9ybWF0QXJncyA9IGZvcm1hdEFyZ3M7XG5leHBvcnRzLnNhdmUgPSBzYXZlO1xuZXhwb3J0cy5sb2FkID0gbG9hZDtcbmV4cG9ydHMudXNlQ29sb3JzID0gdXNlQ29sb3JzO1xuZXhwb3J0cy5zdG9yYWdlID0gJ3VuZGVmaW5lZCcgIT0gdHlwZW9mIGNocm9tZVxuICAgICAgICAgICAgICAgJiYgJ3VuZGVmaW5lZCcgIT0gdHlwZW9mIGNocm9tZS5zdG9yYWdlXG4gICAgICAgICAgICAgICAgICA/IGNocm9tZS5zdG9yYWdlLmxvY2FsXG4gICAgICAgICAgICAgICAgICA6IGxvY2Fsc3RvcmFnZSgpO1xuXG4vKipcbiAqIENvbG9ycy5cbiAqL1xuXG5leHBvcnRzLmNvbG9ycyA9IFtcbiAgJ2xpZ2h0c2VhZ3JlZW4nLFxuICAnZm9yZXN0Z3JlZW4nLFxuICAnZ29sZGVucm9kJyxcbiAgJ2RvZGdlcmJsdWUnLFxuICAnZGFya29yY2hpZCcsXG4gICdjcmltc29uJ1xuXTtcblxuLyoqXG4gKiBDdXJyZW50bHkgb25seSBXZWJLaXQtYmFzZWQgV2ViIEluc3BlY3RvcnMsIEZpcmVmb3ggPj0gdjMxLFxuICogYW5kIHRoZSBGaXJlYnVnIGV4dGVuc2lvbiAoYW55IEZpcmVmb3ggdmVyc2lvbikgYXJlIGtub3duXG4gKiB0byBzdXBwb3J0IFwiJWNcIiBDU1MgY3VzdG9taXphdGlvbnMuXG4gKlxuICogVE9ETzogYWRkIGEgYGxvY2FsU3RvcmFnZWAgdmFyaWFibGUgdG8gZXhwbGljaXRseSBlbmFibGUvZGlzYWJsZSBjb2xvcnNcbiAqL1xuXG5mdW5jdGlvbiB1c2VDb2xvcnMoKSB7XG4gIC8vIGlzIHdlYmtpdD8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMTY0NTk2MDYvMzc2NzczXG4gIHJldHVybiAoJ1dlYmtpdEFwcGVhcmFuY2UnIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZSkgfHxcbiAgICAvLyBpcyBmaXJlYnVnPyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8zOTgxMjAvMzc2NzczXG4gICAgKHdpbmRvdy5jb25zb2xlICYmIChjb25zb2xlLmZpcmVidWcgfHwgKGNvbnNvbGUuZXhjZXB0aW9uICYmIGNvbnNvbGUudGFibGUpKSkgfHxcbiAgICAvLyBpcyBmaXJlZm94ID49IHYzMT9cbiAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1Rvb2xzL1dlYl9Db25zb2xlI1N0eWxpbmdfbWVzc2FnZXNcbiAgICAobmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLm1hdGNoKC9maXJlZm94XFwvKFxcZCspLykgJiYgcGFyc2VJbnQoUmVnRXhwLiQxLCAxMCkgPj0gMzEpO1xufVxuXG4vKipcbiAqIE1hcCAlaiB0byBgSlNPTi5zdHJpbmdpZnkoKWAsIHNpbmNlIG5vIFdlYiBJbnNwZWN0b3JzIGRvIHRoYXQgYnkgZGVmYXVsdC5cbiAqL1xuXG5leHBvcnRzLmZvcm1hdHRlcnMuaiA9IGZ1bmN0aW9uKHYpIHtcbiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHYpO1xufTtcblxuXG4vKipcbiAqIENvbG9yaXplIGxvZyBhcmd1bWVudHMgaWYgZW5hYmxlZC5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIGZvcm1hdEFyZ3MoKSB7XG4gIHZhciBhcmdzID0gYXJndW1lbnRzO1xuICB2YXIgdXNlQ29sb3JzID0gdGhpcy51c2VDb2xvcnM7XG5cbiAgYXJnc1swXSA9ICh1c2VDb2xvcnMgPyAnJWMnIDogJycpXG4gICAgKyB0aGlzLm5hbWVzcGFjZVxuICAgICsgKHVzZUNvbG9ycyA/ICcgJWMnIDogJyAnKVxuICAgICsgYXJnc1swXVxuICAgICsgKHVzZUNvbG9ycyA/ICclYyAnIDogJyAnKVxuICAgICsgJysnICsgZXhwb3J0cy5odW1hbml6ZSh0aGlzLmRpZmYpO1xuXG4gIGlmICghdXNlQ29sb3JzKSByZXR1cm4gYXJncztcblxuICB2YXIgYyA9ICdjb2xvcjogJyArIHRoaXMuY29sb3I7XG4gIGFyZ3MgPSBbYXJnc1swXSwgYywgJ2NvbG9yOiBpbmhlcml0J10uY29uY2F0KEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3MsIDEpKTtcblxuICAvLyB0aGUgZmluYWwgXCIlY1wiIGlzIHNvbWV3aGF0IHRyaWNreSwgYmVjYXVzZSB0aGVyZSBjb3VsZCBiZSBvdGhlclxuICAvLyBhcmd1bWVudHMgcGFzc2VkIGVpdGhlciBiZWZvcmUgb3IgYWZ0ZXIgdGhlICVjLCBzbyB3ZSBuZWVkIHRvXG4gIC8vIGZpZ3VyZSBvdXQgdGhlIGNvcnJlY3QgaW5kZXggdG8gaW5zZXJ0IHRoZSBDU1MgaW50b1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgbGFzdEMgPSAwO1xuICBhcmdzWzBdLnJlcGxhY2UoLyVbYS16JV0vZywgZnVuY3Rpb24obWF0Y2gpIHtcbiAgICBpZiAoJyUlJyA9PT0gbWF0Y2gpIHJldHVybjtcbiAgICBpbmRleCsrO1xuICAgIGlmICgnJWMnID09PSBtYXRjaCkge1xuICAgICAgLy8gd2Ugb25seSBhcmUgaW50ZXJlc3RlZCBpbiB0aGUgKmxhc3QqICVjXG4gICAgICAvLyAodGhlIHVzZXIgbWF5IGhhdmUgcHJvdmlkZWQgdGhlaXIgb3duKVxuICAgICAgbGFzdEMgPSBpbmRleDtcbiAgICB9XG4gIH0pO1xuXG4gIGFyZ3Muc3BsaWNlKGxhc3RDLCAwLCBjKTtcbiAgcmV0dXJuIGFyZ3M7XG59XG5cbi8qKlxuICogSW52b2tlcyBgY29uc29sZS5sb2coKWAgd2hlbiBhdmFpbGFibGUuXG4gKiBOby1vcCB3aGVuIGBjb25zb2xlLmxvZ2AgaXMgbm90IGEgXCJmdW5jdGlvblwiLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gbG9nKCkge1xuICAvLyB0aGlzIGhhY2tlcnkgaXMgcmVxdWlyZWQgZm9yIElFOC85LCB3aGVyZVxuICAvLyB0aGUgYGNvbnNvbGUubG9nYCBmdW5jdGlvbiBkb2Vzbid0IGhhdmUgJ2FwcGx5J1xuICByZXR1cm4gJ29iamVjdCcgPT09IHR5cGVvZiBjb25zb2xlXG4gICAgJiYgY29uc29sZS5sb2dcbiAgICAmJiBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHkuY2FsbChjb25zb2xlLmxvZywgY29uc29sZSwgYXJndW1lbnRzKTtcbn1cblxuLyoqXG4gKiBTYXZlIGBuYW1lc3BhY2VzYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlc1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2F2ZShuYW1lc3BhY2VzKSB7XG4gIHRyeSB7XG4gICAgaWYgKG51bGwgPT0gbmFtZXNwYWNlcykge1xuICAgICAgZXhwb3J0cy5zdG9yYWdlLnJlbW92ZUl0ZW0oJ2RlYnVnJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGV4cG9ydHMuc3RvcmFnZS5kZWJ1ZyA9IG5hbWVzcGFjZXM7XG4gICAgfVxuICB9IGNhdGNoKGUpIHt9XG59XG5cbi8qKlxuICogTG9hZCBgbmFtZXNwYWNlc2AuXG4gKlxuICogQHJldHVybiB7U3RyaW5nfSByZXR1cm5zIHRoZSBwcmV2aW91c2x5IHBlcnNpc3RlZCBkZWJ1ZyBtb2Rlc1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gbG9hZCgpIHtcbiAgdmFyIHI7XG4gIHRyeSB7XG4gICAgciA9IGV4cG9ydHMuc3RvcmFnZS5kZWJ1ZztcbiAgfSBjYXRjaChlKSB7fVxuICByZXR1cm4gcjtcbn1cblxuLyoqXG4gKiBFbmFibGUgbmFtZXNwYWNlcyBsaXN0ZWQgaW4gYGxvY2FsU3RvcmFnZS5kZWJ1Z2AgaW5pdGlhbGx5LlxuICovXG5cbmV4cG9ydHMuZW5hYmxlKGxvYWQoKSk7XG5cbi8qKlxuICogTG9jYWxzdG9yYWdlIGF0dGVtcHRzIHRvIHJldHVybiB0aGUgbG9jYWxzdG9yYWdlLlxuICpcbiAqIFRoaXMgaXMgbmVjZXNzYXJ5IGJlY2F1c2Ugc2FmYXJpIHRocm93c1xuICogd2hlbiBhIHVzZXIgZGlzYWJsZXMgY29va2llcy9sb2NhbHN0b3JhZ2VcbiAqIGFuZCB5b3UgYXR0ZW1wdCB0byBhY2Nlc3MgaXQuXG4gKlxuICogQHJldHVybiB7TG9jYWxTdG9yYWdlfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gbG9jYWxzdG9yYWdlKCl7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5sb2NhbFN0b3JhZ2U7XG4gIH0gY2F0Y2ggKGUpIHt9XG59XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9+L2RlYnVnL2Jyb3dzZXIuanNcbiAqKiBtb2R1bGUgaWQgPSAzXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar inherits = __webpack_require__(1)\n  , EventTarget = __webpack_require__(22)\n  ;\n\nfunction EventEmitter() {\n  EventTarget.call(this);\n}\n\ninherits(EventEmitter, EventTarget);\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  if (type) {\n    delete this._listeners[type];\n  } else {\n    this._listeners = {};\n  }\n};\n\nEventEmitter.prototype.once = function(type, listener) {\n  var self = this\n    , fired = false;\n\n  function g() {\n    self.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  this.on(type, g);\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var listeners = this._listeners[type];\n  if (!listeners) {\n    return;\n  }\n  var args = Array.prototype.slice.call(arguments, 1);\n  for (var i = 0; i < listeners.length; i++) {\n    listeners[i].apply(this, args);\n  }\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener = EventTarget.prototype.addEventListener;\nEventEmitter.prototype.removeListener = EventTarget.prototype.removeEventListener;\n\nmodule.exports.EventEmitter = EventEmitter;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9ldmVudC9lbWl0dGVyLmpzP2QzOGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsc0JBQXNCO0FBQ3ZDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6IjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBFdmVudFRhcmdldCA9IHJlcXVpcmUoJy4vZXZlbnR0YXJnZXQnKVxuICA7XG5cbmZ1bmN0aW9uIEV2ZW50RW1pdHRlcigpIHtcbiAgRXZlbnRUYXJnZXQuY2FsbCh0aGlzKTtcbn1cblxuaW5oZXJpdHMoRXZlbnRFbWl0dGVyLCBFdmVudFRhcmdldCk7XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlQWxsTGlzdGVuZXJzID0gZnVuY3Rpb24odHlwZSkge1xuICBpZiAodHlwZSkge1xuICAgIGRlbGV0ZSB0aGlzLl9saXN0ZW5lcnNbdHlwZV07XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5fbGlzdGVuZXJzID0ge307XG4gIH1cbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUub25jZSA9IGZ1bmN0aW9uKHR5cGUsIGxpc3RlbmVyKSB7XG4gIHZhciBzZWxmID0gdGhpc1xuICAgICwgZmlyZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBnKCkge1xuICAgIHNlbGYucmVtb3ZlTGlzdGVuZXIodHlwZSwgZyk7XG5cbiAgICBpZiAoIWZpcmVkKSB7XG4gICAgICBmaXJlZCA9IHRydWU7XG4gICAgICBsaXN0ZW5lci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfVxuXG4gIHRoaXMub24odHlwZSwgZyk7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbih0eXBlKSB7XG4gIHZhciBsaXN0ZW5lcnMgPSB0aGlzLl9saXN0ZW5lcnNbdHlwZV07XG4gIGlmICghbGlzdGVuZXJzKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcbiAgICBsaXN0ZW5lcnNbaV0uYXBwbHkodGhpcywgYXJncyk7XG4gIH1cbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUub24gPSBFdmVudEVtaXR0ZXIucHJvdG90eXBlLmFkZExpc3RlbmVyID0gRXZlbnRUYXJnZXQucHJvdG90eXBlLmFkZEV2ZW50TGlzdGVuZXI7XG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyID0gRXZlbnRUYXJnZXQucHJvdG90eXBlLnJlbW92ZUV2ZW50TGlzdGVuZXI7XG5cbm1vZHVsZS5leHBvcnRzLkV2ZW50RW1pdHRlciA9IEV2ZW50RW1pdHRlcjtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9ldmVudC9lbWl0dGVyLmpzXG4gKiogbW9kdWxlIGlkID0gNFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\nvar URL = __webpack_require__(20);\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:utils:url');\n}\n\nmodule.exports = {\n  getOrigin: function(url) {\n    if (!url) {\n      return null;\n    }\n\n    var p = new URL(url);\n    if (p.protocol === 'file:') {\n      return null;\n    }\n\n    var port = p.port;\n    if (!port) {\n      port = (p.protocol === 'https:') ? '443' : '80';\n    }\n\n    return p.protocol + '//' + p.hostname + ':' + port;\n  }\n\n, isOriginEqual: function(a, b) {\n    var res = this.getOrigin(a) === this.getOrigin(b);\n    debug('same', a, b, res);\n    return res;\n  }\n\n, isSchemeEqual: function(a, b) {\n    return (a.split(':')[0] === b.split(':')[0]);\n  }\n\n, addPath: function (url, path) {\n    var qs = url.split('?');\n    return qs[0] + path + (qs[1] ? '?' + qs[1] : '');\n  }\n\n, addQuery: function (url, q) {\n    return url + (url.indexOf('?') === -1 ? ('?' + q) : ('&' + q));\n  }\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi91dGlscy91cmwuanM/NmZjNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIFVSTCA9IHJlcXVpcmUoJ3VybC1wYXJzZScpO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OnV0aWxzOnVybCcpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0T3JpZ2luOiBmdW5jdGlvbih1cmwpIHtcbiAgICBpZiAoIXVybCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdmFyIHAgPSBuZXcgVVJMKHVybCk7XG4gICAgaWYgKHAucHJvdG9jb2wgPT09ICdmaWxlOicpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHZhciBwb3J0ID0gcC5wb3J0O1xuICAgIGlmICghcG9ydCkge1xuICAgICAgcG9ydCA9IChwLnByb3RvY29sID09PSAnaHR0cHM6JykgPyAnNDQzJyA6ICc4MCc7XG4gICAgfVxuXG4gICAgcmV0dXJuIHAucHJvdG9jb2wgKyAnLy8nICsgcC5ob3N0bmFtZSArICc6JyArIHBvcnQ7XG4gIH1cblxuLCBpc09yaWdpbkVxdWFsOiBmdW5jdGlvbihhLCBiKSB7XG4gICAgdmFyIHJlcyA9IHRoaXMuZ2V0T3JpZ2luKGEpID09PSB0aGlzLmdldE9yaWdpbihiKTtcbiAgICBkZWJ1Zygnc2FtZScsIGEsIGIsIHJlcyk7XG4gICAgcmV0dXJuIHJlcztcbiAgfVxuXG4sIGlzU2NoZW1lRXF1YWw6IGZ1bmN0aW9uKGEsIGIpIHtcbiAgICByZXR1cm4gKGEuc3BsaXQoJzonKVswXSA9PT0gYi5zcGxpdCgnOicpWzBdKTtcbiAgfVxuXG4sIGFkZFBhdGg6IGZ1bmN0aW9uICh1cmwsIHBhdGgpIHtcbiAgICB2YXIgcXMgPSB1cmwuc3BsaXQoJz8nKTtcbiAgICByZXR1cm4gcXNbMF0gKyBwYXRoICsgKHFzWzFdID8gJz8nICsgcXNbMV0gOiAnJyk7XG4gIH1cblxuLCBhZGRRdWVyeTogZnVuY3Rpb24gKHVybCwgcSkge1xuICAgIHJldHVybiB1cmwgKyAodXJsLmluZGV4T2YoJz8nKSA9PT0gLTEgPyAoJz8nICsgcSkgOiAoJyYnICsgcSkpO1xuICB9XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL3V0aWxzL3VybC5qc1xuICoqIG1vZHVsZSBpZCA9IDVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");
},function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = "function" === "function" && __webpack_require__(86);\n\n  // A set of types used to distinguish objects from primitives.\n  var objectTypes = {\n    "function": true,\n    "object": true\n  };\n\n  // Detect the `exports` object exposed by CommonJS implementations.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == "object" && global;\n\n  if (freeGlobal && (freeGlobal["global"] === freeGlobal || freeGlobal["window"] === freeGlobal || freeGlobal["self"] === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n  function runInContext(context, exports) {\n    context || (context = root["Object"]());\n    exports || (exports = root["Object"]());\n\n    // Native constructor aliases.\n    var Number = context["Number"] || root["Number"],\n        String = context["String"] || root["String"],\n        Object = context["Object"] || root["Object"],\n        Date = context["Date"] || root["Date"],\n        SyntaxError = context["SyntaxError"] || root["SyntaxError"],\n        TypeError = context["TypeError"] || root["TypeError"],\n        Math = context["Math"] || root["Math"],\n        nativeJSON = context["JSON"] || root["JSON"];\n\n    // Delegate to the native `stringify` and `parse` implementations.\n    if (typeof nativeJSON == "object" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    }\n\n    // Convenience aliases.\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty, forEach, undef;\n\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n    var isExtended = new Date(-3509827334573292);\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n        // but clips the values returned by the date methods to the range of\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {}\n\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n      var isSupported;\n      if (name == "bug-string-char-index") {\n        // IE <= 7 doesn\'t support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = "a"[0] != "a";\n      } else if (name == "json") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has("json-stringify") && has("json-parse");\n      } else {\n        var value, serialized = \'{"a":[1,true,false,null,"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t"]}\';\n        // Test `JSON.stringify`.\n        if (name == "json-stringify") {\n          var stringify = exports.stringify, stringifySupported = typeof stringify == "function" && isExtended;\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n            try {\n              stringifySupported =\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                // primitives as object literals.\n                stringify(0) === "0" &&\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                // literals.\n                stringify(new Number()) === "0" &&\n                stringify(new String()) == \'""\' &&\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                // does not define a canonical JSON representation (this applies to\n                // objects with `toJSON` properties as well, *unless* they are nested\n                // within an object or array).\n                stringify(getClass) === undef &&\n                // IE 8 serializes `undefined` as `"undefined"`. Safari <= 5.1.7 and\n                // FF 3.1b3 pass this test.\n                stringify(undef) === undef &&\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                // respectively, if the value is omitted entirely.\n                stringify() === undef &&\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\n                // string, array, object, Boolean, or `null` literal. This applies to\n                // objects with custom `toJSON` methods as well, unless they are nested\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                // methods entirely.\n                stringify(value) === "1" &&\n                stringify([value]) == "[1]" &&\n                // Prototype <= 1.6.1 serializes `[undefined]` as `"[]"` instead of\n                // `"[null]"`.\n                stringify([undef]) == "[null]" &&\n                // YUI 3.0.0b1 fails to serialize `null` literals.\n                stringify(null) == "null" &&\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\n                // `[1, true, getClass, 1]` serializes as "[1,true,],". FF 3.1b3\n                // elides non-JSON values from objects and arrays, unless they\n                // define custom `toJSON` methods.\n                stringify([undef, getClass, null]) == "[null,null,null]" &&\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                stringify({ "a": [value, true, false, null, "\\x00\\b\\n\\f\\r\\t"] }) == serialized &&\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                stringify(null, value) === "1" &&\n                stringify([1, 2], null, 1) == "[\\n 1,\\n 2\\n]" &&\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                // serialize extended years.\n                stringify(new Date(-8.64e15)) == \'"-271821-04-20T00:00:00.000Z"\' &&\n                // The milliseconds are optional in ES 5, but required in 5.1.\n                stringify(new Date(8.64e15)) == \'"+275760-09-13T00:00:00.000Z"\' &&\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\n                stringify(new Date(-621987552e5)) == \'"-000001-01-01T00:00:00.000Z"\' &&\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                // values less than 1000. Credits: @Yaffle.\n                stringify(new Date(-1)) == \'"1969-12-31T23:59:59.999Z"\';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n          isSupported = stringifySupported;\n        }\n        // Test `JSON.parse`.\n        if (name == "json-parse") {\n          var parse = exports.parse;\n          if (typeof parse == "function") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse("0") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value["a"].length == 5 && value["a"][0] === 1;\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse(\'"\\t"\');\n                  } catch (exception) {}\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse("01") !== 1;\n                    } catch (exception) {}\n                  }\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse("1.") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n          isSupported = parseSupported;\n        }\n      }\n      return has[name] = !!isSupported;\n    }\n\n    if (!has("json")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = "[object Function]",\n          dateClass = "[object Date]",\n          numberClass = "[object Number]",\n          stringClass = "[object String]",\n          arrayClass = "[object Array]",\n          booleanClass = "[object Boolean]";\n\n      // Detect incomplete support for accessing string characters by index.\n      var charIndexBuggy = has("bug-string-char-index");\n\n      // Define additional utility methods if the `Date` methods are buggy.\n      if (!isExtended) {\n        var floor = Math.floor;\n        // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n        var getDay = function (year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      }\n\n      // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n      if (!(isProperty = objectProto.hasOwnProperty)) {\n        isProperty = function (property) {\n          var members = {}, constructor;\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            "toString": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn\'t implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            isProperty = function (property) {\n              // Capture and break the object\'s prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n              // Restore the original prototype chain.\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor;\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n            isProperty = function (property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n          members = null;\n          return isProperty.call(this, property);\n        };\n      }\n\n      // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n      forEach = function (object, callback) {\n        var size = 0, Properties, members, property;\n\n        // Tests for bugs in the current environment\'s `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0;\n\n        // Iterate over a new instance of the `Properties` class.\n        members = new Properties();\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(members, property)) {\n            size++;\n          }\n        }\n        Properties = members = null;\n\n        // Normalize the iteration algorithm.\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"];\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, length;\n            var hasProperty = !isFunction && typeof object.constructor != "function" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == "prototype") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for each non-enumerable property.\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          forEach = function (object, callback) {\n            // Create a set of iterated properties.\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == "prototype") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n            for (property in object) {\n              if (!(isFunction && property == "prototype") && isProperty.call(object, property) && !(isConstructor = property === "constructor")) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n            if (isConstructor || isProperty.call(object, (property = "constructor"))) {\n              callback(property);\n            }\n          };\n        }\n        return forEach(object, callback);\n      };\n\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n      if (!has("json-stringify")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: "\\\\\\\\",\n          34: \'\\\\"\',\n          8: "\\\\b",\n          12: "\\\\f",\n          10: "\\\\n",\n          13: "\\\\r",\n          9: "\\\\t"\n        };\n\n        // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n        var leadingZeroes = "000000";\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== "0"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        };\n\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n        var unicodePrefix = "\\\\u00";\n        var quote = function (value) {\n          var result = \'"\', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split("") : value);\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index);\n            // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n            switch (charCode) {\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n                result += Escapes[charCode];\n                break;\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n          return result + \'"\';\n        };\n\n        // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n          if (typeof value == "object" && value) {\n            className = getClass.call(value);\n            if (className == dateClass && !isProperty.call(value, "toJSON")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle\'s `date-shim` project.\n                  date = floor(value / 864e5);\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                  date = 1 + date - getDay(year, month);\n                  // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n                  time = (value % 864e5 + 864e5) % 864e5;\n                  // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                }\n                // Serialize extended years correctly.\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? "-" : "+") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                  "-" + toPaddedString(2, month + 1) + "-" + toPaddedString(2, date) +\n                  // Months, dates, hours, minutes, and seconds should have two\n                  // digits; milliseconds should have three.\n                  "T" + toPaddedString(2, hours) + ":" + toPaddedString(2, minutes) + ":" + toPaddedString(2, seconds) +\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n                  "." + toPaddedString(3, milliseconds) + "Z";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == "function" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, "toJSON"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n          if (value === null) {\n            return "null";\n          }\n          className = getClass.call(value);\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return "" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `"null"`.\n            return value > -1 / 0 && value < 1 / 0 ? "" + value : "null";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote("" + value);\n          }\n          // Recursively serialize objects and arrays.\n          if (typeof value == "object") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            }\n            // Add the object to the stack of traversed objects.\n            stack.push(value);\n            results = [];\n            // Save the current indentation level and indent one additional level.\n            prefix = indentation;\n            indentation += whitespace;\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? "null" : element);\n              }\n              result = results.length ? (whitespace ? "[\\n" + indentation + results.join(",\\n" + indentation) + "\\n" + prefix + "]" : ("[" + results.join(",") + "]")) : "[]";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: "If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + ":"}\n                  // be the concatenation of `member` and the `space` character."\n                  // The "`space` character" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + ":" + (whitespace ? " " : "") + element);\n                }\n              });\n              result = results.length ? (whitespace ? "{\\n" + indentation + results.join(",\\n" + indentation) + "\\n" + prefix + "}" : ("{" + results.join(",") + "}")) : "{}";\n            }\n            // Remove the object from the traversed object stack.\n            stack.pop();\n            return result;\n          }\n        };\n\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n            }\n          }\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = "", width > 10 && (width = 10); whitespace.length < width; whitespace += " ");\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          }\n          // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`""`) only if they are used directly within an object member list\n          // (e.g., `!("" in { "": 1})`).\n          return serialize("", (value = {}, value[""] = source, value), callback, properties, whitespace, "", []);\n        };\n      }\n\n      // Public: Parses a JSON source string.\n      if (!has("json-parse")) {\n        var fromCharCode = String.fromCharCode;\n\n        // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n        var Unescapes = {\n          92: "\\\\",\n          34: \'"\',\n          47: "/",\n          98: "\\b",\n          116: "\\t",\n          110: "\\n",\n          102: "\\f",\n          114: "\\r"\n        };\n\n        // Internal: Stores the parser state.\n        var Index, Source;\n\n        // Internal: Resets the parser state and throws a `SyntaxError`.\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        };\n\n        // Internal: Returns the next token, or `"$"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n        var lex = function () {\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n            switch (charCode) {\n              case 9: case 10: case 13: case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n              case 123: case 125: case 91: case 93: case 58: case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n              case 34:\n                // `"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = "@", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n                    switch (charCode) {\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index);\n                          // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        }\n                        // Revive the escaped character.\n                        value += fromCharCode("0x" + source.slice(begin, Index));\n                        break;\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n                    charCode = source.charCodeAt(Index);\n                    begin = Index;\n                    // Optimize for the common case where a string is valid.\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    }\n                    // Append the string as-is.\n                    value += source.slice(begin, Index);\n                  }\n                }\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                }\n                // Unterminated string.\n                abort();\n              default:\n                // Parse numbers and literals.\n                begin = Index;\n                // Advance past the negative sign, if one is specified.\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                }\n                // Parse an integer or floating-point value.\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n                  isSigned = false;\n                  // Parse the integer component.\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                  // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index;\n                    // Parse the decimal component.\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n                  charCode = source.charCodeAt(Index);\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index);\n                    // Skip past the sign following the exponent, if one is\n                    // specified.\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    }\n                    // Parse the exponential component.\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Coerce the parsed value to a JavaScript number.\n                  return +source.slice(begin, Index);\n                }\n                // A negative sign may only precede numbers.\n                if (isSigned) {\n                  abort();\n                }\n                // `true`, `false`, and `null` literals.\n                if (source.slice(Index, Index + 4) == "true") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == "false") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == "null") {\n                  Index += 4;\n                  return null;\n                }\n                // Unrecognized token.\n                abort();\n            }\n          }\n          // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n          return "$";\n        };\n\n        // Internal: Parses a JSON `value` token.\n        var get = function (value) {\n          var results, hasMembers;\n          if (value == "$") {\n            // Unexpected end of input.\n            abort();\n          }\n          if (typeof value == "string") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == "@") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            }\n            // Parse object and array literals.\n            if (value == "[") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing square bracket marks the end of the array literal.\n                if (value == "]") {\n                  break;\n                }\n                // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n                if (hasMembers) {\n                  if (value == ",") {\n                    value = lex();\n                    if (value == "]") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                }\n                // Elisions and leading commas are not permitted.\n                if (value == ",") {\n                  abort();\n                }\n                results.push(get(value));\n              }\n              return results;\n            } else if (value == "{") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing curly brace marks the end of the object literal.\n                if (value == "}") {\n                  break;\n                }\n                // If the object literal contains members, the current token\n                // should be a comma separator.\n                if (hasMembers) {\n                  if (value == ",") {\n                    value = lex();\n                    if (value == "}") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                }\n                // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n                if (value == "," || typeof value != "string" || (charIndexBuggy ? value.charAt(0) : value[0]) != "@" || lex() != ":") {\n                  abort();\n                }\n                results[value.slice(1)] = get(lex());\n              }\n              return results;\n            }\n            // Unexpected token encountered.\n            abort();\n          }\n          return value;\n        };\n\n        // Internal: Updates a traversed object member.\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        };\n\n        // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n        var walk = function (source, property, callback) {\n          var value = source[property], length;\n          if (typeof value == "object" && value) {\n            // `forEach` can\'t be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty("0")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n          return callback.call(source, property, value);\n        };\n\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = "" + source;\n          result = get(lex());\n          // If a JSON string contains multiple tokens, it is invalid.\n          if (lex() != "$") {\n            abort();\n          }\n          // Reset the parser state.\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[""] = result, value), "", callback) : result;\n        };\n      }\n    }\n\n    exports["runInContext"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root["JSON3"],\n        isRestored = false;\n\n    var JSON3 = runInContext(root, (root["JSON3"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      "noConflict": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root["JSON3"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n        return JSON3;\n      }\n    }));\n\n    root.JSON = {\n      "parse": JSON3.parse,\n      "stringify": JSON3.stringify\n    };\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n      return JSON3;\n    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n}).call(this);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35)(module), (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L34vanNvbjMvbGliL2pzb24zLmpzP2Q3MTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6ImtDQUFBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLGtDQUFrQyxpREFBaUQ7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLG9EQUFvRDtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsOEJBQThCO0FBQ3ZFO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFLDZCQUE2QjtBQUM3Rix1RUFBdUUsaUNBQWlDO0FBQ3hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvRUFBb0U7QUFDcEU7QUFDQSx1Q0FBdUMsVUFBVTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxnQkFBZ0I7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUVBQXFFO0FBQ3JFLDREQUE0RDtBQUM1RDtBQUNBO0FBQ0EsaURBQWlELE1BQU07QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmLHdEQUF3RCwwRUFBMEUsT0FBTywwQkFBMEIsU0FBUztBQUM1SztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxnRUFBZ0UsZ0JBQWdCO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLDJCQUEyQjtBQUM1RjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLE9BQU87QUFDckMsMENBQTBDO0FBQzFDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxLQUFLO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLGdCQUFnQjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxrQkFBa0I7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw2RkFBNkY7QUFDckgsbUVBQW1FO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLG1HQUFtRztBQUM3SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLG1HQUFtRztBQUM3STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEscUJBQXFCO0FBQ2xDO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsVUFBVTtBQUNuRDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0ZBQXdGO0FBQ3hGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUMiLCJmaWxlIjoiNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBKU09OIHYzLjMuMiB8IGh0dHA6Ly9iZXN0aWVqcy5naXRodWIuaW8vanNvbjMgfCBDb3B5cmlnaHQgMjAxMi0yMDE0LCBLaXQgQ2FtYnJpZGdlIHwgaHR0cDovL2tpdC5taXQtbGljZW5zZS5vcmcgKi9cbjsoZnVuY3Rpb24gKCkge1xuICAvLyBEZXRlY3QgdGhlIGBkZWZpbmVgIGZ1bmN0aW9uIGV4cG9zZWQgYnkgYXN5bmNocm9ub3VzIG1vZHVsZSBsb2FkZXJzLiBUaGVcbiAgLy8gc3RyaWN0IGBkZWZpbmVgIGNoZWNrIGlzIG5lY2Vzc2FyeSBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIGByLmpzYC5cbiAgdmFyIGlzTG9hZGVyID0gdHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQ7XG5cbiAgLy8gQSBzZXQgb2YgdHlwZXMgdXNlZCB0byBkaXN0aW5ndWlzaCBvYmplY3RzIGZyb20gcHJpbWl0aXZlcy5cbiAgdmFyIG9iamVjdFR5cGVzID0ge1xuICAgIFwiZnVuY3Rpb25cIjogdHJ1ZSxcbiAgICBcIm9iamVjdFwiOiB0cnVlXG4gIH07XG5cbiAgLy8gRGV0ZWN0IHRoZSBgZXhwb3J0c2Agb2JqZWN0IGV4cG9zZWQgYnkgQ29tbW9uSlMgaW1wbGVtZW50YXRpb25zLlxuICB2YXIgZnJlZUV4cG9ydHMgPSBvYmplY3RUeXBlc1t0eXBlb2YgZXhwb3J0c10gJiYgZXhwb3J0cyAmJiAhZXhwb3J0cy5ub2RlVHlwZSAmJiBleHBvcnRzO1xuXG4gIC8vIFVzZSB0aGUgYGdsb2JhbGAgb2JqZWN0IGV4cG9zZWQgYnkgTm9kZSAoaW5jbHVkaW5nIEJyb3dzZXJpZnkgdmlhXG4gIC8vIGBpbnNlcnQtbW9kdWxlLWdsb2JhbHNgKSwgTmFyd2hhbCwgYW5kIFJpbmdvIGFzIHRoZSBkZWZhdWx0IGNvbnRleHQsXG4gIC8vIGFuZCB0aGUgYHdpbmRvd2Agb2JqZWN0IGluIGJyb3dzZXJzLiBSaGlubyBleHBvcnRzIGEgYGdsb2JhbGAgZnVuY3Rpb25cbiAgLy8gaW5zdGVhZC5cbiAgdmFyIHJvb3QgPSBvYmplY3RUeXBlc1t0eXBlb2Ygd2luZG93XSAmJiB3aW5kb3cgfHwgdGhpcyxcbiAgICAgIGZyZWVHbG9iYWwgPSBmcmVlRXhwb3J0cyAmJiBvYmplY3RUeXBlc1t0eXBlb2YgbW9kdWxlXSAmJiBtb2R1bGUgJiYgIW1vZHVsZS5ub2RlVHlwZSAmJiB0eXBlb2YgZ2xvYmFsID09IFwib2JqZWN0XCIgJiYgZ2xvYmFsO1xuXG4gIGlmIChmcmVlR2xvYmFsICYmIChmcmVlR2xvYmFsW1wiZ2xvYmFsXCJdID09PSBmcmVlR2xvYmFsIHx8IGZyZWVHbG9iYWxbXCJ3aW5kb3dcIl0gPT09IGZyZWVHbG9iYWwgfHwgZnJlZUdsb2JhbFtcInNlbGZcIl0gPT09IGZyZWVHbG9iYWwpKSB7XG4gICAgcm9vdCA9IGZyZWVHbG9iYWw7XG4gIH1cblxuICAvLyBQdWJsaWM6IEluaXRpYWxpemVzIEpTT04gMyB1c2luZyB0aGUgZ2l2ZW4gYGNvbnRleHRgIG9iamVjdCwgYXR0YWNoaW5nIHRoZVxuICAvLyBgc3RyaW5naWZ5YCBhbmQgYHBhcnNlYCBmdW5jdGlvbnMgdG8gdGhlIHNwZWNpZmllZCBgZXhwb3J0c2Agb2JqZWN0LlxuICBmdW5jdGlvbiBydW5JbkNvbnRleHQoY29udGV4dCwgZXhwb3J0cykge1xuICAgIGNvbnRleHQgfHwgKGNvbnRleHQgPSByb290W1wiT2JqZWN0XCJdKCkpO1xuICAgIGV4cG9ydHMgfHwgKGV4cG9ydHMgPSByb290W1wiT2JqZWN0XCJdKCkpO1xuXG4gICAgLy8gTmF0aXZlIGNvbnN0cnVjdG9yIGFsaWFzZXMuXG4gICAgdmFyIE51bWJlciA9IGNvbnRleHRbXCJOdW1iZXJcIl0gfHwgcm9vdFtcIk51bWJlclwiXSxcbiAgICAgICAgU3RyaW5nID0gY29udGV4dFtcIlN0cmluZ1wiXSB8fCByb290W1wiU3RyaW5nXCJdLFxuICAgICAgICBPYmplY3QgPSBjb250ZXh0W1wiT2JqZWN0XCJdIHx8IHJvb3RbXCJPYmplY3RcIl0sXG4gICAgICAgIERhdGUgPSBjb250ZXh0W1wiRGF0ZVwiXSB8fCByb290W1wiRGF0ZVwiXSxcbiAgICAgICAgU3ludGF4RXJyb3IgPSBjb250ZXh0W1wiU3ludGF4RXJyb3JcIl0gfHwgcm9vdFtcIlN5bnRheEVycm9yXCJdLFxuICAgICAgICBUeXBlRXJyb3IgPSBjb250ZXh0W1wiVHlwZUVycm9yXCJdIHx8IHJvb3RbXCJUeXBlRXJyb3JcIl0sXG4gICAgICAgIE1hdGggPSBjb250ZXh0W1wiTWF0aFwiXSB8fCByb290W1wiTWF0aFwiXSxcbiAgICAgICAgbmF0aXZlSlNPTiA9IGNvbnRleHRbXCJKU09OXCJdIHx8IHJvb3RbXCJKU09OXCJdO1xuXG4gICAgLy8gRGVsZWdhdGUgdG8gdGhlIG5hdGl2ZSBgc3RyaW5naWZ5YCBhbmQgYHBhcnNlYCBpbXBsZW1lbnRhdGlvbnMuXG4gICAgaWYgKHR5cGVvZiBuYXRpdmVKU09OID09IFwib2JqZWN0XCIgJiYgbmF0aXZlSlNPTikge1xuICAgICAgZXhwb3J0cy5zdHJpbmdpZnkgPSBuYXRpdmVKU09OLnN0cmluZ2lmeTtcbiAgICAgIGV4cG9ydHMucGFyc2UgPSBuYXRpdmVKU09OLnBhcnNlO1xuICAgIH1cblxuICAgIC8vIENvbnZlbmllbmNlIGFsaWFzZXMuXG4gICAgdmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZSxcbiAgICAgICAgZ2V0Q2xhc3MgPSBvYmplY3RQcm90by50b1N0cmluZyxcbiAgICAgICAgaXNQcm9wZXJ0eSwgZm9yRWFjaCwgdW5kZWY7XG5cbiAgICAvLyBUZXN0IHRoZSBgRGF0ZSNnZXRVVEMqYCBtZXRob2RzLiBCYXNlZCBvbiB3b3JrIGJ5IEBZYWZmbGUuXG4gICAgdmFyIGlzRXh0ZW5kZWQgPSBuZXcgRGF0ZSgtMzUwOTgyNzMzNDU3MzI5Mik7XG4gICAgdHJ5IHtcbiAgICAgIC8vIFRoZSBgZ2V0VVRDRnVsbFllYXJgLCBgTW9udGhgLCBhbmQgYERhdGVgIG1ldGhvZHMgcmV0dXJuIG5vbnNlbnNpY2FsXG4gICAgICAvLyByZXN1bHRzIGZvciBjZXJ0YWluIGRhdGVzIGluIE9wZXJhID49IDEwLjUzLlxuICAgICAgaXNFeHRlbmRlZCA9IGlzRXh0ZW5kZWQuZ2V0VVRDRnVsbFllYXIoKSA9PSAtMTA5MjUyICYmIGlzRXh0ZW5kZWQuZ2V0VVRDTW9udGgoKSA9PT0gMCAmJiBpc0V4dGVuZGVkLmdldFVUQ0RhdGUoKSA9PT0gMSAmJlxuICAgICAgICAvLyBTYWZhcmkgPCAyLjAuMiBzdG9yZXMgdGhlIGludGVybmFsIG1pbGxpc2Vjb25kIHRpbWUgdmFsdWUgY29ycmVjdGx5LFxuICAgICAgICAvLyBidXQgY2xpcHMgdGhlIHZhbHVlcyByZXR1cm5lZCBieSB0aGUgZGF0ZSBtZXRob2RzIHRvIHRoZSByYW5nZSBvZlxuICAgICAgICAvLyBzaWduZWQgMzItYml0IGludGVnZXJzIChbLTIgKiogMzEsIDIgKiogMzEgLSAxXSkuXG4gICAgICAgIGlzRXh0ZW5kZWQuZ2V0VVRDSG91cnMoKSA9PSAxMCAmJiBpc0V4dGVuZGVkLmdldFVUQ01pbnV0ZXMoKSA9PSAzNyAmJiBpc0V4dGVuZGVkLmdldFVUQ1NlY29uZHMoKSA9PSA2ICYmIGlzRXh0ZW5kZWQuZ2V0VVRDTWlsbGlzZWNvbmRzKCkgPT0gNzA4O1xuICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikge31cblxuICAgIC8vIEludGVybmFsOiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIG5hdGl2ZSBgSlNPTi5zdHJpbmdpZnlgIGFuZCBgcGFyc2VgXG4gICAgLy8gaW1wbGVtZW50YXRpb25zIGFyZSBzcGVjLWNvbXBsaWFudC4gQmFzZWQgb24gd29yayBieSBLZW4gU255ZGVyLlxuICAgIGZ1bmN0aW9uIGhhcyhuYW1lKSB7XG4gICAgICBpZiAoaGFzW25hbWVdICE9PSB1bmRlZikge1xuICAgICAgICAvLyBSZXR1cm4gY2FjaGVkIGZlYXR1cmUgdGVzdCByZXN1bHQuXG4gICAgICAgIHJldHVybiBoYXNbbmFtZV07XG4gICAgICB9XG4gICAgICB2YXIgaXNTdXBwb3J0ZWQ7XG4gICAgICBpZiAobmFtZSA9PSBcImJ1Zy1zdHJpbmctY2hhci1pbmRleFwiKSB7XG4gICAgICAgIC8vIElFIDw9IDcgZG9lc24ndCBzdXBwb3J0IGFjY2Vzc2luZyBzdHJpbmcgY2hhcmFjdGVycyB1c2luZyBzcXVhcmVcbiAgICAgICAgLy8gYnJhY2tldCBub3RhdGlvbi4gSUUgOCBvbmx5IHN1cHBvcnRzIHRoaXMgZm9yIHByaW1pdGl2ZXMuXG4gICAgICAgIGlzU3VwcG9ydGVkID0gXCJhXCJbMF0gIT0gXCJhXCI7XG4gICAgICB9IGVsc2UgaWYgKG5hbWUgPT0gXCJqc29uXCIpIHtcbiAgICAgICAgLy8gSW5kaWNhdGVzIHdoZXRoZXIgYm90aCBgSlNPTi5zdHJpbmdpZnlgIGFuZCBgSlNPTi5wYXJzZWAgYXJlXG4gICAgICAgIC8vIHN1cHBvcnRlZC5cbiAgICAgICAgaXNTdXBwb3J0ZWQgPSBoYXMoXCJqc29uLXN0cmluZ2lmeVwiKSAmJiBoYXMoXCJqc29uLXBhcnNlXCIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHZhbHVlLCBzZXJpYWxpemVkID0gJ3tcImFcIjpbMSx0cnVlLGZhbHNlLG51bGwsXCJcXFxcdTAwMDBcXFxcYlxcXFxuXFxcXGZcXFxcclxcXFx0XCJdfSc7XG4gICAgICAgIC8vIFRlc3QgYEpTT04uc3RyaW5naWZ5YC5cbiAgICAgICAgaWYgKG5hbWUgPT0gXCJqc29uLXN0cmluZ2lmeVwiKSB7XG4gICAgICAgICAgdmFyIHN0cmluZ2lmeSA9IGV4cG9ydHMuc3RyaW5naWZ5LCBzdHJpbmdpZnlTdXBwb3J0ZWQgPSB0eXBlb2Ygc3RyaW5naWZ5ID09IFwiZnVuY3Rpb25cIiAmJiBpc0V4dGVuZGVkO1xuICAgICAgICAgIGlmIChzdHJpbmdpZnlTdXBwb3J0ZWQpIHtcbiAgICAgICAgICAgIC8vIEEgdGVzdCBmdW5jdGlvbiBvYmplY3Qgd2l0aCBhIGN1c3RvbSBgdG9KU09OYCBtZXRob2QuXG4gICAgICAgICAgICAodmFsdWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICAgICAgfSkudG9KU09OID0gdmFsdWU7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICBzdHJpbmdpZnlTdXBwb3J0ZWQgPVxuICAgICAgICAgICAgICAgIC8vIEZpcmVmb3ggMy4xYjEgYW5kIGIyIHNlcmlhbGl6ZSBzdHJpbmcsIG51bWJlciwgYW5kIGJvb2xlYW5cbiAgICAgICAgICAgICAgICAvLyBwcmltaXRpdmVzIGFzIG9iamVjdCBsaXRlcmFscy5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkoMCkgPT09IFwiMFwiICYmXG4gICAgICAgICAgICAgICAgLy8gRkYgMy4xYjEsIGIyLCBhbmQgSlNPTiAyIHNlcmlhbGl6ZSB3cmFwcGVkIHByaW1pdGl2ZXMgYXMgb2JqZWN0XG4gICAgICAgICAgICAgICAgLy8gbGl0ZXJhbHMuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KG5ldyBOdW1iZXIoKSkgPT09IFwiMFwiICYmXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KG5ldyBTdHJpbmcoKSkgPT0gJ1wiXCInICYmXG4gICAgICAgICAgICAgICAgLy8gRkYgMy4xYjEsIDIgdGhyb3cgYW4gZXJyb3IgaWYgdGhlIHZhbHVlIGlzIGBudWxsYCwgYHVuZGVmaW5lZGAsIG9yXG4gICAgICAgICAgICAgICAgLy8gZG9lcyBub3QgZGVmaW5lIGEgY2Fub25pY2FsIEpTT04gcmVwcmVzZW50YXRpb24gKHRoaXMgYXBwbGllcyB0b1xuICAgICAgICAgICAgICAgIC8vIG9iamVjdHMgd2l0aCBgdG9KU09OYCBwcm9wZXJ0aWVzIGFzIHdlbGwsICp1bmxlc3MqIHRoZXkgYXJlIG5lc3RlZFxuICAgICAgICAgICAgICAgIC8vIHdpdGhpbiBhbiBvYmplY3Qgb3IgYXJyYXkpLlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShnZXRDbGFzcykgPT09IHVuZGVmICYmXG4gICAgICAgICAgICAgICAgLy8gSUUgOCBzZXJpYWxpemVzIGB1bmRlZmluZWRgIGFzIGBcInVuZGVmaW5lZFwiYC4gU2FmYXJpIDw9IDUuMS43IGFuZFxuICAgICAgICAgICAgICAgIC8vIEZGIDMuMWIzIHBhc3MgdGhpcyB0ZXN0LlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeSh1bmRlZikgPT09IHVuZGVmICYmXG4gICAgICAgICAgICAgICAgLy8gU2FmYXJpIDw9IDUuMS43IGFuZCBGRiAzLjFiMyB0aHJvdyBgRXJyb3JgcyBhbmQgYFR5cGVFcnJvcmBzLFxuICAgICAgICAgICAgICAgIC8vIHJlc3BlY3RpdmVseSwgaWYgdGhlIHZhbHVlIGlzIG9taXR0ZWQgZW50aXJlbHkuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KCkgPT09IHVuZGVmICYmXG4gICAgICAgICAgICAgICAgLy8gRkYgMy4xYjEsIDIgdGhyb3cgYW4gZXJyb3IgaWYgdGhlIGdpdmVuIHZhbHVlIGlzIG5vdCBhIG51bWJlcixcbiAgICAgICAgICAgICAgICAvLyBzdHJpbmcsIGFycmF5LCBvYmplY3QsIEJvb2xlYW4sIG9yIGBudWxsYCBsaXRlcmFsLiBUaGlzIGFwcGxpZXMgdG9cbiAgICAgICAgICAgICAgICAvLyBvYmplY3RzIHdpdGggY3VzdG9tIGB0b0pTT05gIG1ldGhvZHMgYXMgd2VsbCwgdW5sZXNzIHRoZXkgYXJlIG5lc3RlZFxuICAgICAgICAgICAgICAgIC8vIGluc2lkZSBvYmplY3Qgb3IgYXJyYXkgbGl0ZXJhbHMuIFlVSSAzLjAuMGIxIGlnbm9yZXMgY3VzdG9tIGB0b0pTT05gXG4gICAgICAgICAgICAgICAgLy8gbWV0aG9kcyBlbnRpcmVseS5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkodmFsdWUpID09PSBcIjFcIiAmJlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShbdmFsdWVdKSA9PSBcIlsxXVwiICYmXG4gICAgICAgICAgICAgICAgLy8gUHJvdG90eXBlIDw9IDEuNi4xIHNlcmlhbGl6ZXMgYFt1bmRlZmluZWRdYCBhcyBgXCJbXVwiYCBpbnN0ZWFkIG9mXG4gICAgICAgICAgICAgICAgLy8gYFwiW251bGxdXCJgLlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShbdW5kZWZdKSA9PSBcIltudWxsXVwiICYmXG4gICAgICAgICAgICAgICAgLy8gWVVJIDMuMC4wYjEgZmFpbHMgdG8gc2VyaWFsaXplIGBudWxsYCBsaXRlcmFscy5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkobnVsbCkgPT0gXCJudWxsXCIgJiZcbiAgICAgICAgICAgICAgICAvLyBGRiAzLjFiMSwgMiBoYWx0cyBzZXJpYWxpemF0aW9uIGlmIGFuIGFycmF5IGNvbnRhaW5zIGEgZnVuY3Rpb246XG4gICAgICAgICAgICAgICAgLy8gYFsxLCB0cnVlLCBnZXRDbGFzcywgMV1gIHNlcmlhbGl6ZXMgYXMgXCJbMSx0cnVlLF0sXCIuIEZGIDMuMWIzXG4gICAgICAgICAgICAgICAgLy8gZWxpZGVzIG5vbi1KU09OIHZhbHVlcyBmcm9tIG9iamVjdHMgYW5kIGFycmF5cywgdW5sZXNzIHRoZXlcbiAgICAgICAgICAgICAgICAvLyBkZWZpbmUgY3VzdG9tIGB0b0pTT05gIG1ldGhvZHMuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KFt1bmRlZiwgZ2V0Q2xhc3MsIG51bGxdKSA9PSBcIltudWxsLG51bGwsbnVsbF1cIiAmJlxuICAgICAgICAgICAgICAgIC8vIFNpbXBsZSBzZXJpYWxpemF0aW9uIHRlc3QuIEZGIDMuMWIxIHVzZXMgVW5pY29kZSBlc2NhcGUgc2VxdWVuY2VzXG4gICAgICAgICAgICAgICAgLy8gd2hlcmUgY2hhcmFjdGVyIGVzY2FwZSBjb2RlcyBhcmUgZXhwZWN0ZWQgKGUuZy4sIGBcXGJgID0+IGBcXHUwMDA4YCkuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KHsgXCJhXCI6IFt2YWx1ZSwgdHJ1ZSwgZmFsc2UsIG51bGwsIFwiXFx4MDBcXGJcXG5cXGZcXHJcXHRcIl0gfSkgPT0gc2VyaWFsaXplZCAmJlxuICAgICAgICAgICAgICAgIC8vIEZGIDMuMWIxIGFuZCBiMiBpZ25vcmUgdGhlIGBmaWx0ZXJgIGFuZCBgd2lkdGhgIGFyZ3VtZW50cy5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkobnVsbCwgdmFsdWUpID09PSBcIjFcIiAmJlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShbMSwgMl0sIG51bGwsIDEpID09IFwiW1xcbiAxLFxcbiAyXFxuXVwiICYmXG4gICAgICAgICAgICAgICAgLy8gSlNPTiAyLCBQcm90b3R5cGUgPD0gMS43LCBhbmQgb2xkZXIgV2ViS2l0IGJ1aWxkcyBpbmNvcnJlY3RseVxuICAgICAgICAgICAgICAgIC8vIHNlcmlhbGl6ZSBleHRlbmRlZCB5ZWFycy5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkobmV3IERhdGUoLTguNjRlMTUpKSA9PSAnXCItMjcxODIxLTA0LTIwVDAwOjAwOjAwLjAwMFpcIicgJiZcbiAgICAgICAgICAgICAgICAvLyBUaGUgbWlsbGlzZWNvbmRzIGFyZSBvcHRpb25hbCBpbiBFUyA1LCBidXQgcmVxdWlyZWQgaW4gNS4xLlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShuZXcgRGF0ZSg4LjY0ZTE1KSkgPT0gJ1wiKzI3NTc2MC0wOS0xM1QwMDowMDowMC4wMDBaXCInICYmXG4gICAgICAgICAgICAgICAgLy8gRmlyZWZveCA8PSAxMS4wIGluY29ycmVjdGx5IHNlcmlhbGl6ZXMgeWVhcnMgcHJpb3IgdG8gMCBhcyBuZWdhdGl2ZVxuICAgICAgICAgICAgICAgIC8vIGZvdXItZGlnaXQgeWVhcnMgaW5zdGVhZCBvZiBzaXgtZGlnaXQgeWVhcnMuIENyZWRpdHM6IEBZYWZmbGUuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KG5ldyBEYXRlKC02MjE5ODc1NTJlNSkpID09ICdcIi0wMDAwMDEtMDEtMDFUMDA6MDA6MDAuMDAwWlwiJyAmJlxuICAgICAgICAgICAgICAgIC8vIFNhZmFyaSA8PSA1LjEuNSBhbmQgT3BlcmEgPj0gMTAuNTMgaW5jb3JyZWN0bHkgc2VyaWFsaXplIG1pbGxpc2Vjb25kXG4gICAgICAgICAgICAgICAgLy8gdmFsdWVzIGxlc3MgdGhhbiAxMDAwLiBDcmVkaXRzOiBAWWFmZmxlLlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShuZXcgRGF0ZSgtMSkpID09ICdcIjE5NjktMTItMzFUMjM6NTk6NTkuOTk5WlwiJztcbiAgICAgICAgICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikge1xuICAgICAgICAgICAgICBzdHJpbmdpZnlTdXBwb3J0ZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaXNTdXBwb3J0ZWQgPSBzdHJpbmdpZnlTdXBwb3J0ZWQ7XG4gICAgICAgIH1cbiAgICAgICAgLy8gVGVzdCBgSlNPTi5wYXJzZWAuXG4gICAgICAgIGlmIChuYW1lID09IFwianNvbi1wYXJzZVwiKSB7XG4gICAgICAgICAgdmFyIHBhcnNlID0gZXhwb3J0cy5wYXJzZTtcbiAgICAgICAgICBpZiAodHlwZW9mIHBhcnNlID09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgLy8gRkYgMy4xYjEsIGIyIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGEgYmFyZSBsaXRlcmFsIGlzIHByb3ZpZGVkLlxuICAgICAgICAgICAgICAvLyBDb25mb3JtaW5nIGltcGxlbWVudGF0aW9ucyBzaG91bGQgYWxzbyBjb2VyY2UgdGhlIGluaXRpYWwgYXJndW1lbnQgdG9cbiAgICAgICAgICAgICAgLy8gYSBzdHJpbmcgcHJpb3IgdG8gcGFyc2luZy5cbiAgICAgICAgICAgICAgaWYgKHBhcnNlKFwiMFwiKSA9PT0gMCAmJiAhcGFyc2UoZmFsc2UpKSB7XG4gICAgICAgICAgICAgICAgLy8gU2ltcGxlIHBhcnNpbmcgdGVzdC5cbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHBhcnNlKHNlcmlhbGl6ZWQpO1xuICAgICAgICAgICAgICAgIHZhciBwYXJzZVN1cHBvcnRlZCA9IHZhbHVlW1wiYVwiXS5sZW5ndGggPT0gNSAmJiB2YWx1ZVtcImFcIl1bMF0gPT09IDE7XG4gICAgICAgICAgICAgICAgaWYgKHBhcnNlU3VwcG9ydGVkKSB7XG4gICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAvLyBTYWZhcmkgPD0gNS4xLjIgYW5kIEZGIDMuMWIxIGFsbG93IHVuZXNjYXBlZCB0YWJzIGluIHN0cmluZ3MuXG4gICAgICAgICAgICAgICAgICAgIHBhcnNlU3VwcG9ydGVkID0gIXBhcnNlKCdcIlxcdFwiJyk7XG4gICAgICAgICAgICAgICAgICB9IGNhdGNoIChleGNlcHRpb24pIHt9XG4gICAgICAgICAgICAgICAgICBpZiAocGFyc2VTdXBwb3J0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAvLyBGRiA0LjAgYW5kIDQuMC4xIGFsbG93IGxlYWRpbmcgYCtgIHNpZ25zIGFuZCBsZWFkaW5nXG4gICAgICAgICAgICAgICAgICAgICAgLy8gZGVjaW1hbCBwb2ludHMuIEZGIDQuMCwgNC4wLjEsIGFuZCBJRSA5LTEwIGFsc28gYWxsb3dcbiAgICAgICAgICAgICAgICAgICAgICAvLyBjZXJ0YWluIG9jdGFsIGxpdGVyYWxzLlxuICAgICAgICAgICAgICAgICAgICAgIHBhcnNlU3VwcG9ydGVkID0gcGFyc2UoXCIwMVwiKSAhPT0gMTtcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXhjZXB0aW9uKSB7fVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgaWYgKHBhcnNlU3VwcG9ydGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgLy8gRkYgNC4wLCA0LjAuMSwgYW5kIFJoaW5vIDEuN1IzLVI0IGFsbG93IHRyYWlsaW5nIGRlY2ltYWxcbiAgICAgICAgICAgICAgICAgICAgICAvLyBwb2ludHMuIFRoZXNlIGVudmlyb25tZW50cywgYWxvbmcgd2l0aCBGRiAzLjFiMSBhbmQgMixcbiAgICAgICAgICAgICAgICAgICAgICAvLyBhbHNvIGFsbG93IHRyYWlsaW5nIGNvbW1hcyBpbiBKU09OIG9iamVjdHMgYW5kIGFycmF5cy5cbiAgICAgICAgICAgICAgICAgICAgICBwYXJzZVN1cHBvcnRlZCA9IHBhcnNlKFwiMS5cIikgIT09IDE7XG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikge31cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikge1xuICAgICAgICAgICAgICBwYXJzZVN1cHBvcnRlZCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpc1N1cHBvcnRlZCA9IHBhcnNlU3VwcG9ydGVkO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gaGFzW25hbWVdID0gISFpc1N1cHBvcnRlZDtcbiAgICB9XG5cbiAgICBpZiAoIWhhcyhcImpzb25cIikpIHtcbiAgICAgIC8vIENvbW1vbiBgW1tDbGFzc11dYCBuYW1lIGFsaWFzZXMuXG4gICAgICB2YXIgZnVuY3Rpb25DbGFzcyA9IFwiW29iamVjdCBGdW5jdGlvbl1cIixcbiAgICAgICAgICBkYXRlQ2xhc3MgPSBcIltvYmplY3QgRGF0ZV1cIixcbiAgICAgICAgICBudW1iZXJDbGFzcyA9IFwiW29iamVjdCBOdW1iZXJdXCIsXG4gICAgICAgICAgc3RyaW5nQ2xhc3MgPSBcIltvYmplY3QgU3RyaW5nXVwiLFxuICAgICAgICAgIGFycmF5Q2xhc3MgPSBcIltvYmplY3QgQXJyYXldXCIsXG4gICAgICAgICAgYm9vbGVhbkNsYXNzID0gXCJbb2JqZWN0IEJvb2xlYW5dXCI7XG5cbiAgICAgIC8vIERldGVjdCBpbmNvbXBsZXRlIHN1cHBvcnQgZm9yIGFjY2Vzc2luZyBzdHJpbmcgY2hhcmFjdGVycyBieSBpbmRleC5cbiAgICAgIHZhciBjaGFySW5kZXhCdWdneSA9IGhhcyhcImJ1Zy1zdHJpbmctY2hhci1pbmRleFwiKTtcblxuICAgICAgLy8gRGVmaW5lIGFkZGl0aW9uYWwgdXRpbGl0eSBtZXRob2RzIGlmIHRoZSBgRGF0ZWAgbWV0aG9kcyBhcmUgYnVnZ3kuXG4gICAgICBpZiAoIWlzRXh0ZW5kZWQpIHtcbiAgICAgICAgdmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbiAgICAgICAgLy8gQSBtYXBwaW5nIGJldHdlZW4gdGhlIG1vbnRocyBvZiB0aGUgeWVhciBhbmQgdGhlIG51bWJlciBvZiBkYXlzIGJldHdlZW5cbiAgICAgICAgLy8gSmFudWFyeSAxc3QgYW5kIHRoZSBmaXJzdCBvZiB0aGUgcmVzcGVjdGl2ZSBtb250aC5cbiAgICAgICAgdmFyIE1vbnRocyA9IFswLCAzMSwgNTksIDkwLCAxMjAsIDE1MSwgMTgxLCAyMTIsIDI0MywgMjczLCAzMDQsIDMzNF07XG4gICAgICAgIC8vIEludGVybmFsOiBDYWxjdWxhdGVzIHRoZSBudW1iZXIgb2YgZGF5cyBiZXR3ZWVuIHRoZSBVbml4IGVwb2NoIGFuZCB0aGVcbiAgICAgICAgLy8gZmlyc3QgZGF5IG9mIHRoZSBnaXZlbiBtb250aC5cbiAgICAgICAgdmFyIGdldERheSA9IGZ1bmN0aW9uICh5ZWFyLCBtb250aCkge1xuICAgICAgICAgIHJldHVybiBNb250aHNbbW9udGhdICsgMzY1ICogKHllYXIgLSAxOTcwKSArIGZsb29yKCh5ZWFyIC0gMTk2OSArIChtb250aCA9ICsobW9udGggPiAxKSkpIC8gNCkgLSBmbG9vcigoeWVhciAtIDE5MDEgKyBtb250aCkgLyAxMDApICsgZmxvb3IoKHllYXIgLSAxNjAxICsgbW9udGgpIC8gNDAwKTtcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgLy8gSW50ZXJuYWw6IERldGVybWluZXMgaWYgYSBwcm9wZXJ0eSBpcyBhIGRpcmVjdCBwcm9wZXJ0eSBvZiB0aGUgZ2l2ZW5cbiAgICAgIC8vIG9iamVjdC4gRGVsZWdhdGVzIHRvIHRoZSBuYXRpdmUgYE9iamVjdCNoYXNPd25Qcm9wZXJ0eWAgbWV0aG9kLlxuICAgICAgaWYgKCEoaXNQcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5KSkge1xuICAgICAgICBpc1Byb3BlcnR5ID0gZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgICAgICAgdmFyIG1lbWJlcnMgPSB7fSwgY29uc3RydWN0b3I7XG4gICAgICAgICAgaWYgKChtZW1iZXJzLl9fcHJvdG9fXyA9IG51bGwsIG1lbWJlcnMuX19wcm90b19fID0ge1xuICAgICAgICAgICAgLy8gVGhlICpwcm90byogcHJvcGVydHkgY2Fubm90IGJlIHNldCBtdWx0aXBsZSB0aW1lcyBpbiByZWNlbnRcbiAgICAgICAgICAgIC8vIHZlcnNpb25zIG9mIEZpcmVmb3ggYW5kIFNlYU1vbmtleS5cbiAgICAgICAgICAgIFwidG9TdHJpbmdcIjogMVxuICAgICAgICAgIH0sIG1lbWJlcnMpLnRvU3RyaW5nICE9IGdldENsYXNzKSB7XG4gICAgICAgICAgICAvLyBTYWZhcmkgPD0gMi4wLjMgZG9lc24ndCBpbXBsZW1lbnQgYE9iamVjdCNoYXNPd25Qcm9wZXJ0eWAsIGJ1dFxuICAgICAgICAgICAgLy8gc3VwcG9ydHMgdGhlIG11dGFibGUgKnByb3RvKiBwcm9wZXJ0eS5cbiAgICAgICAgICAgIGlzUHJvcGVydHkgPSBmdW5jdGlvbiAocHJvcGVydHkpIHtcbiAgICAgICAgICAgICAgLy8gQ2FwdHVyZSBhbmQgYnJlYWsgdGhlIG9iamVjdCdzIHByb3RvdHlwZSBjaGFpbiAoc2VlIHNlY3Rpb24gOC42LjJcbiAgICAgICAgICAgICAgLy8gb2YgdGhlIEVTIDUuMSBzcGVjKS4gVGhlIHBhcmVudGhlc2l6ZWQgZXhwcmVzc2lvbiBwcmV2ZW50cyBhblxuICAgICAgICAgICAgICAvLyB1bnNhZmUgdHJhbnNmb3JtYXRpb24gYnkgdGhlIENsb3N1cmUgQ29tcGlsZXIuXG4gICAgICAgICAgICAgIHZhciBvcmlnaW5hbCA9IHRoaXMuX19wcm90b19fLCByZXN1bHQgPSBwcm9wZXJ0eSBpbiAodGhpcy5fX3Byb3RvX18gPSBudWxsLCB0aGlzKTtcbiAgICAgICAgICAgICAgLy8gUmVzdG9yZSB0aGUgb3JpZ2luYWwgcHJvdG90eXBlIGNoYWluLlxuICAgICAgICAgICAgICB0aGlzLl9fcHJvdG9fXyA9IG9yaWdpbmFsO1xuICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gQ2FwdHVyZSBhIHJlZmVyZW5jZSB0byB0aGUgdG9wLWxldmVsIGBPYmplY3RgIGNvbnN0cnVjdG9yLlxuICAgICAgICAgICAgY29uc3RydWN0b3IgPSBtZW1iZXJzLmNvbnN0cnVjdG9yO1xuICAgICAgICAgICAgLy8gVXNlIHRoZSBgY29uc3RydWN0b3JgIHByb3BlcnR5IHRvIHNpbXVsYXRlIGBPYmplY3QjaGFzT3duUHJvcGVydHlgIGluXG4gICAgICAgICAgICAvLyBvdGhlciBlbnZpcm9ubWVudHMuXG4gICAgICAgICAgICBpc1Byb3BlcnR5ID0gZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgICAgICAgICAgIHZhciBwYXJlbnQgPSAodGhpcy5jb25zdHJ1Y3RvciB8fCBjb25zdHJ1Y3RvcikucHJvdG90eXBlO1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcGVydHkgaW4gdGhpcyAmJiAhKHByb3BlcnR5IGluIHBhcmVudCAmJiB0aGlzW3Byb3BlcnR5XSA9PT0gcGFyZW50W3Byb3BlcnR5XSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH1cbiAgICAgICAgICBtZW1iZXJzID0gbnVsbDtcbiAgICAgICAgICByZXR1cm4gaXNQcm9wZXJ0eS5jYWxsKHRoaXMsIHByb3BlcnR5KTtcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgLy8gSW50ZXJuYWw6IE5vcm1hbGl6ZXMgdGhlIGBmb3IuLi5pbmAgaXRlcmF0aW9uIGFsZ29yaXRobSBhY3Jvc3NcbiAgICAgIC8vIGVudmlyb25tZW50cy4gRWFjaCBlbnVtZXJhdGVkIGtleSBpcyB5aWVsZGVkIHRvIGEgYGNhbGxiYWNrYCBmdW5jdGlvbi5cbiAgICAgIGZvckVhY2ggPSBmdW5jdGlvbiAob2JqZWN0LCBjYWxsYmFjaykge1xuICAgICAgICB2YXIgc2l6ZSA9IDAsIFByb3BlcnRpZXMsIG1lbWJlcnMsIHByb3BlcnR5O1xuXG4gICAgICAgIC8vIFRlc3RzIGZvciBidWdzIGluIHRoZSBjdXJyZW50IGVudmlyb25tZW50J3MgYGZvci4uLmluYCBhbGdvcml0aG0uIFRoZVxuICAgICAgICAvLyBgdmFsdWVPZmAgcHJvcGVydHkgaW5oZXJpdHMgdGhlIG5vbi1lbnVtZXJhYmxlIGZsYWcgZnJvbVxuICAgICAgICAvLyBgT2JqZWN0LnByb3RvdHlwZWAgaW4gb2xkZXIgdmVyc2lvbnMgb2YgSUUsIE5ldHNjYXBlLCBhbmQgTW96aWxsYS5cbiAgICAgICAgKFByb3BlcnRpZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgdGhpcy52YWx1ZU9mID0gMDtcbiAgICAgICAgfSkucHJvdG90eXBlLnZhbHVlT2YgPSAwO1xuXG4gICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgYFByb3BlcnRpZXNgIGNsYXNzLlxuICAgICAgICBtZW1iZXJzID0gbmV3IFByb3BlcnRpZXMoKTtcbiAgICAgICAgZm9yIChwcm9wZXJ0eSBpbiBtZW1iZXJzKSB7XG4gICAgICAgICAgLy8gSWdub3JlIGFsbCBwcm9wZXJ0aWVzIGluaGVyaXRlZCBmcm9tIGBPYmplY3QucHJvdG90eXBlYC5cbiAgICAgICAgICBpZiAoaXNQcm9wZXJ0eS5jYWxsKG1lbWJlcnMsIHByb3BlcnR5KSkge1xuICAgICAgICAgICAgc2l6ZSsrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBQcm9wZXJ0aWVzID0gbWVtYmVycyA9IG51bGw7XG5cbiAgICAgICAgLy8gTm9ybWFsaXplIHRoZSBpdGVyYXRpb24gYWxnb3JpdGhtLlxuICAgICAgICBpZiAoIXNpemUpIHtcbiAgICAgICAgICAvLyBBIGxpc3Qgb2Ygbm9uLWVudW1lcmFibGUgcHJvcGVydGllcyBpbmhlcml0ZWQgZnJvbSBgT2JqZWN0LnByb3RvdHlwZWAuXG4gICAgICAgICAgbWVtYmVycyA9IFtcInZhbHVlT2ZcIiwgXCJ0b1N0cmluZ1wiLCBcInRvTG9jYWxlU3RyaW5nXCIsIFwicHJvcGVydHlJc0VudW1lcmFibGVcIiwgXCJpc1Byb3RvdHlwZU9mXCIsIFwiaGFzT3duUHJvcGVydHlcIiwgXCJjb25zdHJ1Y3RvclwiXTtcbiAgICAgICAgICAvLyBJRSA8PSA4LCBNb3ppbGxhIDEuMCwgYW5kIE5ldHNjYXBlIDYuMiBpZ25vcmUgc2hhZG93ZWQgbm9uLWVudW1lcmFibGVcbiAgICAgICAgICAvLyBwcm9wZXJ0aWVzLlxuICAgICAgICAgIGZvckVhY2ggPSBmdW5jdGlvbiAob2JqZWN0LCBjYWxsYmFjaykge1xuICAgICAgICAgICAgdmFyIGlzRnVuY3Rpb24gPSBnZXRDbGFzcy5jYWxsKG9iamVjdCkgPT0gZnVuY3Rpb25DbGFzcywgcHJvcGVydHksIGxlbmd0aDtcbiAgICAgICAgICAgIHZhciBoYXNQcm9wZXJ0eSA9ICFpc0Z1bmN0aW9uICYmIHR5cGVvZiBvYmplY3QuY29uc3RydWN0b3IgIT0gXCJmdW5jdGlvblwiICYmIG9iamVjdFR5cGVzW3R5cGVvZiBvYmplY3QuaGFzT3duUHJvcGVydHldICYmIG9iamVjdC5oYXNPd25Qcm9wZXJ0eSB8fCBpc1Byb3BlcnR5O1xuICAgICAgICAgICAgZm9yIChwcm9wZXJ0eSBpbiBvYmplY3QpIHtcbiAgICAgICAgICAgICAgLy8gR2Vja28gPD0gMS4wIGVudW1lcmF0ZXMgdGhlIGBwcm90b3R5cGVgIHByb3BlcnR5IG9mIGZ1bmN0aW9ucyB1bmRlclxuICAgICAgICAgICAgICAvLyBjZXJ0YWluIGNvbmRpdGlvbnM7IElFIGRvZXMgbm90LlxuICAgICAgICAgICAgICBpZiAoIShpc0Z1bmN0aW9uICYmIHByb3BlcnR5ID09IFwicHJvdG90eXBlXCIpICYmIGhhc1Byb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSkpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhwcm9wZXJ0eSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIE1hbnVhbGx5IGludm9rZSB0aGUgY2FsbGJhY2sgZm9yIGVhY2ggbm9uLWVudW1lcmFibGUgcHJvcGVydHkuXG4gICAgICAgICAgICBmb3IgKGxlbmd0aCA9IG1lbWJlcnMubGVuZ3RoOyBwcm9wZXJ0eSA9IG1lbWJlcnNbLS1sZW5ndGhdOyBoYXNQcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpICYmIGNhbGxiYWNrKHByb3BlcnR5KSk7XG4gICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIGlmIChzaXplID09IDIpIHtcbiAgICAgICAgICAvLyBTYWZhcmkgPD0gMi4wLjQgZW51bWVyYXRlcyBzaGFkb3dlZCBwcm9wZXJ0aWVzIHR3aWNlLlxuICAgICAgICAgIGZvckVhY2ggPSBmdW5jdGlvbiAob2JqZWN0LCBjYWxsYmFjaykge1xuICAgICAgICAgICAgLy8gQ3JlYXRlIGEgc2V0IG9mIGl0ZXJhdGVkIHByb3BlcnRpZXMuXG4gICAgICAgICAgICB2YXIgbWVtYmVycyA9IHt9LCBpc0Z1bmN0aW9uID0gZ2V0Q2xhc3MuY2FsbChvYmplY3QpID09IGZ1bmN0aW9uQ2xhc3MsIHByb3BlcnR5O1xuICAgICAgICAgICAgZm9yIChwcm9wZXJ0eSBpbiBvYmplY3QpIHtcbiAgICAgICAgICAgICAgLy8gU3RvcmUgZWFjaCBwcm9wZXJ0eSBuYW1lIHRvIHByZXZlbnQgZG91YmxlIGVudW1lcmF0aW9uLiBUaGVcbiAgICAgICAgICAgICAgLy8gYHByb3RvdHlwZWAgcHJvcGVydHkgb2YgZnVuY3Rpb25zIGlzIG5vdCBlbnVtZXJhdGVkIGR1ZSB0byBjcm9zcy1cbiAgICAgICAgICAgICAgLy8gZW52aXJvbm1lbnQgaW5jb25zaXN0ZW5jaWVzLlxuICAgICAgICAgICAgICBpZiAoIShpc0Z1bmN0aW9uICYmIHByb3BlcnR5ID09IFwicHJvdG90eXBlXCIpICYmICFpc1Byb3BlcnR5LmNhbGwobWVtYmVycywgcHJvcGVydHkpICYmIChtZW1iZXJzW3Byb3BlcnR5XSA9IDEpICYmIGlzUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KSkge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKHByb3BlcnR5KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gTm8gYnVncyBkZXRlY3RlZDsgdXNlIHRoZSBzdGFuZGFyZCBgZm9yLi4uaW5gIGFsZ29yaXRobS5cbiAgICAgICAgICBmb3JFYWNoID0gZnVuY3Rpb24gKG9iamVjdCwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHZhciBpc0Z1bmN0aW9uID0gZ2V0Q2xhc3MuY2FsbChvYmplY3QpID09IGZ1bmN0aW9uQ2xhc3MsIHByb3BlcnR5LCBpc0NvbnN0cnVjdG9yO1xuICAgICAgICAgICAgZm9yIChwcm9wZXJ0eSBpbiBvYmplY3QpIHtcbiAgICAgICAgICAgICAgaWYgKCEoaXNGdW5jdGlvbiAmJiBwcm9wZXJ0eSA9PSBcInByb3RvdHlwZVwiKSAmJiBpc1Byb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSkgJiYgIShpc0NvbnN0cnVjdG9yID0gcHJvcGVydHkgPT09IFwiY29uc3RydWN0b3JcIikpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhwcm9wZXJ0eSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIE1hbnVhbGx5IGludm9rZSB0aGUgY2FsbGJhY2sgZm9yIHRoZSBgY29uc3RydWN0b3JgIHByb3BlcnR5IGR1ZSB0b1xuICAgICAgICAgICAgLy8gY3Jvc3MtZW52aXJvbm1lbnQgaW5jb25zaXN0ZW5jaWVzLlxuICAgICAgICAgICAgaWYgKGlzQ29uc3RydWN0b3IgfHwgaXNQcm9wZXJ0eS5jYWxsKG9iamVjdCwgKHByb3BlcnR5ID0gXCJjb25zdHJ1Y3RvclwiKSkpIHtcbiAgICAgICAgICAgICAgY2FsbGJhY2socHJvcGVydHkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZvckVhY2gob2JqZWN0LCBjYWxsYmFjayk7XG4gICAgICB9O1xuXG4gICAgICAvLyBQdWJsaWM6IFNlcmlhbGl6ZXMgYSBKYXZhU2NyaXB0IGB2YWx1ZWAgYXMgYSBKU09OIHN0cmluZy4gVGhlIG9wdGlvbmFsXG4gICAgICAvLyBgZmlsdGVyYCBhcmd1bWVudCBtYXkgc3BlY2lmeSBlaXRoZXIgYSBmdW5jdGlvbiB0aGF0IGFsdGVycyBob3cgb2JqZWN0IGFuZFxuICAgICAgLy8gYXJyYXkgbWVtYmVycyBhcmUgc2VyaWFsaXplZCwgb3IgYW4gYXJyYXkgb2Ygc3RyaW5ncyBhbmQgbnVtYmVycyB0aGF0XG4gICAgICAvLyBpbmRpY2F0ZXMgd2hpY2ggcHJvcGVydGllcyBzaG91bGQgYmUgc2VyaWFsaXplZC4gVGhlIG9wdGlvbmFsIGB3aWR0aGBcbiAgICAgIC8vIGFyZ3VtZW50IG1heSBiZSBlaXRoZXIgYSBzdHJpbmcgb3IgbnVtYmVyIHRoYXQgc3BlY2lmaWVzIHRoZSBpbmRlbnRhdGlvblxuICAgICAgLy8gbGV2ZWwgb2YgdGhlIG91dHB1dC5cbiAgICAgIGlmICghaGFzKFwianNvbi1zdHJpbmdpZnlcIikpIHtcbiAgICAgICAgLy8gSW50ZXJuYWw6IEEgbWFwIG9mIGNvbnRyb2wgY2hhcmFjdGVycyBhbmQgdGhlaXIgZXNjYXBlZCBlcXVpdmFsZW50cy5cbiAgICAgICAgdmFyIEVzY2FwZXMgPSB7XG4gICAgICAgICAgOTI6IFwiXFxcXFxcXFxcIixcbiAgICAgICAgICAzNDogJ1xcXFxcIicsXG4gICAgICAgICAgODogXCJcXFxcYlwiLFxuICAgICAgICAgIDEyOiBcIlxcXFxmXCIsXG4gICAgICAgICAgMTA6IFwiXFxcXG5cIixcbiAgICAgICAgICAxMzogXCJcXFxcclwiLFxuICAgICAgICAgIDk6IFwiXFxcXHRcIlxuICAgICAgICB9O1xuXG4gICAgICAgIC8vIEludGVybmFsOiBDb252ZXJ0cyBgdmFsdWVgIGludG8gYSB6ZXJvLXBhZGRlZCBzdHJpbmcgc3VjaCB0aGF0IGl0c1xuICAgICAgICAvLyBsZW5ndGggaXMgYXQgbGVhc3QgZXF1YWwgdG8gYHdpZHRoYC4gVGhlIGB3aWR0aGAgbXVzdCBiZSA8PSA2LlxuICAgICAgICB2YXIgbGVhZGluZ1plcm9lcyA9IFwiMDAwMDAwXCI7XG4gICAgICAgIHZhciB0b1BhZGRlZFN0cmluZyA9IGZ1bmN0aW9uICh3aWR0aCwgdmFsdWUpIHtcbiAgICAgICAgICAvLyBUaGUgYHx8IDBgIGV4cHJlc3Npb24gaXMgbmVjZXNzYXJ5IHRvIHdvcmsgYXJvdW5kIGEgYnVnIGluXG4gICAgICAgICAgLy8gT3BlcmEgPD0gNy41NHUyIHdoZXJlIGAwID09IC0wYCwgYnV0IGBTdHJpbmcoLTApICE9PSBcIjBcImAuXG4gICAgICAgICAgcmV0dXJuIChsZWFkaW5nWmVyb2VzICsgKHZhbHVlIHx8IDApKS5zbGljZSgtd2lkdGgpO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIEludGVybmFsOiBEb3VibGUtcXVvdGVzIGEgc3RyaW5nIGB2YWx1ZWAsIHJlcGxhY2luZyBhbGwgQVNDSUkgY29udHJvbFxuICAgICAgICAvLyBjaGFyYWN0ZXJzIChjaGFyYWN0ZXJzIHdpdGggY29kZSB1bml0IHZhbHVlcyBiZXR3ZWVuIDAgYW5kIDMxKSB3aXRoXG4gICAgICAgIC8vIHRoZWlyIGVzY2FwZWQgZXF1aXZhbGVudHMuIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgdGhlXG4gICAgICAgIC8vIGBRdW90ZSh2YWx1ZSlgIG9wZXJhdGlvbiBkZWZpbmVkIGluIEVTIDUuMSBzZWN0aW9uIDE1LjEyLjMuXG4gICAgICAgIHZhciB1bmljb2RlUHJlZml4ID0gXCJcXFxcdTAwXCI7XG4gICAgICAgIHZhciBxdW90ZSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgIHZhciByZXN1bHQgPSAnXCInLCBpbmRleCA9IDAsIGxlbmd0aCA9IHZhbHVlLmxlbmd0aCwgdXNlQ2hhckluZGV4ID0gIWNoYXJJbmRleEJ1Z2d5IHx8IGxlbmd0aCA+IDEwO1xuICAgICAgICAgIHZhciBzeW1ib2xzID0gdXNlQ2hhckluZGV4ICYmIChjaGFySW5kZXhCdWdneSA/IHZhbHVlLnNwbGl0KFwiXCIpIDogdmFsdWUpO1xuICAgICAgICAgIGZvciAoOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICAgICAgdmFyIGNoYXJDb2RlID0gdmFsdWUuY2hhckNvZGVBdChpbmRleCk7XG4gICAgICAgICAgICAvLyBJZiB0aGUgY2hhcmFjdGVyIGlzIGEgY29udHJvbCBjaGFyYWN0ZXIsIGFwcGVuZCBpdHMgVW5pY29kZSBvclxuICAgICAgICAgICAgLy8gc2hvcnRoYW5kIGVzY2FwZSBzZXF1ZW5jZTsgb3RoZXJ3aXNlLCBhcHBlbmQgdGhlIGNoYXJhY3RlciBhcy1pcy5cbiAgICAgICAgICAgIHN3aXRjaCAoY2hhckNvZGUpIHtcbiAgICAgICAgICAgICAgY2FzZSA4OiBjYXNlIDk6IGNhc2UgMTA6IGNhc2UgMTI6IGNhc2UgMTM6IGNhc2UgMzQ6IGNhc2UgOTI6XG4gICAgICAgICAgICAgICAgcmVzdWx0ICs9IEVzY2FwZXNbY2hhckNvZGVdO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGlmIChjaGFyQ29kZSA8IDMyKSB7XG4gICAgICAgICAgICAgICAgICByZXN1bHQgKz0gdW5pY29kZVByZWZpeCArIHRvUGFkZGVkU3RyaW5nKDIsIGNoYXJDb2RlLnRvU3RyaW5nKDE2KSk7XG4gICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVzdWx0ICs9IHVzZUNoYXJJbmRleCA/IHN5bWJvbHNbaW5kZXhdIDogdmFsdWUuY2hhckF0KGluZGV4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdCArICdcIic7XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gSW50ZXJuYWw6IFJlY3Vyc2l2ZWx5IHNlcmlhbGl6ZXMgYW4gb2JqZWN0LiBJbXBsZW1lbnRzIHRoZVxuICAgICAgICAvLyBgU3RyKGtleSwgaG9sZGVyKWAsIGBKTyh2YWx1ZSlgLCBhbmQgYEpBKHZhbHVlKWAgb3BlcmF0aW9ucy5cbiAgICAgICAgdmFyIHNlcmlhbGl6ZSA9IGZ1bmN0aW9uIChwcm9wZXJ0eSwgb2JqZWN0LCBjYWxsYmFjaywgcHJvcGVydGllcywgd2hpdGVzcGFjZSwgaW5kZW50YXRpb24sIHN0YWNrKSB7XG4gICAgICAgICAgdmFyIHZhbHVlLCBjbGFzc05hbWUsIHllYXIsIG1vbnRoLCBkYXRlLCB0aW1lLCBob3VycywgbWludXRlcywgc2Vjb25kcywgbWlsbGlzZWNvbmRzLCByZXN1bHRzLCBlbGVtZW50LCBpbmRleCwgbGVuZ3RoLCBwcmVmaXgsIHJlc3VsdDtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gTmVjZXNzYXJ5IGZvciBob3N0IG9iamVjdCBzdXBwb3J0LlxuICAgICAgICAgICAgdmFsdWUgPSBvYmplY3RbcHJvcGVydHldO1xuICAgICAgICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikge31cbiAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09IFwib2JqZWN0XCIgJiYgdmFsdWUpIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZSA9IGdldENsYXNzLmNhbGwodmFsdWUpO1xuICAgICAgICAgICAgaWYgKGNsYXNzTmFtZSA9PSBkYXRlQ2xhc3MgJiYgIWlzUHJvcGVydHkuY2FsbCh2YWx1ZSwgXCJ0b0pTT05cIikpIHtcbiAgICAgICAgICAgICAgaWYgKHZhbHVlID4gLTEgLyAwICYmIHZhbHVlIDwgMSAvIDApIHtcbiAgICAgICAgICAgICAgICAvLyBEYXRlcyBhcmUgc2VyaWFsaXplZCBhY2NvcmRpbmcgdG8gdGhlIGBEYXRlI3RvSlNPTmAgbWV0aG9kXG4gICAgICAgICAgICAgICAgLy8gc3BlY2lmaWVkIGluIEVTIDUuMSBzZWN0aW9uIDE1LjkuNS40NC4gU2VlIHNlY3Rpb24gMTUuOS4xLjE1XG4gICAgICAgICAgICAgICAgLy8gZm9yIHRoZSBJU08gODYwMSBkYXRlIHRpbWUgc3RyaW5nIGZvcm1hdC5cbiAgICAgICAgICAgICAgICBpZiAoZ2V0RGF5KSB7XG4gICAgICAgICAgICAgICAgICAvLyBNYW51YWxseSBjb21wdXRlIHRoZSB5ZWFyLCBtb250aCwgZGF0ZSwgaG91cnMsIG1pbnV0ZXMsXG4gICAgICAgICAgICAgICAgICAvLyBzZWNvbmRzLCBhbmQgbWlsbGlzZWNvbmRzIGlmIHRoZSBgZ2V0VVRDKmAgbWV0aG9kcyBhcmVcbiAgICAgICAgICAgICAgICAgIC8vIGJ1Z2d5LiBBZGFwdGVkIGZyb20gQFlhZmZsZSdzIGBkYXRlLXNoaW1gIHByb2plY3QuXG4gICAgICAgICAgICAgICAgICBkYXRlID0gZmxvb3IodmFsdWUgLyA4NjRlNSk7XG4gICAgICAgICAgICAgICAgICBmb3IgKHllYXIgPSBmbG9vcihkYXRlIC8gMzY1LjI0MjUpICsgMTk3MCAtIDE7IGdldERheSh5ZWFyICsgMSwgMCkgPD0gZGF0ZTsgeWVhcisrKTtcbiAgICAgICAgICAgICAgICAgIGZvciAobW9udGggPSBmbG9vcigoZGF0ZSAtIGdldERheSh5ZWFyLCAwKSkgLyAzMC40Mik7IGdldERheSh5ZWFyLCBtb250aCArIDEpIDw9IGRhdGU7IG1vbnRoKyspO1xuICAgICAgICAgICAgICAgICAgZGF0ZSA9IDEgKyBkYXRlIC0gZ2V0RGF5KHllYXIsIG1vbnRoKTtcbiAgICAgICAgICAgICAgICAgIC8vIFRoZSBgdGltZWAgdmFsdWUgc3BlY2lmaWVzIHRoZSB0aW1lIHdpdGhpbiB0aGUgZGF5IChzZWUgRVNcbiAgICAgICAgICAgICAgICAgIC8vIDUuMSBzZWN0aW9uIDE1LjkuMS4yKS4gVGhlIGZvcm11bGEgYChBICUgQiArIEIpICUgQmAgaXMgdXNlZFxuICAgICAgICAgICAgICAgICAgLy8gdG8gY29tcHV0ZSBgQSBtb2R1bG8gQmAsIGFzIHRoZSBgJWAgb3BlcmF0b3IgZG9lcyBub3RcbiAgICAgICAgICAgICAgICAgIC8vIGNvcnJlc3BvbmQgdG8gdGhlIGBtb2R1bG9gIG9wZXJhdGlvbiBmb3IgbmVnYXRpdmUgbnVtYmVycy5cbiAgICAgICAgICAgICAgICAgIHRpbWUgPSAodmFsdWUgJSA4NjRlNSArIDg2NGU1KSAlIDg2NGU1O1xuICAgICAgICAgICAgICAgICAgLy8gVGhlIGhvdXJzLCBtaW51dGVzLCBzZWNvbmRzLCBhbmQgbWlsbGlzZWNvbmRzIGFyZSBvYnRhaW5lZCBieVxuICAgICAgICAgICAgICAgICAgLy8gZGVjb21wb3NpbmcgdGhlIHRpbWUgd2l0aGluIHRoZSBkYXkuIFNlZSBzZWN0aW9uIDE1LjkuMS4xMC5cbiAgICAgICAgICAgICAgICAgIGhvdXJzID0gZmxvb3IodGltZSAvIDM2ZTUpICUgMjQ7XG4gICAgICAgICAgICAgICAgICBtaW51dGVzID0gZmxvb3IodGltZSAvIDZlNCkgJSA2MDtcbiAgICAgICAgICAgICAgICAgIHNlY29uZHMgPSBmbG9vcih0aW1lIC8gMWUzKSAlIDYwO1xuICAgICAgICAgICAgICAgICAgbWlsbGlzZWNvbmRzID0gdGltZSAlIDFlMztcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgeWVhciA9IHZhbHVlLmdldFVUQ0Z1bGxZZWFyKCk7XG4gICAgICAgICAgICAgICAgICBtb250aCA9IHZhbHVlLmdldFVUQ01vbnRoKCk7XG4gICAgICAgICAgICAgICAgICBkYXRlID0gdmFsdWUuZ2V0VVRDRGF0ZSgpO1xuICAgICAgICAgICAgICAgICAgaG91cnMgPSB2YWx1ZS5nZXRVVENIb3VycygpO1xuICAgICAgICAgICAgICAgICAgbWludXRlcyA9IHZhbHVlLmdldFVUQ01pbnV0ZXMoKTtcbiAgICAgICAgICAgICAgICAgIHNlY29uZHMgPSB2YWx1ZS5nZXRVVENTZWNvbmRzKCk7XG4gICAgICAgICAgICAgICAgICBtaWxsaXNlY29uZHMgPSB2YWx1ZS5nZXRVVENNaWxsaXNlY29uZHMoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gU2VyaWFsaXplIGV4dGVuZGVkIHllYXJzIGNvcnJlY3RseS5cbiAgICAgICAgICAgICAgICB2YWx1ZSA9ICh5ZWFyIDw9IDAgfHwgeWVhciA+PSAxZTQgPyAoeWVhciA8IDAgPyBcIi1cIiA6IFwiK1wiKSArIHRvUGFkZGVkU3RyaW5nKDYsIHllYXIgPCAwID8gLXllYXIgOiB5ZWFyKSA6IHRvUGFkZGVkU3RyaW5nKDQsIHllYXIpKSArXG4gICAgICAgICAgICAgICAgICBcIi1cIiArIHRvUGFkZGVkU3RyaW5nKDIsIG1vbnRoICsgMSkgKyBcIi1cIiArIHRvUGFkZGVkU3RyaW5nKDIsIGRhdGUpICtcbiAgICAgICAgICAgICAgICAgIC8vIE1vbnRocywgZGF0ZXMsIGhvdXJzLCBtaW51dGVzLCBhbmQgc2Vjb25kcyBzaG91bGQgaGF2ZSB0d29cbiAgICAgICAgICAgICAgICAgIC8vIGRpZ2l0czsgbWlsbGlzZWNvbmRzIHNob3VsZCBoYXZlIHRocmVlLlxuICAgICAgICAgICAgICAgICAgXCJUXCIgKyB0b1BhZGRlZFN0cmluZygyLCBob3VycykgKyBcIjpcIiArIHRvUGFkZGVkU3RyaW5nKDIsIG1pbnV0ZXMpICsgXCI6XCIgKyB0b1BhZGRlZFN0cmluZygyLCBzZWNvbmRzKSArXG4gICAgICAgICAgICAgICAgICAvLyBNaWxsaXNlY29uZHMgYXJlIG9wdGlvbmFsIGluIEVTIDUuMCwgYnV0IHJlcXVpcmVkIGluIDUuMS5cbiAgICAgICAgICAgICAgICAgIFwiLlwiICsgdG9QYWRkZWRTdHJpbmcoMywgbWlsbGlzZWNvbmRzKSArIFwiWlwiO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gbnVsbDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUudG9KU09OID09IFwiZnVuY3Rpb25cIiAmJiAoKGNsYXNzTmFtZSAhPSBudW1iZXJDbGFzcyAmJiBjbGFzc05hbWUgIT0gc3RyaW5nQ2xhc3MgJiYgY2xhc3NOYW1lICE9IGFycmF5Q2xhc3MpIHx8IGlzUHJvcGVydHkuY2FsbCh2YWx1ZSwgXCJ0b0pTT05cIikpKSB7XG4gICAgICAgICAgICAgIC8vIFByb3RvdHlwZSA8PSAxLjYuMSBhZGRzIG5vbi1zdGFuZGFyZCBgdG9KU09OYCBtZXRob2RzIHRvIHRoZVxuICAgICAgICAgICAgICAvLyBgTnVtYmVyYCwgYFN0cmluZ2AsIGBEYXRlYCwgYW5kIGBBcnJheWAgcHJvdG90eXBlcy4gSlNPTiAzXG4gICAgICAgICAgICAgIC8vIGlnbm9yZXMgYWxsIGB0b0pTT05gIG1ldGhvZHMgb24gdGhlc2Ugb2JqZWN0cyB1bmxlc3MgdGhleSBhcmVcbiAgICAgICAgICAgICAgLy8gZGVmaW5lZCBkaXJlY3RseSBvbiBhbiBpbnN0YW5jZS5cbiAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS50b0pTT04ocHJvcGVydHkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgIC8vIElmIGEgcmVwbGFjZW1lbnQgZnVuY3Rpb24gd2FzIHByb3ZpZGVkLCBjYWxsIGl0IHRvIG9idGFpbiB0aGUgdmFsdWVcbiAgICAgICAgICAgIC8vIGZvciBzZXJpYWxpemF0aW9uLlxuICAgICAgICAgICAgdmFsdWUgPSBjYWxsYmFjay5jYWxsKG9iamVjdCwgcHJvcGVydHksIHZhbHVlKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gXCJudWxsXCI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNsYXNzTmFtZSA9IGdldENsYXNzLmNhbGwodmFsdWUpO1xuICAgICAgICAgIGlmIChjbGFzc05hbWUgPT0gYm9vbGVhbkNsYXNzKSB7XG4gICAgICAgICAgICAvLyBCb29sZWFucyBhcmUgcmVwcmVzZW50ZWQgbGl0ZXJhbGx5LlxuICAgICAgICAgICAgcmV0dXJuIFwiXCIgKyB2YWx1ZTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGNsYXNzTmFtZSA9PSBudW1iZXJDbGFzcykge1xuICAgICAgICAgICAgLy8gSlNPTiBudW1iZXJzIG11c3QgYmUgZmluaXRlLiBgSW5maW5pdHlgIGFuZCBgTmFOYCBhcmUgc2VyaWFsaXplZCBhc1xuICAgICAgICAgICAgLy8gYFwibnVsbFwiYC5cbiAgICAgICAgICAgIHJldHVybiB2YWx1ZSA+IC0xIC8gMCAmJiB2YWx1ZSA8IDEgLyAwID8gXCJcIiArIHZhbHVlIDogXCJudWxsXCI7XG4gICAgICAgICAgfSBlbHNlIGlmIChjbGFzc05hbWUgPT0gc3RyaW5nQ2xhc3MpIHtcbiAgICAgICAgICAgIC8vIFN0cmluZ3MgYXJlIGRvdWJsZS1xdW90ZWQgYW5kIGVzY2FwZWQuXG4gICAgICAgICAgICByZXR1cm4gcXVvdGUoXCJcIiArIHZhbHVlKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gUmVjdXJzaXZlbHkgc2VyaWFsaXplIG9iamVjdHMgYW5kIGFycmF5cy5cbiAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgIC8vIENoZWNrIGZvciBjeWNsaWMgc3RydWN0dXJlcy4gVGhpcyBpcyBhIGxpbmVhciBzZWFyY2g7IHBlcmZvcm1hbmNlXG4gICAgICAgICAgICAvLyBpcyBpbnZlcnNlbHkgcHJvcG9ydGlvbmFsIHRvIHRoZSBudW1iZXIgb2YgdW5pcXVlIG5lc3RlZCBvYmplY3RzLlxuICAgICAgICAgICAgZm9yIChsZW5ndGggPSBzdGFjay5sZW5ndGg7IGxlbmd0aC0tOykge1xuICAgICAgICAgICAgICBpZiAoc3RhY2tbbGVuZ3RoXSA9PT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAvLyBDeWNsaWMgc3RydWN0dXJlcyBjYW5ub3QgYmUgc2VyaWFsaXplZCBieSBgSlNPTi5zdHJpbmdpZnlgLlxuICAgICAgICAgICAgICAgIHRocm93IFR5cGVFcnJvcigpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBBZGQgdGhlIG9iamVjdCB0byB0aGUgc3RhY2sgb2YgdHJhdmVyc2VkIG9iamVjdHMuXG4gICAgICAgICAgICBzdGFjay5wdXNoKHZhbHVlKTtcbiAgICAgICAgICAgIHJlc3VsdHMgPSBbXTtcbiAgICAgICAgICAgIC8vIFNhdmUgdGhlIGN1cnJlbnQgaW5kZW50YXRpb24gbGV2ZWwgYW5kIGluZGVudCBvbmUgYWRkaXRpb25hbCBsZXZlbC5cbiAgICAgICAgICAgIHByZWZpeCA9IGluZGVudGF0aW9uO1xuICAgICAgICAgICAgaW5kZW50YXRpb24gKz0gd2hpdGVzcGFjZTtcbiAgICAgICAgICAgIGlmIChjbGFzc05hbWUgPT0gYXJyYXlDbGFzcykge1xuICAgICAgICAgICAgICAvLyBSZWN1cnNpdmVseSBzZXJpYWxpemUgYXJyYXkgZWxlbWVudHMuXG4gICAgICAgICAgICAgIGZvciAoaW5kZXggPSAwLCBsZW5ndGggPSB2YWx1ZS5sZW5ndGg7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudCA9IHNlcmlhbGl6ZShpbmRleCwgdmFsdWUsIGNhbGxiYWNrLCBwcm9wZXJ0aWVzLCB3aGl0ZXNwYWNlLCBpbmRlbnRhdGlvbiwgc3RhY2spO1xuICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaChlbGVtZW50ID09PSB1bmRlZiA/IFwibnVsbFwiIDogZWxlbWVudCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgcmVzdWx0ID0gcmVzdWx0cy5sZW5ndGggPyAod2hpdGVzcGFjZSA/IFwiW1xcblwiICsgaW5kZW50YXRpb24gKyByZXN1bHRzLmpvaW4oXCIsXFxuXCIgKyBpbmRlbnRhdGlvbikgKyBcIlxcblwiICsgcHJlZml4ICsgXCJdXCIgOiAoXCJbXCIgKyByZXN1bHRzLmpvaW4oXCIsXCIpICsgXCJdXCIpKSA6IFwiW11cIjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIC8vIFJlY3Vyc2l2ZWx5IHNlcmlhbGl6ZSBvYmplY3QgbWVtYmVycy4gTWVtYmVycyBhcmUgc2VsZWN0ZWQgZnJvbVxuICAgICAgICAgICAgICAvLyBlaXRoZXIgYSB1c2VyLXNwZWNpZmllZCBsaXN0IG9mIHByb3BlcnR5IG5hbWVzLCBvciB0aGUgb2JqZWN0XG4gICAgICAgICAgICAgIC8vIGl0c2VsZi5cbiAgICAgICAgICAgICAgZm9yRWFjaChwcm9wZXJ0aWVzIHx8IHZhbHVlLCBmdW5jdGlvbiAocHJvcGVydHkpIHtcbiAgICAgICAgICAgICAgICB2YXIgZWxlbWVudCA9IHNlcmlhbGl6ZShwcm9wZXJ0eSwgdmFsdWUsIGNhbGxiYWNrLCBwcm9wZXJ0aWVzLCB3aGl0ZXNwYWNlLCBpbmRlbnRhdGlvbiwgc3RhY2spO1xuICAgICAgICAgICAgICAgIGlmIChlbGVtZW50ICE9PSB1bmRlZikge1xuICAgICAgICAgICAgICAgICAgLy8gQWNjb3JkaW5nIHRvIEVTIDUuMSBzZWN0aW9uIDE1LjEyLjM6IFwiSWYgYGdhcGAge3doaXRlc3BhY2V9XG4gICAgICAgICAgICAgICAgICAvLyBpcyBub3QgdGhlIGVtcHR5IHN0cmluZywgbGV0IGBtZW1iZXJgIHtxdW90ZShwcm9wZXJ0eSkgKyBcIjpcIn1cbiAgICAgICAgICAgICAgICAgIC8vIGJlIHRoZSBjb25jYXRlbmF0aW9uIG9mIGBtZW1iZXJgIGFuZCB0aGUgYHNwYWNlYCBjaGFyYWN0ZXIuXCJcbiAgICAgICAgICAgICAgICAgIC8vIFRoZSBcImBzcGFjZWAgY2hhcmFjdGVyXCIgcmVmZXJzIHRvIHRoZSBsaXRlcmFsIHNwYWNlXG4gICAgICAgICAgICAgICAgICAvLyBjaGFyYWN0ZXIsIG5vdCB0aGUgYHNwYWNlYCB7d2lkdGh9IGFyZ3VtZW50IHByb3ZpZGVkIHRvXG4gICAgICAgICAgICAgICAgICAvLyBgSlNPTi5zdHJpbmdpZnlgLlxuICAgICAgICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHF1b3RlKHByb3BlcnR5KSArIFwiOlwiICsgKHdoaXRlc3BhY2UgPyBcIiBcIiA6IFwiXCIpICsgZWxlbWVudCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgcmVzdWx0ID0gcmVzdWx0cy5sZW5ndGggPyAod2hpdGVzcGFjZSA/IFwie1xcblwiICsgaW5kZW50YXRpb24gKyByZXN1bHRzLmpvaW4oXCIsXFxuXCIgKyBpbmRlbnRhdGlvbikgKyBcIlxcblwiICsgcHJlZml4ICsgXCJ9XCIgOiAoXCJ7XCIgKyByZXN1bHRzLmpvaW4oXCIsXCIpICsgXCJ9XCIpKSA6IFwie31cIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFJlbW92ZSB0aGUgb2JqZWN0IGZyb20gdGhlIHRyYXZlcnNlZCBvYmplY3Qgc3RhY2suXG4gICAgICAgICAgICBzdGFjay5wb3AoKTtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIC8vIFB1YmxpYzogYEpTT04uc3RyaW5naWZ5YC4gU2VlIEVTIDUuMSBzZWN0aW9uIDE1LjEyLjMuXG4gICAgICAgIGV4cG9ydHMuc3RyaW5naWZ5ID0gZnVuY3Rpb24gKHNvdXJjZSwgZmlsdGVyLCB3aWR0aCkge1xuICAgICAgICAgIHZhciB3aGl0ZXNwYWNlLCBjYWxsYmFjaywgcHJvcGVydGllcywgY2xhc3NOYW1lO1xuICAgICAgICAgIGlmIChvYmplY3RUeXBlc1t0eXBlb2YgZmlsdGVyXSAmJiBmaWx0ZXIpIHtcbiAgICAgICAgICAgIGlmICgoY2xhc3NOYW1lID0gZ2V0Q2xhc3MuY2FsbChmaWx0ZXIpKSA9PSBmdW5jdGlvbkNsYXNzKSB7XG4gICAgICAgICAgICAgIGNhbGxiYWNrID0gZmlsdGVyO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChjbGFzc05hbWUgPT0gYXJyYXlDbGFzcykge1xuICAgICAgICAgICAgICAvLyBDb252ZXJ0IHRoZSBwcm9wZXJ0eSBuYW1lcyBhcnJheSBpbnRvIGEgbWFrZXNoaWZ0IHNldC5cbiAgICAgICAgICAgICAgcHJvcGVydGllcyA9IHt9O1xuICAgICAgICAgICAgICBmb3IgKHZhciBpbmRleCA9IDAsIGxlbmd0aCA9IGZpbHRlci5sZW5ndGgsIHZhbHVlOyBpbmRleCA8IGxlbmd0aDsgdmFsdWUgPSBmaWx0ZXJbaW5kZXgrK10sICgoY2xhc3NOYW1lID0gZ2V0Q2xhc3MuY2FsbCh2YWx1ZSkpLCBjbGFzc05hbWUgPT0gc3RyaW5nQ2xhc3MgfHwgY2xhc3NOYW1lID09IG51bWJlckNsYXNzKSAmJiAocHJvcGVydGllc1t2YWx1ZV0gPSAxKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICh3aWR0aCkge1xuICAgICAgICAgICAgaWYgKChjbGFzc05hbWUgPSBnZXRDbGFzcy5jYWxsKHdpZHRoKSkgPT0gbnVtYmVyQ2xhc3MpIHtcbiAgICAgICAgICAgICAgLy8gQ29udmVydCB0aGUgYHdpZHRoYCB0byBhbiBpbnRlZ2VyIGFuZCBjcmVhdGUgYSBzdHJpbmcgY29udGFpbmluZ1xuICAgICAgICAgICAgICAvLyBgd2lkdGhgIG51bWJlciBvZiBzcGFjZSBjaGFyYWN0ZXJzLlxuICAgICAgICAgICAgICBpZiAoKHdpZHRoIC09IHdpZHRoICUgMSkgPiAwKSB7XG4gICAgICAgICAgICAgICAgZm9yICh3aGl0ZXNwYWNlID0gXCJcIiwgd2lkdGggPiAxMCAmJiAod2lkdGggPSAxMCk7IHdoaXRlc3BhY2UubGVuZ3RoIDwgd2lkdGg7IHdoaXRlc3BhY2UgKz0gXCIgXCIpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGNsYXNzTmFtZSA9PSBzdHJpbmdDbGFzcykge1xuICAgICAgICAgICAgICB3aGl0ZXNwYWNlID0gd2lkdGgubGVuZ3RoIDw9IDEwID8gd2lkdGggOiB3aWR0aC5zbGljZSgwLCAxMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIE9wZXJhIDw9IDcuNTR1MiBkaXNjYXJkcyB0aGUgdmFsdWVzIGFzc29jaWF0ZWQgd2l0aCBlbXB0eSBzdHJpbmcga2V5c1xuICAgICAgICAgIC8vIChgXCJcImApIG9ubHkgaWYgdGhleSBhcmUgdXNlZCBkaXJlY3RseSB3aXRoaW4gYW4gb2JqZWN0IG1lbWJlciBsaXN0XG4gICAgICAgICAgLy8gKGUuZy4sIGAhKFwiXCIgaW4geyBcIlwiOiAxfSlgKS5cbiAgICAgICAgICByZXR1cm4gc2VyaWFsaXplKFwiXCIsICh2YWx1ZSA9IHt9LCB2YWx1ZVtcIlwiXSA9IHNvdXJjZSwgdmFsdWUpLCBjYWxsYmFjaywgcHJvcGVydGllcywgd2hpdGVzcGFjZSwgXCJcIiwgW10pO1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICAvLyBQdWJsaWM6IFBhcnNlcyBhIEpTT04gc291cmNlIHN0cmluZy5cbiAgICAgIGlmICghaGFzKFwianNvbi1wYXJzZVwiKSkge1xuICAgICAgICB2YXIgZnJvbUNoYXJDb2RlID0gU3RyaW5nLmZyb21DaGFyQ29kZTtcblxuICAgICAgICAvLyBJbnRlcm5hbDogQSBtYXAgb2YgZXNjYXBlZCBjb250cm9sIGNoYXJhY3RlcnMgYW5kIHRoZWlyIHVuZXNjYXBlZFxuICAgICAgICAvLyBlcXVpdmFsZW50cy5cbiAgICAgICAgdmFyIFVuZXNjYXBlcyA9IHtcbiAgICAgICAgICA5MjogXCJcXFxcXCIsXG4gICAgICAgICAgMzQ6ICdcIicsXG4gICAgICAgICAgNDc6IFwiL1wiLFxuICAgICAgICAgIDk4OiBcIlxcYlwiLFxuICAgICAgICAgIDExNjogXCJcXHRcIixcbiAgICAgICAgICAxMTA6IFwiXFxuXCIsXG4gICAgICAgICAgMTAyOiBcIlxcZlwiLFxuICAgICAgICAgIDExNDogXCJcXHJcIlxuICAgICAgICB9O1xuXG4gICAgICAgIC8vIEludGVybmFsOiBTdG9yZXMgdGhlIHBhcnNlciBzdGF0ZS5cbiAgICAgICAgdmFyIEluZGV4LCBTb3VyY2U7XG5cbiAgICAgICAgLy8gSW50ZXJuYWw6IFJlc2V0cyB0aGUgcGFyc2VyIHN0YXRlIGFuZCB0aHJvd3MgYSBgU3ludGF4RXJyb3JgLlxuICAgICAgICB2YXIgYWJvcnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgSW5kZXggPSBTb3VyY2UgPSBudWxsO1xuICAgICAgICAgIHRocm93IFN5bnRheEVycm9yKCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gSW50ZXJuYWw6IFJldHVybnMgdGhlIG5leHQgdG9rZW4sIG9yIGBcIiRcImAgaWYgdGhlIHBhcnNlciBoYXMgcmVhY2hlZFxuICAgICAgICAvLyB0aGUgZW5kIG9mIHRoZSBzb3VyY2Ugc3RyaW5nLiBBIHRva2VuIG1heSBiZSBhIHN0cmluZywgbnVtYmVyLCBgbnVsbGBcbiAgICAgICAgLy8gbGl0ZXJhbCwgb3IgQm9vbGVhbiBsaXRlcmFsLlxuICAgICAgICB2YXIgbGV4ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHZhciBzb3VyY2UgPSBTb3VyY2UsIGxlbmd0aCA9IHNvdXJjZS5sZW5ndGgsIHZhbHVlLCBiZWdpbiwgcG9zaXRpb24sIGlzU2lnbmVkLCBjaGFyQ29kZTtcbiAgICAgICAgICB3aGlsZSAoSW5kZXggPCBsZW5ndGgpIHtcbiAgICAgICAgICAgIGNoYXJDb2RlID0gc291cmNlLmNoYXJDb2RlQXQoSW5kZXgpO1xuICAgICAgICAgICAgc3dpdGNoIChjaGFyQ29kZSkge1xuICAgICAgICAgICAgICBjYXNlIDk6IGNhc2UgMTA6IGNhc2UgMTM6IGNhc2UgMzI6XG4gICAgICAgICAgICAgICAgLy8gU2tpcCB3aGl0ZXNwYWNlIHRva2VucywgaW5jbHVkaW5nIHRhYnMsIGNhcnJpYWdlIHJldHVybnMsIGxpbmVcbiAgICAgICAgICAgICAgICAvLyBmZWVkcywgYW5kIHNwYWNlIGNoYXJhY3RlcnMuXG4gICAgICAgICAgICAgICAgSW5kZXgrKztcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgY2FzZSAxMjM6IGNhc2UgMTI1OiBjYXNlIDkxOiBjYXNlIDkzOiBjYXNlIDU4OiBjYXNlIDQ0OlxuICAgICAgICAgICAgICAgIC8vIFBhcnNlIGEgcHVuY3R1YXRvciB0b2tlbiAoYHtgLCBgfWAsIGBbYCwgYF1gLCBgOmAsIG9yIGAsYCkgYXRcbiAgICAgICAgICAgICAgICAvLyB0aGUgY3VycmVudCBwb3NpdGlvbi5cbiAgICAgICAgICAgICAgICB2YWx1ZSA9IGNoYXJJbmRleEJ1Z2d5ID8gc291cmNlLmNoYXJBdChJbmRleCkgOiBzb3VyY2VbSW5kZXhdO1xuICAgICAgICAgICAgICAgIEluZGV4Kys7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgICBjYXNlIDM0OlxuICAgICAgICAgICAgICAgIC8vIGBcImAgZGVsaW1pdHMgYSBKU09OIHN0cmluZzsgYWR2YW5jZSB0byB0aGUgbmV4dCBjaGFyYWN0ZXIgYW5kXG4gICAgICAgICAgICAgICAgLy8gYmVnaW4gcGFyc2luZyB0aGUgc3RyaW5nLiBTdHJpbmcgdG9rZW5zIGFyZSBwcmVmaXhlZCB3aXRoIHRoZVxuICAgICAgICAgICAgICAgIC8vIHNlbnRpbmVsIGBAYCBjaGFyYWN0ZXIgdG8gZGlzdGluZ3Vpc2ggdGhlbSBmcm9tIHB1bmN0dWF0b3JzIGFuZFxuICAgICAgICAgICAgICAgIC8vIGVuZC1vZi1zdHJpbmcgdG9rZW5zLlxuICAgICAgICAgICAgICAgIGZvciAodmFsdWUgPSBcIkBcIiwgSW5kZXgrKzsgSW5kZXggPCBsZW5ndGg7KSB7XG4gICAgICAgICAgICAgICAgICBjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KEluZGV4KTtcbiAgICAgICAgICAgICAgICAgIGlmIChjaGFyQ29kZSA8IDMyKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFVuZXNjYXBlZCBBU0NJSSBjb250cm9sIGNoYXJhY3RlcnMgKHRob3NlIHdpdGggYSBjb2RlIHVuaXRcbiAgICAgICAgICAgICAgICAgICAgLy8gbGVzcyB0aGFuIHRoZSBzcGFjZSBjaGFyYWN0ZXIpIGFyZSBub3QgcGVybWl0dGVkLlxuICAgICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChjaGFyQ29kZSA9PSA5Mikge1xuICAgICAgICAgICAgICAgICAgICAvLyBBIHJldmVyc2Ugc29saWR1cyAoYFxcYCkgbWFya3MgdGhlIGJlZ2lubmluZyBvZiBhbiBlc2NhcGVkXG4gICAgICAgICAgICAgICAgICAgIC8vIGNvbnRyb2wgY2hhcmFjdGVyIChpbmNsdWRpbmcgYFwiYCwgYFxcYCwgYW5kIGAvYCkgb3IgVW5pY29kZVxuICAgICAgICAgICAgICAgICAgICAvLyBlc2NhcGUgc2VxdWVuY2UuXG4gICAgICAgICAgICAgICAgICAgIGNoYXJDb2RlID0gc291cmNlLmNoYXJDb2RlQXQoKytJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoY2hhckNvZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIDkyOiBjYXNlIDM0OiBjYXNlIDQ3OiBjYXNlIDk4OiBjYXNlIDExNjogY2FzZSAxMTA6IGNhc2UgMTAyOiBjYXNlIDExNDpcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFJldml2ZSBlc2NhcGVkIGNvbnRyb2wgY2hhcmFjdGVycy5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlICs9IFVuZXNjYXBlc1tjaGFyQ29kZV07XG4gICAgICAgICAgICAgICAgICAgICAgICBJbmRleCsrO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSAxMTc6XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBgXFx1YCBtYXJrcyB0aGUgYmVnaW5uaW5nIG9mIGEgVW5pY29kZSBlc2NhcGUgc2VxdWVuY2UuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBBZHZhbmNlIHRvIHRoZSBmaXJzdCBjaGFyYWN0ZXIgYW5kIHZhbGlkYXRlIHRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZm91ci1kaWdpdCBjb2RlIHBvaW50LlxuICAgICAgICAgICAgICAgICAgICAgICAgYmVnaW4gPSArK0luZGV4O1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChwb3NpdGlvbiA9IEluZGV4ICsgNDsgSW5kZXggPCBwb3NpdGlvbjsgSW5kZXgrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KEluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQSB2YWxpZCBzZXF1ZW5jZSBjb21wcmlzZXMgZm91ciBoZXhkaWdpdHMgKGNhc2UtXG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGluc2Vuc2l0aXZlKSB0aGF0IGZvcm0gYSBzaW5nbGUgaGV4YWRlY2ltYWwgdmFsdWUuXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghKGNoYXJDb2RlID49IDQ4ICYmIGNoYXJDb2RlIDw9IDU3IHx8IGNoYXJDb2RlID49IDk3ICYmIGNoYXJDb2RlIDw9IDEwMiB8fCBjaGFyQ29kZSA+PSA2NSAmJiBjaGFyQ29kZSA8PSA3MCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBJbnZhbGlkIFVuaWNvZGUgZXNjYXBlIHNlcXVlbmNlLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFJldml2ZSB0aGUgZXNjYXBlZCBjaGFyYWN0ZXIuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSArPSBmcm9tQ2hhckNvZGUoXCIweFwiICsgc291cmNlLnNsaWNlKGJlZ2luLCBJbmRleCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEludmFsaWQgZXNjYXBlIHNlcXVlbmNlLlxuICAgICAgICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoYXJDb2RlID09IDM0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgLy8gQW4gdW5lc2NhcGVkIGRvdWJsZS1xdW90ZSBjaGFyYWN0ZXIgbWFya3MgdGhlIGVuZCBvZiB0aGVcbiAgICAgICAgICAgICAgICAgICAgICAvLyBzdHJpbmcuXG4gICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdChJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgIGJlZ2luID0gSW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIC8vIE9wdGltaXplIGZvciB0aGUgY29tbW9uIGNhc2Ugd2hlcmUgYSBzdHJpbmcgaXMgdmFsaWQuXG4gICAgICAgICAgICAgICAgICAgIHdoaWxlIChjaGFyQ29kZSA+PSAzMiAmJiBjaGFyQ29kZSAhPSA5MiAmJiBjaGFyQ29kZSAhPSAzNCkge1xuICAgICAgICAgICAgICAgICAgICAgIGNoYXJDb2RlID0gc291cmNlLmNoYXJDb2RlQXQoKytJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8gQXBwZW5kIHRoZSBzdHJpbmcgYXMtaXMuXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlICs9IHNvdXJjZS5zbGljZShiZWdpbiwgSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc291cmNlLmNoYXJDb2RlQXQoSW5kZXgpID09IDM0KSB7XG4gICAgICAgICAgICAgICAgICAvLyBBZHZhbmNlIHRvIHRoZSBuZXh0IGNoYXJhY3RlciBhbmQgcmV0dXJuIHRoZSByZXZpdmVkIHN0cmluZy5cbiAgICAgICAgICAgICAgICAgIEluZGV4Kys7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIFVudGVybWluYXRlZCBzdHJpbmcuXG4gICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAvLyBQYXJzZSBudW1iZXJzIGFuZCBsaXRlcmFscy5cbiAgICAgICAgICAgICAgICBiZWdpbiA9IEluZGV4O1xuICAgICAgICAgICAgICAgIC8vIEFkdmFuY2UgcGFzdCB0aGUgbmVnYXRpdmUgc2lnbiwgaWYgb25lIGlzIHNwZWNpZmllZC5cbiAgICAgICAgICAgICAgICBpZiAoY2hhckNvZGUgPT0gNDUpIHtcbiAgICAgICAgICAgICAgICAgIGlzU2lnbmVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgIGNoYXJDb2RlID0gc291cmNlLmNoYXJDb2RlQXQoKytJbmRleCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIFBhcnNlIGFuIGludGVnZXIgb3IgZmxvYXRpbmctcG9pbnQgdmFsdWUuXG4gICAgICAgICAgICAgICAgaWYgKGNoYXJDb2RlID49IDQ4ICYmIGNoYXJDb2RlIDw9IDU3KSB7XG4gICAgICAgICAgICAgICAgICAvLyBMZWFkaW5nIHplcm9lcyBhcmUgaW50ZXJwcmV0ZWQgYXMgb2N0YWwgbGl0ZXJhbHMuXG4gICAgICAgICAgICAgICAgICBpZiAoY2hhckNvZGUgPT0gNDggJiYgKChjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KEluZGV4ICsgMSkpLCBjaGFyQ29kZSA+PSA0OCAmJiBjaGFyQ29kZSA8PSA1NykpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gSWxsZWdhbCBvY3RhbCBsaXRlcmFsLlxuICAgICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgaXNTaWduZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgIC8vIFBhcnNlIHRoZSBpbnRlZ2VyIGNvbXBvbmVudC5cbiAgICAgICAgICAgICAgICAgIGZvciAoOyBJbmRleCA8IGxlbmd0aCAmJiAoKGNoYXJDb2RlID0gc291cmNlLmNoYXJDb2RlQXQoSW5kZXgpKSwgY2hhckNvZGUgPj0gNDggJiYgY2hhckNvZGUgPD0gNTcpOyBJbmRleCsrKTtcbiAgICAgICAgICAgICAgICAgIC8vIEZsb2F0cyBjYW5ub3QgY29udGFpbiBhIGxlYWRpbmcgZGVjaW1hbCBwb2ludDsgaG93ZXZlciwgdGhpc1xuICAgICAgICAgICAgICAgICAgLy8gY2FzZSBpcyBhbHJlYWR5IGFjY291bnRlZCBmb3IgYnkgdGhlIHBhcnNlci5cbiAgICAgICAgICAgICAgICAgIGlmIChzb3VyY2UuY2hhckNvZGVBdChJbmRleCkgPT0gNDYpIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb24gPSArK0luZGV4O1xuICAgICAgICAgICAgICAgICAgICAvLyBQYXJzZSB0aGUgZGVjaW1hbCBjb21wb25lbnQuXG4gICAgICAgICAgICAgICAgICAgIGZvciAoOyBwb3NpdGlvbiA8IGxlbmd0aCAmJiAoKGNoYXJDb2RlID0gc291cmNlLmNoYXJDb2RlQXQocG9zaXRpb24pKSwgY2hhckNvZGUgPj0gNDggJiYgY2hhckNvZGUgPD0gNTcpOyBwb3NpdGlvbisrKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBvc2l0aW9uID09IEluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgLy8gSWxsZWdhbCB0cmFpbGluZyBkZWNpbWFsLlxuICAgICAgICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgSW5kZXggPSBwb3NpdGlvbjtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIC8vIFBhcnNlIGV4cG9uZW50cy4gVGhlIGBlYCBkZW5vdGluZyB0aGUgZXhwb25lbnQgaXNcbiAgICAgICAgICAgICAgICAgIC8vIGNhc2UtaW5zZW5zaXRpdmUuXG4gICAgICAgICAgICAgICAgICBjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KEluZGV4KTtcbiAgICAgICAgICAgICAgICAgIGlmIChjaGFyQ29kZSA9PSAxMDEgfHwgY2hhckNvZGUgPT0gNjkpIHtcbiAgICAgICAgICAgICAgICAgICAgY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdCgrK0luZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgLy8gU2tpcCBwYXN0IHRoZSBzaWduIGZvbGxvd2luZyB0aGUgZXhwb25lbnQsIGlmIG9uZSBpc1xuICAgICAgICAgICAgICAgICAgICAvLyBzcGVjaWZpZWQuXG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGFyQ29kZSA9PSA0MyB8fCBjaGFyQ29kZSA9PSA0NSkge1xuICAgICAgICAgICAgICAgICAgICAgIEluZGV4Kys7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8gUGFyc2UgdGhlIGV4cG9uZW50aWFsIGNvbXBvbmVudC5cbiAgICAgICAgICAgICAgICAgICAgZm9yIChwb3NpdGlvbiA9IEluZGV4OyBwb3NpdGlvbiA8IGxlbmd0aCAmJiAoKGNoYXJDb2RlID0gc291cmNlLmNoYXJDb2RlQXQocG9zaXRpb24pKSwgY2hhckNvZGUgPj0gNDggJiYgY2hhckNvZGUgPD0gNTcpOyBwb3NpdGlvbisrKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBvc2l0aW9uID09IEluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgLy8gSWxsZWdhbCBlbXB0eSBleHBvbmVudC5cbiAgICAgICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIEluZGV4ID0gcG9zaXRpb247XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAvLyBDb2VyY2UgdGhlIHBhcnNlZCB2YWx1ZSB0byBhIEphdmFTY3JpcHQgbnVtYmVyLlxuICAgICAgICAgICAgICAgICAgcmV0dXJuICtzb3VyY2Uuc2xpY2UoYmVnaW4sIEluZGV4KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gQSBuZWdhdGl2ZSBzaWduIG1heSBvbmx5IHByZWNlZGUgbnVtYmVycy5cbiAgICAgICAgICAgICAgICBpZiAoaXNTaWduZWQpIHtcbiAgICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIGB0cnVlYCwgYGZhbHNlYCwgYW5kIGBudWxsYCBsaXRlcmFscy5cbiAgICAgICAgICAgICAgICBpZiAoc291cmNlLnNsaWNlKEluZGV4LCBJbmRleCArIDQpID09IFwidHJ1ZVwiKSB7XG4gICAgICAgICAgICAgICAgICBJbmRleCArPSA0O1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChzb3VyY2Uuc2xpY2UoSW5kZXgsIEluZGV4ICsgNSkgPT0gXCJmYWxzZVwiKSB7XG4gICAgICAgICAgICAgICAgICBJbmRleCArPSA1O1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnNsaWNlKEluZGV4LCBJbmRleCArIDQpID09IFwibnVsbFwiKSB7XG4gICAgICAgICAgICAgICAgICBJbmRleCArPSA0O1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIFVucmVjb2duaXplZCB0b2tlbi5cbiAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBSZXR1cm4gdGhlIHNlbnRpbmVsIGAkYCBjaGFyYWN0ZXIgaWYgdGhlIHBhcnNlciBoYXMgcmVhY2hlZCB0aGUgZW5kXG4gICAgICAgICAgLy8gb2YgdGhlIHNvdXJjZSBzdHJpbmcuXG4gICAgICAgICAgcmV0dXJuIFwiJFwiO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIEludGVybmFsOiBQYXJzZXMgYSBKU09OIGB2YWx1ZWAgdG9rZW4uXG4gICAgICAgIHZhciBnZXQgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICB2YXIgcmVzdWx0cywgaGFzTWVtYmVycztcbiAgICAgICAgICBpZiAodmFsdWUgPT0gXCIkXCIpIHtcbiAgICAgICAgICAgIC8vIFVuZXhwZWN0ZWQgZW5kIG9mIGlucHV0LlxuICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICBpZiAoKGNoYXJJbmRleEJ1Z2d5ID8gdmFsdWUuY2hhckF0KDApIDogdmFsdWVbMF0pID09IFwiQFwiKSB7XG4gICAgICAgICAgICAgIC8vIFJlbW92ZSB0aGUgc2VudGluZWwgYEBgIGNoYXJhY3Rlci5cbiAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlLnNsaWNlKDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gUGFyc2Ugb2JqZWN0IGFuZCBhcnJheSBsaXRlcmFscy5cbiAgICAgICAgICAgIGlmICh2YWx1ZSA9PSBcIltcIikge1xuICAgICAgICAgICAgICAvLyBQYXJzZXMgYSBKU09OIGFycmF5LCByZXR1cm5pbmcgYSBuZXcgSmF2YVNjcmlwdCBhcnJheS5cbiAgICAgICAgICAgICAgcmVzdWx0cyA9IFtdO1xuICAgICAgICAgICAgICBmb3IgKDs7IGhhc01lbWJlcnMgfHwgKGhhc01lbWJlcnMgPSB0cnVlKSkge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gbGV4KCk7XG4gICAgICAgICAgICAgICAgLy8gQSBjbG9zaW5nIHNxdWFyZSBicmFja2V0IG1hcmtzIHRoZSBlbmQgb2YgdGhlIGFycmF5IGxpdGVyYWwuXG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlID09IFwiXVwiKSB7XG4gICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIGFycmF5IGxpdGVyYWwgY29udGFpbnMgZWxlbWVudHMsIHRoZSBjdXJyZW50IHRva2VuXG4gICAgICAgICAgICAgICAgLy8gc2hvdWxkIGJlIGEgY29tbWEgc2VwYXJhdGluZyB0aGUgcHJldmlvdXMgZWxlbWVudCBmcm9tIHRoZVxuICAgICAgICAgICAgICAgIC8vIG5leHQuXG4gICAgICAgICAgICAgICAgaWYgKGhhc01lbWJlcnMpIHtcbiAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PSBcIixcIikge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IGxleCgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT0gXCJdXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAvLyBVbmV4cGVjdGVkIHRyYWlsaW5nIGAsYCBpbiBhcnJheSBsaXRlcmFsLlxuICAgICAgICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEEgYCxgIG11c3Qgc2VwYXJhdGUgZWFjaCBhcnJheSBlbGVtZW50LlxuICAgICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBFbGlzaW9ucyBhbmQgbGVhZGluZyBjb21tYXMgYXJlIG5vdCBwZXJtaXR0ZWQuXG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlID09IFwiLFwiKSB7XG4gICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXN1bHRzLnB1c2goZ2V0KHZhbHVlKSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHZhbHVlID09IFwie1wiKSB7XG4gICAgICAgICAgICAgIC8vIFBhcnNlcyBhIEpTT04gb2JqZWN0LCByZXR1cm5pbmcgYSBuZXcgSmF2YVNjcmlwdCBvYmplY3QuXG4gICAgICAgICAgICAgIHJlc3VsdHMgPSB7fTtcbiAgICAgICAgICAgICAgZm9yICg7OyBoYXNNZW1iZXJzIHx8IChoYXNNZW1iZXJzID0gdHJ1ZSkpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IGxleCgpO1xuICAgICAgICAgICAgICAgIC8vIEEgY2xvc2luZyBjdXJseSBicmFjZSBtYXJrcyB0aGUgZW5kIG9mIHRoZSBvYmplY3QgbGl0ZXJhbC5cbiAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT0gXCJ9XCIpIHtcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgb2JqZWN0IGxpdGVyYWwgY29udGFpbnMgbWVtYmVycywgdGhlIGN1cnJlbnQgdG9rZW5cbiAgICAgICAgICAgICAgICAvLyBzaG91bGQgYmUgYSBjb21tYSBzZXBhcmF0b3IuXG4gICAgICAgICAgICAgICAgaWYgKGhhc01lbWJlcnMpIHtcbiAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PSBcIixcIikge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IGxleCgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT0gXCJ9XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAvLyBVbmV4cGVjdGVkIHRyYWlsaW5nIGAsYCBpbiBvYmplY3QgbGl0ZXJhbC5cbiAgICAgICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBBIGAsYCBtdXN0IHNlcGFyYXRlIGVhY2ggb2JqZWN0IG1lbWJlci5cbiAgICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gTGVhZGluZyBjb21tYXMgYXJlIG5vdCBwZXJtaXR0ZWQsIG9iamVjdCBwcm9wZXJ0eSBuYW1lcyBtdXN0IGJlXG4gICAgICAgICAgICAgICAgLy8gZG91YmxlLXF1b3RlZCBzdHJpbmdzLCBhbmQgYSBgOmAgbXVzdCBzZXBhcmF0ZSBlYWNoIHByb3BlcnR5XG4gICAgICAgICAgICAgICAgLy8gbmFtZSBhbmQgdmFsdWUuXG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlID09IFwiLFwiIHx8IHR5cGVvZiB2YWx1ZSAhPSBcInN0cmluZ1wiIHx8IChjaGFySW5kZXhCdWdneSA/IHZhbHVlLmNoYXJBdCgwKSA6IHZhbHVlWzBdKSAhPSBcIkBcIiB8fCBsZXgoKSAhPSBcIjpcIikge1xuICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVzdWx0c1t2YWx1ZS5zbGljZSgxKV0gPSBnZXQobGV4KCkpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gVW5leHBlY3RlZCB0b2tlbiBlbmNvdW50ZXJlZC5cbiAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfTtcblxuICAgICAgICAvLyBJbnRlcm5hbDogVXBkYXRlcyBhIHRyYXZlcnNlZCBvYmplY3QgbWVtYmVyLlxuICAgICAgICB2YXIgdXBkYXRlID0gZnVuY3Rpb24gKHNvdXJjZSwgcHJvcGVydHksIGNhbGxiYWNrKSB7XG4gICAgICAgICAgdmFyIGVsZW1lbnQgPSB3YWxrKHNvdXJjZSwgcHJvcGVydHksIGNhbGxiYWNrKTtcbiAgICAgICAgICBpZiAoZWxlbWVudCA9PT0gdW5kZWYpIHtcbiAgICAgICAgICAgIGRlbGV0ZSBzb3VyY2VbcHJvcGVydHldO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzb3VyY2VbcHJvcGVydHldID0gZWxlbWVudDtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gSW50ZXJuYWw6IFJlY3Vyc2l2ZWx5IHRyYXZlcnNlcyBhIHBhcnNlZCBKU09OIG9iamVjdCwgaW52b2tpbmcgdGhlXG4gICAgICAgIC8vIGBjYWxsYmFja2AgZnVuY3Rpb24gZm9yIGVhY2ggdmFsdWUuIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgdGhlXG4gICAgICAgIC8vIGBXYWxrKGhvbGRlciwgbmFtZSlgIG9wZXJhdGlvbiBkZWZpbmVkIGluIEVTIDUuMSBzZWN0aW9uIDE1LjEyLjIuXG4gICAgICAgIHZhciB3YWxrID0gZnVuY3Rpb24gKHNvdXJjZSwgcHJvcGVydHksIGNhbGxiYWNrKSB7XG4gICAgICAgICAgdmFyIHZhbHVlID0gc291cmNlW3Byb3BlcnR5XSwgbGVuZ3RoO1xuICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT0gXCJvYmplY3RcIiAmJiB2YWx1ZSkge1xuICAgICAgICAgICAgLy8gYGZvckVhY2hgIGNhbid0IGJlIHVzZWQgdG8gdHJhdmVyc2UgYW4gYXJyYXkgaW4gT3BlcmEgPD0gOC41NFxuICAgICAgICAgICAgLy8gYmVjYXVzZSBpdHMgYE9iamVjdCNoYXNPd25Qcm9wZXJ0eWAgaW1wbGVtZW50YXRpb24gcmV0dXJucyBgZmFsc2VgXG4gICAgICAgICAgICAvLyBmb3IgYXJyYXkgaW5kaWNlcyAoZS5nLiwgYCFbMSwgMiwgM10uaGFzT3duUHJvcGVydHkoXCIwXCIpYCkuXG4gICAgICAgICAgICBpZiAoZ2V0Q2xhc3MuY2FsbCh2YWx1ZSkgPT0gYXJyYXlDbGFzcykge1xuICAgICAgICAgICAgICBmb3IgKGxlbmd0aCA9IHZhbHVlLmxlbmd0aDsgbGVuZ3RoLS07KSB7XG4gICAgICAgICAgICAgICAgdXBkYXRlKHZhbHVlLCBsZW5ndGgsIGNhbGxiYWNrKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgZm9yRWFjaCh2YWx1ZSwgZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgICAgICAgICAgICAgdXBkYXRlKHZhbHVlLCBwcm9wZXJ0eSwgY2FsbGJhY2spO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIGNhbGxiYWNrLmNhbGwoc291cmNlLCBwcm9wZXJ0eSwgdmFsdWUpO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIFB1YmxpYzogYEpTT04ucGFyc2VgLiBTZWUgRVMgNS4xIHNlY3Rpb24gMTUuMTIuMi5cbiAgICAgICAgZXhwb3J0cy5wYXJzZSA9IGZ1bmN0aW9uIChzb3VyY2UsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgdmFyIHJlc3VsdCwgdmFsdWU7XG4gICAgICAgICAgSW5kZXggPSAwO1xuICAgICAgICAgIFNvdXJjZSA9IFwiXCIgKyBzb3VyY2U7XG4gICAgICAgICAgcmVzdWx0ID0gZ2V0KGxleCgpKTtcbiAgICAgICAgICAvLyBJZiBhIEpTT04gc3RyaW5nIGNvbnRhaW5zIG11bHRpcGxlIHRva2VucywgaXQgaXMgaW52YWxpZC5cbiAgICAgICAgICBpZiAobGV4KCkgIT0gXCIkXCIpIHtcbiAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIFJlc2V0IHRoZSBwYXJzZXIgc3RhdGUuXG4gICAgICAgICAgSW5kZXggPSBTb3VyY2UgPSBudWxsO1xuICAgICAgICAgIHJldHVybiBjYWxsYmFjayAmJiBnZXRDbGFzcy5jYWxsKGNhbGxiYWNrKSA9PSBmdW5jdGlvbkNsYXNzID8gd2FsaygodmFsdWUgPSB7fSwgdmFsdWVbXCJcIl0gPSByZXN1bHQsIHZhbHVlKSwgXCJcIiwgY2FsbGJhY2spIDogcmVzdWx0O1xuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cblxuICAgIGV4cG9ydHNbXCJydW5JbkNvbnRleHRcIl0gPSBydW5JbkNvbnRleHQ7XG4gICAgcmV0dXJuIGV4cG9ydHM7XG4gIH1cblxuICBpZiAoZnJlZUV4cG9ydHMgJiYgIWlzTG9hZGVyKSB7XG4gICAgLy8gRXhwb3J0IGZvciBDb21tb25KUyBlbnZpcm9ubWVudHMuXG4gICAgcnVuSW5Db250ZXh0KHJvb3QsIGZyZWVFeHBvcnRzKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBFeHBvcnQgZm9yIHdlYiBicm93c2VycyBhbmQgSmF2YVNjcmlwdCBlbmdpbmVzLlxuICAgIHZhciBuYXRpdmVKU09OID0gcm9vdC5KU09OLFxuICAgICAgICBwcmV2aW91c0pTT04gPSByb290W1wiSlNPTjNcIl0sXG4gICAgICAgIGlzUmVzdG9yZWQgPSBmYWxzZTtcblxuICAgIHZhciBKU09OMyA9IHJ1bkluQ29udGV4dChyb290LCAocm9vdFtcIkpTT04zXCJdID0ge1xuICAgICAgLy8gUHVibGljOiBSZXN0b3JlcyB0aGUgb3JpZ2luYWwgdmFsdWUgb2YgdGhlIGdsb2JhbCBgSlNPTmAgb2JqZWN0IGFuZFxuICAgICAgLy8gcmV0dXJucyBhIHJlZmVyZW5jZSB0byB0aGUgYEpTT04zYCBvYmplY3QuXG4gICAgICBcIm5vQ29uZmxpY3RcIjogZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIWlzUmVzdG9yZWQpIHtcbiAgICAgICAgICBpc1Jlc3RvcmVkID0gdHJ1ZTtcbiAgICAgICAgICByb290LkpTT04gPSBuYXRpdmVKU09OO1xuICAgICAgICAgIHJvb3RbXCJKU09OM1wiXSA9IHByZXZpb3VzSlNPTjtcbiAgICAgICAgICBuYXRpdmVKU09OID0gcHJldmlvdXNKU09OID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gSlNPTjM7XG4gICAgICB9XG4gICAgfSkpO1xuXG4gICAgcm9vdC5KU09OID0ge1xuICAgICAgXCJwYXJzZVwiOiBKU09OMy5wYXJzZSxcbiAgICAgIFwic3RyaW5naWZ5XCI6IEpTT04zLnN0cmluZ2lmeVxuICAgIH07XG4gIH1cblxuICAvLyBFeHBvcnQgZm9yIGFzeW5jaHJvbm91cyBtb2R1bGUgbG9hZGVycy5cbiAgaWYgKGlzTG9hZGVyKSB7XG4gICAgZGVmaW5lKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBKU09OMztcbiAgICB9KTtcbiAgfVxufSkuY2FsbCh0aGlzKTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L34vanNvbjMvbGliL2pzb24zLmpzXG4gKiogbW9kdWxlIGlkID0gNlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==');
},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\nvar random = __webpack_require__(9);\n\nvar onUnload = {}\n  , afterUnload = false\n    // detect google chrome packaged apps because they don't allow the 'unload' event\n  , isChromePackagedApp = global.chrome && global.chrome.app && global.chrome.app.runtime\n  ;\n\nmodule.exports = {\n  attachEvent: function(event, listener) {\n    if (typeof global.addEventListener !== 'undefined') {\n      global.addEventListener(event, listener, false);\n    } else if (global.document && global.attachEvent) {\n      // IE quirks.\n      // According to: http://stevesouders.com/misc/test-postmessage.php\n      // the message gets delivered only to 'document', not 'window'.\n      global.document.attachEvent('on' + event, listener);\n      // I get 'window' for ie8.\n      global.attachEvent('on' + event, listener);\n    }\n  }\n\n, detachEvent: function(event, listener) {\n    if (typeof global.addEventListener !== 'undefined') {\n      global.removeEventListener(event, listener, false);\n    } else if (global.document && global.detachEvent) {\n      global.document.detachEvent('on' + event, listener);\n      global.detachEvent('on' + event, listener);\n    }\n  }\n\n, unloadAdd: function(listener) {\n    if (isChromePackagedApp) {\n      return null;\n    }\n\n    var ref = random.string(8);\n    onUnload[ref] = listener;\n    if (afterUnload) {\n      setTimeout(this.triggerUnloadCallbacks, 0);\n    }\n    return ref;\n  }\n\n, unloadDel: function(ref) {\n    if (ref in onUnload) {\n      delete onUnload[ref];\n    }\n  }\n\n, triggerUnloadCallbacks: function() {\n    for (var ref in onUnload) {\n      onUnload[ref]();\n      delete onUnload[ref];\n    }\n  }\n};\n\nvar unloadTriggered = function() {\n  if (afterUnload) {\n    return;\n  }\n  afterUnload = true;\n  module.exports.triggerUnloadCallbacks();\n};\n\n// 'unload' alone is not reliable in opera within an iframe, but we\n// can't use `beforeunload` as IE fires it on javascript: links.\nif (!isChromePackagedApp) {\n  module.exports.attachEvent('unload', unloadTriggered);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi91dGlscy9ldmVudC5qcz9hMjkyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciByYW5kb20gPSByZXF1aXJlKCcuL3JhbmRvbScpO1xuXG52YXIgb25VbmxvYWQgPSB7fVxuICAsIGFmdGVyVW5sb2FkID0gZmFsc2VcbiAgICAvLyBkZXRlY3QgZ29vZ2xlIGNocm9tZSBwYWNrYWdlZCBhcHBzIGJlY2F1c2UgdGhleSBkb24ndCBhbGxvdyB0aGUgJ3VubG9hZCcgZXZlbnRcbiAgLCBpc0Nocm9tZVBhY2thZ2VkQXBwID0gZ2xvYmFsLmNocm9tZSAmJiBnbG9iYWwuY2hyb21lLmFwcCAmJiBnbG9iYWwuY2hyb21lLmFwcC5ydW50aW1lXG4gIDtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGF0dGFjaEV2ZW50OiBmdW5jdGlvbihldmVudCwgbGlzdGVuZXIpIHtcbiAgICBpZiAodHlwZW9mIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSk7XG4gICAgfSBlbHNlIGlmIChnbG9iYWwuZG9jdW1lbnQgJiYgZ2xvYmFsLmF0dGFjaEV2ZW50KSB7XG4gICAgICAvLyBJRSBxdWlya3MuXG4gICAgICAvLyBBY2NvcmRpbmcgdG86IGh0dHA6Ly9zdGV2ZXNvdWRlcnMuY29tL21pc2MvdGVzdC1wb3N0bWVzc2FnZS5waHBcbiAgICAgIC8vIHRoZSBtZXNzYWdlIGdldHMgZGVsaXZlcmVkIG9ubHkgdG8gJ2RvY3VtZW50Jywgbm90ICd3aW5kb3cnLlxuICAgICAgZ2xvYmFsLmRvY3VtZW50LmF0dGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xuICAgICAgLy8gSSBnZXQgJ3dpbmRvdycgZm9yIGllOC5cbiAgICAgIGdsb2JhbC5hdHRhY2hFdmVudCgnb24nICsgZXZlbnQsIGxpc3RlbmVyKTtcbiAgICB9XG4gIH1cblxuLCBkZXRhY2hFdmVudDogZnVuY3Rpb24oZXZlbnQsIGxpc3RlbmVyKSB7XG4gICAgaWYgKHR5cGVvZiBnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGdsb2JhbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lciwgZmFsc2UpO1xuICAgIH0gZWxzZSBpZiAoZ2xvYmFsLmRvY3VtZW50ICYmIGdsb2JhbC5kZXRhY2hFdmVudCkge1xuICAgICAgZ2xvYmFsLmRvY3VtZW50LmRldGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xuICAgICAgZ2xvYmFsLmRldGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xuICAgIH1cbiAgfVxuXG4sIHVubG9hZEFkZDogZnVuY3Rpb24obGlzdGVuZXIpIHtcbiAgICBpZiAoaXNDaHJvbWVQYWNrYWdlZEFwcCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdmFyIHJlZiA9IHJhbmRvbS5zdHJpbmcoOCk7XG4gICAgb25VbmxvYWRbcmVmXSA9IGxpc3RlbmVyO1xuICAgIGlmIChhZnRlclVubG9hZCkge1xuICAgICAgc2V0VGltZW91dCh0aGlzLnRyaWdnZXJVbmxvYWRDYWxsYmFja3MsIDApO1xuICAgIH1cbiAgICByZXR1cm4gcmVmO1xuICB9XG5cbiwgdW5sb2FkRGVsOiBmdW5jdGlvbihyZWYpIHtcbiAgICBpZiAocmVmIGluIG9uVW5sb2FkKSB7XG4gICAgICBkZWxldGUgb25VbmxvYWRbcmVmXTtcbiAgICB9XG4gIH1cblxuLCB0cmlnZ2VyVW5sb2FkQ2FsbGJhY2tzOiBmdW5jdGlvbigpIHtcbiAgICBmb3IgKHZhciByZWYgaW4gb25VbmxvYWQpIHtcbiAgICAgIG9uVW5sb2FkW3JlZl0oKTtcbiAgICAgIGRlbGV0ZSBvblVubG9hZFtyZWZdO1xuICAgIH1cbiAgfVxufTtcblxudmFyIHVubG9hZFRyaWdnZXJlZCA9IGZ1bmN0aW9uKCkge1xuICBpZiAoYWZ0ZXJVbmxvYWQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgYWZ0ZXJVbmxvYWQgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cy50cmlnZ2VyVW5sb2FkQ2FsbGJhY2tzKCk7XG59O1xuXG4vLyAndW5sb2FkJyBhbG9uZSBpcyBub3QgcmVsaWFibGUgaW4gb3BlcmEgd2l0aGluIGFuIGlmcmFtZSwgYnV0IHdlXG4vLyBjYW4ndCB1c2UgYGJlZm9yZXVubG9hZGAgYXMgSUUgZmlyZXMgaXQgb24gamF2YXNjcmlwdDogbGlua3MuXG5pZiAoIWlzQ2hyb21lUGFja2FnZWRBcHApIHtcbiAgbW9kdWxlLmV4cG9ydHMuYXR0YWNoRXZlbnQoJ3VubG9hZCcsIHVubG9hZFRyaWdnZXJlZCk7XG59XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9saWIvdXRpbHMvZXZlbnQuanNcbiAqKiBtb2R1bGUgaWQgPSA3XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\nvar inherits = __webpack_require__(1)\n  , urlUtils = __webpack_require__(5)\n  , SenderReceiver = __webpack_require__(31)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:ajax-based');\n}\n\nfunction createAjaxSender(AjaxObject) {\n  return function(url, payload, callback) {\n    debug('create ajax sender', url, payload);\n    var opt = {};\n    if (typeof payload === 'string') {\n      opt.headers = {'Content-type':'text/plain'};\n    }\n    var ajaxUrl = urlUtils.addPath(url, '/xhr_send');\n    var xo = new AjaxObject('POST', ajaxUrl, payload, opt);\n    xo.once('finish', function(status) {\n      debug('finish', status);\n      xo = null;\n\n      if (status !== 200 && status !== 204) {\n        return callback(new Error('http status ' + status));\n      }\n      callback();\n    });\n    return function() {\n      debug('abort');\n      xo.close();\n      xo = null;\n\n      var err = new Error('Aborted');\n      err.code = 1000;\n      callback(err);\n    };\n  };\n}\n\nfunction AjaxBasedTransport(transUrl, urlSuffix, Receiver, AjaxObject) {\n  SenderReceiver.call(this, transUrl, urlSuffix, createAjaxSender(AjaxObject), Receiver, AjaxObject);\n}\n\ninherits(AjaxBasedTransport, SenderReceiver);\n\nmodule.exports = AjaxBasedTransport;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvbGliL2FqYXgtYmFzZWQuanM/M2Q1NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBIiwiZmlsZSI6IjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCB1cmxVdGlscyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL3VybCcpXG4gICwgU2VuZGVyUmVjZWl2ZXIgPSByZXF1aXJlKCcuL3NlbmRlci1yZWNlaXZlcicpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDphamF4LWJhc2VkJyk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUFqYXhTZW5kZXIoQWpheE9iamVjdCkge1xuICByZXR1cm4gZnVuY3Rpb24odXJsLCBwYXlsb2FkLCBjYWxsYmFjaykge1xuICAgIGRlYnVnKCdjcmVhdGUgYWpheCBzZW5kZXInLCB1cmwsIHBheWxvYWQpO1xuICAgIHZhciBvcHQgPSB7fTtcbiAgICBpZiAodHlwZW9mIHBheWxvYWQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBvcHQuaGVhZGVycyA9IHsnQ29udGVudC10eXBlJzondGV4dC9wbGFpbid9O1xuICAgIH1cbiAgICB2YXIgYWpheFVybCA9IHVybFV0aWxzLmFkZFBhdGgodXJsLCAnL3hocl9zZW5kJyk7XG4gICAgdmFyIHhvID0gbmV3IEFqYXhPYmplY3QoJ1BPU1QnLCBhamF4VXJsLCBwYXlsb2FkLCBvcHQpO1xuICAgIHhvLm9uY2UoJ2ZpbmlzaCcsIGZ1bmN0aW9uKHN0YXR1cykge1xuICAgICAgZGVidWcoJ2ZpbmlzaCcsIHN0YXR1cyk7XG4gICAgICB4byA9IG51bGw7XG5cbiAgICAgIGlmIChzdGF0dXMgIT09IDIwMCAmJiBzdGF0dXMgIT09IDIwNCkge1xuICAgICAgICByZXR1cm4gY2FsbGJhY2sobmV3IEVycm9yKCdodHRwIHN0YXR1cyAnICsgc3RhdHVzKSk7XG4gICAgICB9XG4gICAgICBjYWxsYmFjaygpO1xuICAgIH0pO1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIGRlYnVnKCdhYm9ydCcpO1xuICAgICAgeG8uY2xvc2UoKTtcbiAgICAgIHhvID0gbnVsbDtcblxuICAgICAgdmFyIGVyciA9IG5ldyBFcnJvcignQWJvcnRlZCcpO1xuICAgICAgZXJyLmNvZGUgPSAxMDAwO1xuICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICB9O1xuICB9O1xufVxuXG5mdW5jdGlvbiBBamF4QmFzZWRUcmFuc3BvcnQodHJhbnNVcmwsIHVybFN1ZmZpeCwgUmVjZWl2ZXIsIEFqYXhPYmplY3QpIHtcbiAgU2VuZGVyUmVjZWl2ZXIuY2FsbCh0aGlzLCB0cmFuc1VybCwgdXJsU3VmZml4LCBjcmVhdGVBamF4U2VuZGVyKEFqYXhPYmplY3QpLCBSZWNlaXZlciwgQWpheE9iamVjdCk7XG59XG5cbmluaGVyaXRzKEFqYXhCYXNlZFRyYW5zcG9ydCwgU2VuZGVyUmVjZWl2ZXIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFqYXhCYXNlZFRyYW5zcG9ydDtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvbGliL2FqYXgtYmFzZWQuanNcbiAqKiBtb2R1bGUgaWQgPSA4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("'use strict';\n\n/* global crypto:true */\nvar crypto = __webpack_require__(75);\n\n// This string has length 32, a power of 2, so the modulus doesn't introduce a\n// bias.\nvar _randomStringChars = 'abcdefghijklmnopqrstuvwxyz012345';\nmodule.exports = {\n  string: function(length) {\n    var max = _randomStringChars.length;\n    var bytes = crypto.randomBytes(length);\n    var ret = [];\n    for (var i = 0; i < length; i++) {\n      ret.push(_randomStringChars.substr(bytes[i] % max, 1));\n    }\n    return ret.join('');\n  }\n\n, number: function(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n, numberString: function(max) {\n    var t = ('' + (max - 1)).length;\n    var p = new Array(t + 1).join('0');\n    return (p + this.number(max)).slice(-t);\n  }\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi91dGlscy9yYW5kb20uanM/ZWY5NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsWUFBWTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qIGdsb2JhbCBjcnlwdG86dHJ1ZSAqL1xudmFyIGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuXG4vLyBUaGlzIHN0cmluZyBoYXMgbGVuZ3RoIDMyLCBhIHBvd2VyIG9mIDIsIHNvIHRoZSBtb2R1bHVzIGRvZXNuJ3QgaW50cm9kdWNlIGFcbi8vIGJpYXMuXG52YXIgX3JhbmRvbVN0cmluZ0NoYXJzID0gJ2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Jztcbm1vZHVsZS5leHBvcnRzID0ge1xuICBzdHJpbmc6IGZ1bmN0aW9uKGxlbmd0aCkge1xuICAgIHZhciBtYXggPSBfcmFuZG9tU3RyaW5nQ2hhcnMubGVuZ3RoO1xuICAgIHZhciBieXRlcyA9IGNyeXB0by5yYW5kb21CeXRlcyhsZW5ndGgpO1xuICAgIHZhciByZXQgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICByZXQucHVzaChfcmFuZG9tU3RyaW5nQ2hhcnMuc3Vic3RyKGJ5dGVzW2ldICUgbWF4LCAxKSk7XG4gICAgfVxuICAgIHJldHVybiByZXQuam9pbignJyk7XG4gIH1cblxuLCBudW1iZXI6IGZ1bmN0aW9uKG1heCkge1xuICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBtYXgpO1xuICB9XG5cbiwgbnVtYmVyU3RyaW5nOiBmdW5jdGlvbihtYXgpIHtcbiAgICB2YXIgdCA9ICgnJyArIChtYXggLSAxKSkubGVuZ3RoO1xuICAgIHZhciBwID0gbmV3IEFycmF5KHQgKyAxKS5qb2luKCcwJyk7XG4gICAgcmV0dXJuIChwICsgdGhpcy5udW1iZXIobWF4KSkuc2xpY2UoLXQpO1xuICB9XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL3V0aWxzL3JhbmRvbS5qc1xuICoqIG1vZHVsZSBpZCA9IDlcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar inherits = __webpack_require__(1)\n  , XhrDriver = __webpack_require__(26)\n  ;\n\nfunction XHRLocalObject(method, url, payload /*, opts */) {\n  XhrDriver.call(this, method, url, payload, {\n    noCredentials: true\n  });\n}\n\ninherits(XHRLocalObject, XhrDriver);\n\nXHRLocalObject.enabled = XhrDriver.enabled;\n\nmodule.exports = XHRLocalObject;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvc2VuZGVyL3hoci1sb2NhbC5qcz80ZjUxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7O0FBRUE7O0FBRUEiLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBYaHJEcml2ZXIgPSByZXF1aXJlKCcuLi9kcml2ZXIveGhyJylcbiAgO1xuXG5mdW5jdGlvbiBYSFJMb2NhbE9iamVjdChtZXRob2QsIHVybCwgcGF5bG9hZCAvKiwgb3B0cyAqLykge1xuICBYaHJEcml2ZXIuY2FsbCh0aGlzLCBtZXRob2QsIHVybCwgcGF5bG9hZCwge1xuICAgIG5vQ3JlZGVudGlhbHM6IHRydWVcbiAgfSk7XG59XG5cbmluaGVyaXRzKFhIUkxvY2FsT2JqZWN0LCBYaHJEcml2ZXIpO1xuXG5YSFJMb2NhbE9iamVjdC5lbmFibGVkID0gWGhyRHJpdmVyLmVuYWJsZWQ7XG5cbm1vZHVsZS5leHBvcnRzID0gWEhSTG9jYWxPYmplY3Q7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3NlbmRlci94aHItbG9jYWwuanNcbiAqKiBtb2R1bGUgaWQgPSAxMFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports){eval("/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\nmodule.exports = {\n  isOpera: function() {\n    return global.navigator &&\n      /opera/i.test(global.navigator.userAgent);\n  }\n\n, isKonqueror: function() {\n    return global.navigator &&\n      /konqueror/i.test(global.navigator.userAgent);\n  }\n\n  // #187 wrap document.domain in try/catch because of WP8 from file:///\n, hasDomain: function () {\n    // non-browser client always has a domain\n    if (!global.document) {\n      return true;\n    }\n\n    try {\n      return !!global.document.domain;\n    } catch (e) {\n      return false;\n    }\n  }\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi91dGlscy9icm93c2VyLmpzPzBiMTIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGlzT3BlcmE6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBnbG9iYWwubmF2aWdhdG9yICYmXG4gICAgICAvb3BlcmEvaS50ZXN0KGdsb2JhbC5uYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgfVxuXG4sIGlzS29ucXVlcm9yOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZ2xvYmFsLm5hdmlnYXRvciAmJlxuICAgICAgL2tvbnF1ZXJvci9pLnRlc3QoZ2xvYmFsLm5hdmlnYXRvci51c2VyQWdlbnQpO1xuICB9XG5cbiAgLy8gIzE4NyB3cmFwIGRvY3VtZW50LmRvbWFpbiBpbiB0cnkvY2F0Y2ggYmVjYXVzZSBvZiBXUDggZnJvbSBmaWxlOi8vL1xuLCBoYXNEb21haW46IGZ1bmN0aW9uICgpIHtcbiAgICAvLyBub24tYnJvd3NlciBjbGllbnQgYWx3YXlzIGhhcyBhIGRvbWFpblxuICAgIGlmICghZ2xvYmFsLmRvY3VtZW50KSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgcmV0dXJuICEhZ2xvYmFsLmRvY3VtZW50LmRvbWFpbjtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL3V0aWxzL2Jyb3dzZXIuanNcbiAqKiBtb2R1bGUgaWQgPSAxMVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process, global) {'use strict';\n\nvar eventUtils = __webpack_require__(7)\n  , JSON3 = __webpack_require__(6)\n  , browser = __webpack_require__(11)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:utils:iframe');\n}\n\nmodule.exports = {\n  WPrefix: '_jp'\n, currentWindowId: null\n\n, polluteGlobalNamespace: function() {\n    if (!(module.exports.WPrefix in global)) {\n      global[module.exports.WPrefix] = {};\n    }\n  }\n\n, postMessage: function(type, data) {\n    if (global.parent !== global) {\n      global.parent.postMessage(JSON3.stringify({\n        windowId: module.exports.currentWindowId\n      , type: type\n      , data: data || ''\n      }), '*');\n    } else {\n      debug('Cannot postMessage, no parent window.', type, data);\n    }\n  }\n\n, createIframe: function(iframeUrl, errorCallback) {\n    var iframe = global.document.createElement('iframe');\n    var tref, unloadRef;\n    var unattach = function() {\n      debug('unattach');\n      clearTimeout(tref);\n      // Explorer had problems with that.\n      try {\n        iframe.onload = null;\n      } catch (x) {}\n      iframe.onerror = null;\n    };\n    var cleanup = function() {\n      debug('cleanup');\n      if (iframe) {\n        unattach();\n        // This timeout makes chrome fire onbeforeunload event\n        // within iframe. Without the timeout it goes straight to\n        // onunload.\n        setTimeout(function() {\n          if (iframe) {\n            iframe.parentNode.removeChild(iframe);\n          }\n          iframe = null;\n        }, 0);\n        eventUtils.unloadDel(unloadRef);\n      }\n    };\n    var onerror = function(err) {\n      debug('onerror', err);\n      if (iframe) {\n        cleanup();\n        errorCallback(err);\n      }\n    };\n    var post = function(msg, origin) {\n      debug('post', msg, origin);\n      try {\n        // When the iframe is not loaded, IE raises an exception\n        // on 'contentWindow'.\n        setTimeout(function() {\n          if (iframe && iframe.contentWindow) {\n            iframe.contentWindow.postMessage(msg, origin);\n          }\n        }, 0);\n      } catch (x) {}\n    };\n\n    iframe.src = iframeUrl;\n    iframe.style.display = 'none';\n    iframe.style.position = 'absolute';\n    iframe.onerror = function() {\n      onerror('onerror');\n    };\n    iframe.onload = function() {\n      debug('onload');\n      // `onload` is triggered before scripts on the iframe are\n      // executed. Give it few seconds to actually load stuff.\n      clearTimeout(tref);\n      tref = setTimeout(function() {\n        onerror('onload timeout');\n      }, 2000);\n    };\n    global.document.body.appendChild(iframe);\n    tref = setTimeout(function() {\n      onerror('timeout');\n    }, 15000);\n    unloadRef = eventUtils.unloadAdd(cleanup);\n    return {\n      post: post\n    , cleanup: cleanup\n    , loaded: unattach\n    };\n  }\n\n/* jshint undef: false, newcap: false */\n/* eslint no-undef: 0, new-cap: 0 */\n, createHtmlfile: function(iframeUrl, errorCallback) {\n    var axo = ['Active'].concat('Object').join('X');\n    var doc = new global[axo]('htmlfile');\n    var tref, unloadRef;\n    var iframe;\n    var unattach = function() {\n      clearTimeout(tref);\n      iframe.onerror = null;\n    };\n    var cleanup = function() {\n      if (doc) {\n        unattach();\n        eventUtils.unloadDel(unloadRef);\n        iframe.parentNode.removeChild(iframe);\n        iframe = doc = null;\n        CollectGarbage();\n      }\n    };\n    var onerror = function(r)  {\n      debug('onerror', r);\n      if (doc) {\n        cleanup();\n        errorCallback(r);\n      }\n    };\n    var post = function(msg, origin) {\n      try {\n        // When the iframe is not loaded, IE raises an exception\n        // on 'contentWindow'.\n        setTimeout(function() {\n          if (iframe && iframe.contentWindow) {\n              iframe.contentWindow.postMessage(msg, origin);\n          }\n        }, 0);\n      } catch (x) {}\n    };\n\n    doc.open();\n    doc.write('<html><s' + 'cript>' +\n              'document.domain=\"' + global.document.domain + '\";' +\n              '</s' + 'cript></html>');\n    doc.close();\n    doc.parentWindow[module.exports.WPrefix] = global[module.exports.WPrefix];\n    var c = doc.createElement('div');\n    doc.body.appendChild(c);\n    iframe = doc.createElement('iframe');\n    c.appendChild(iframe);\n    iframe.src = iframeUrl;\n    iframe.onerror = function() {\n      onerror('onerror');\n    };\n    tref = setTimeout(function() {\n      onerror('timeout');\n    }, 15000);\n    unloadRef = eventUtils.unloadAdd(cleanup);\n    return {\n      post: post\n    , cleanup: cleanup\n    , loaded: unattach\n    };\n  }\n};\n\nmodule.exports.iframeEnabled = false;\nif (global.document) {\n  // postMessage misbehaves in konqueror 4.6.5 - the messages are delivered with\n  // huge delay, or not at all.\n  module.exports.iframeEnabled = (typeof global.postMessage === 'function' ||\n    typeof global.postMessage === 'object') && (!browser.isKonqueror());\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\nvar inherits = __webpack_require__(1)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:receiver:xhr');\n}\n\nfunction XhrReceiver(url, AjaxObject) {\n  debug(url);\n  EventEmitter.call(this);\n  var self = this;\n\n  this.bufferPosition = 0;\n\n  this.xo = new AjaxObject('POST', url, null);\n  this.xo.on('chunk', this._chunkHandler.bind(this));\n  this.xo.once('finish', function(status, text) {\n    debug('finish', status, text);\n    self._chunkHandler(status, text);\n    self.xo = null;\n    var reason = status === 200 ? 'network' : 'permanent';\n    debug('close', reason);\n    self.emit('close', null, reason);\n    self._cleanup();\n  });\n}\n\ninherits(XhrReceiver, EventEmitter);\n\nXhrReceiver.prototype._chunkHandler = function(status, text) {\n  debug('_chunkHandler', status);\n  if (status !== 200 || !text) {\n    return;\n  }\n\n  for (var idx = -1; ; this.bufferPosition += idx + 1) {\n    var buf = text.slice(this.bufferPosition);\n    idx = buf.indexOf('\\n');\n    if (idx === -1) {\n      break;\n    }\n    var msg = buf.slice(0, idx);\n    if (msg) {\n      debug('message', msg);\n      this.emit('message', msg);\n    }\n  }\n};\n\nXhrReceiver.prototype._cleanup = function() {\n  debug('_cleanup');\n  this.removeAllListeners();\n};\n\nXhrReceiver.prototype.abort = function() {\n  debug('abort');\n  if (this.xo) {\n    this.xo.close();\n    debug('close');\n    this.emit('close', null, 'user');\n    this.xo = null;\n  }\n  this._cleanup();\n};\n\nmodule.exports = XhrReceiver;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvcmVjZWl2ZXIveGhyLmpzP2JhZjgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CLEVBQUU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjEzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDpyZWNlaXZlcjp4aHInKTtcbn1cblxuZnVuY3Rpb24gWGhyUmVjZWl2ZXIodXJsLCBBamF4T2JqZWN0KSB7XG4gIGRlYnVnKHVybCk7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgdGhpcy5idWZmZXJQb3NpdGlvbiA9IDA7XG5cbiAgdGhpcy54byA9IG5ldyBBamF4T2JqZWN0KCdQT1NUJywgdXJsLCBudWxsKTtcbiAgdGhpcy54by5vbignY2h1bmsnLCB0aGlzLl9jaHVua0hhbmRsZXIuYmluZCh0aGlzKSk7XG4gIHRoaXMueG8ub25jZSgnZmluaXNoJywgZnVuY3Rpb24oc3RhdHVzLCB0ZXh0KSB7XG4gICAgZGVidWcoJ2ZpbmlzaCcsIHN0YXR1cywgdGV4dCk7XG4gICAgc2VsZi5fY2h1bmtIYW5kbGVyKHN0YXR1cywgdGV4dCk7XG4gICAgc2VsZi54byA9IG51bGw7XG4gICAgdmFyIHJlYXNvbiA9IHN0YXR1cyA9PT0gMjAwID8gJ25ldHdvcmsnIDogJ3Blcm1hbmVudCc7XG4gICAgZGVidWcoJ2Nsb3NlJywgcmVhc29uKTtcbiAgICBzZWxmLmVtaXQoJ2Nsb3NlJywgbnVsbCwgcmVhc29uKTtcbiAgICBzZWxmLl9jbGVhbnVwKCk7XG4gIH0pO1xufVxuXG5pbmhlcml0cyhYaHJSZWNlaXZlciwgRXZlbnRFbWl0dGVyKTtcblxuWGhyUmVjZWl2ZXIucHJvdG90eXBlLl9jaHVua0hhbmRsZXIgPSBmdW5jdGlvbihzdGF0dXMsIHRleHQpIHtcbiAgZGVidWcoJ19jaHVua0hhbmRsZXInLCBzdGF0dXMpO1xuICBpZiAoc3RhdHVzICE9PSAyMDAgfHwgIXRleHQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBmb3IgKHZhciBpZHggPSAtMTsgOyB0aGlzLmJ1ZmZlclBvc2l0aW9uICs9IGlkeCArIDEpIHtcbiAgICB2YXIgYnVmID0gdGV4dC5zbGljZSh0aGlzLmJ1ZmZlclBvc2l0aW9uKTtcbiAgICBpZHggPSBidWYuaW5kZXhPZignXFxuJyk7XG4gICAgaWYgKGlkeCA9PT0gLTEpIHtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICB2YXIgbXNnID0gYnVmLnNsaWNlKDAsIGlkeCk7XG4gICAgaWYgKG1zZykge1xuICAgICAgZGVidWcoJ21lc3NhZ2UnLCBtc2cpO1xuICAgICAgdGhpcy5lbWl0KCdtZXNzYWdlJywgbXNnKTtcbiAgICB9XG4gIH1cbn07XG5cblhoclJlY2VpdmVyLnByb3RvdHlwZS5fY2xlYW51cCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnX2NsZWFudXAnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbn07XG5cblhoclJlY2VpdmVyLnByb3RvdHlwZS5hYm9ydCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnYWJvcnQnKTtcbiAgaWYgKHRoaXMueG8pIHtcbiAgICB0aGlzLnhvLmNsb3NlKCk7XG4gICAgZGVidWcoJ2Nsb3NlJyk7XG4gICAgdGhpcy5lbWl0KCdjbG9zZScsIG51bGwsICd1c2VyJyk7XG4gICAgdGhpcy54byA9IG51bGw7XG4gIH1cbiAgdGhpcy5fY2xlYW51cCgpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBYaHJSZWNlaXZlcjtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvcmVjZWl2ZXIveGhyLmpzXG4gKiogbW9kdWxlIGlkID0gMTNcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");
},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar inherits = __webpack_require__(1)\n  , XhrDriver = __webpack_require__(26)\n  ;\n\nfunction XHRCorsObject(method, url, payload, opts) {\n  XhrDriver.call(this, method, url, payload, opts);\n}\n\ninherits(XHRCorsObject, XhrDriver);\n\nXHRCorsObject.enabled = XhrDriver.enabled && XhrDriver.supportsCORS;\n\nmodule.exports = XHRCorsObject;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvc2VuZGVyL3hoci1jb3JzLmpzPzM3ZTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQSIsImZpbGUiOiIxNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIFhockRyaXZlciA9IHJlcXVpcmUoJy4uL2RyaXZlci94aHInKVxuICA7XG5cbmZ1bmN0aW9uIFhIUkNvcnNPYmplY3QobWV0aG9kLCB1cmwsIHBheWxvYWQsIG9wdHMpIHtcbiAgWGhyRHJpdmVyLmNhbGwodGhpcywgbWV0aG9kLCB1cmwsIHBheWxvYWQsIG9wdHMpO1xufVxuXG5pbmhlcml0cyhYSFJDb3JzT2JqZWN0LCBYaHJEcml2ZXIpO1xuXG5YSFJDb3JzT2JqZWN0LmVuYWJsZWQgPSBYaHJEcml2ZXIuZW5hYmxlZCAmJiBYaHJEcml2ZXIuc3VwcG9ydHNDT1JTO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFhIUkNvcnNPYmplY3Q7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3NlbmRlci94aHItY29ycy5qc1xuICoqIG1vZHVsZSBpZCA9IDE0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(38)();\n// imports\n\n\n// module\nexports.push([module.id, "/*! normalize.css v3.0.1 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}@media print{*{text-shadow:none!important;color:#000!important;background:transparent!important;box-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:\\" (\\" attr(href) \\")\\"}abbr[title]:after{content:\\" (\\" attr(title) \\")\\"}a[href^=\\"#\\"]:after,a[href^=\\"javascript:\\"]:after{content:\\"\\"}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}select{background:#fff!important}.navbar{display:none}.table td,.table th{background-color:#fff!important}.btn>.caret,.dropup>.btn>.caret{border-top-color:#000!important}.label{border:1px solid #000}.table{border-collapse:collapse!important}.table-bordered td,.table-bordered th{border:1px solid #ddd!important}}@font-face{font-family:Glyphicons Halflings;src:url(" + __webpack_require__(21) + ");src:url(" + __webpack_require__(21) + "?#iefix) format(\\"embedded-opentype\\"),url(" + __webpack_require__(42) + ") format(\\"woff\\"),url(" + __webpack_require__(41) + ") format(\\"truetype\\"),url(" + __webpack_require__(40) + "#glyphicons_halflingsregular) format(\\"svg\\")}.glyphicon{position:relative;top:1px;display:inline-block;font-family:Glyphicons Halflings;font-style:normal;font-weight:400;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.glyphicon-asterisk:before{content:\\"*\\"}.glyphicon-plus:before{content:\\"+\\"}.glyphicon-euro:before{content:\\"\\\\20AC\\"}.glyphicon-minus:before{content:\\"\\\\2212\\"}.glyphicon-cloud:before{content:\\"\\\\2601\\"}.glyphicon-envelope:before{content:\\"\\\\2709\\"}.glyphicon-pencil:before{content:\\"\\\\270F\\"}.glyphicon-glass:before{content:\\"\\\\E001\\"}.glyphicon-music:before{content:\\"\\\\E002\\"}.glyphicon-search:before{content:\\"\\\\E003\\"}.glyphicon-heart:before{content:\\"\\\\E005\\"}.glyphicon-star:before{content:\\"\\\\E006\\"}.glyphicon-star-empty:before{content:\\"\\\\E007\\"}.glyphicon-user:before{content:\\"\\\\E008\\"}.glyphicon-film:before{content:\\"\\\\E009\\"}.glyphicon-th-large:before{content:\\"\\\\E010\\"}.glyphicon-th:before{content:\\"\\\\E011\\"}.glyphicon-th-list:before{content:\\"\\\\E012\\"}.glyphicon-ok:before{content:\\"\\\\E013\\"}.glyphicon-remove:before{content:\\"\\\\E014\\"}.glyphicon-zoom-in:before{content:\\"\\\\E015\\"}.glyphicon-zoom-out:before{content:\\"\\\\E016\\"}.glyphicon-off:before{content:\\"\\\\E017\\"}.glyphicon-signal:before{content:\\"\\\\E018\\"}.glyphicon-cog:before{content:\\"\\\\E019\\"}.glyphicon-trash:before{content:\\"\\\\E020\\"}.glyphicon-home:before{content:\\"\\\\E021\\"}.glyphicon-file:before{content:\\"\\\\E022\\"}.glyphicon-time:before{content:\\"\\\\E023\\"}.glyphicon-road:before{content:\\"\\\\E024\\"}.glyphicon-download-alt:before{content:\\"\\\\E025\\"}.glyphicon-download:before{content:\\"\\\\E026\\"}.glyphicon-upload:before{content:\\"\\\\E027\\"}.glyphicon-inbox:before{content:\\"\\\\E028\\"}.glyphicon-play-circle:before{content:\\"\\\\E029\\"}.glyphicon-repeat:before{content:\\"\\\\E030\\"}.glyphicon-refresh:before{content:\\"\\\\E031\\"}.glyphicon-list-alt:before{content:\\"\\\\E032\\"}.glyphicon-lock:before{content:\\"\\\\E033\\"}.glyphicon-flag:before{content:\\"\\\\E034\\"}.glyphicon-headphones:before{content:\\"\\\\E035\\"}.glyphicon-volume-off:before{content:\\"\\\\E036\\"}.glyphicon-volume-down:before{content:\\"\\\\E037\\"}.glyphicon-volume-up:before{content:\\"\\\\E038\\"}.glyphicon-qrcode:before{content:\\"\\\\E039\\"}.glyphicon-barcode:before{content:\\"\\\\E040\\"}.glyphicon-tag:before{content:\\"\\\\E041\\"}.glyphicon-tags:before{content:\\"\\\\E042\\"}.glyphicon-book:before{content:\\"\\\\E043\\"}.glyphicon-bookmark:before{content:\\"\\\\E044\\"}.glyphicon-print:before{content:\\"\\\\E045\\"}.glyphicon-camera:before{content:\\"\\\\E046\\"}.glyphicon-font:before{content:\\"\\\\E047\\"}.glyphicon-bold:before{content:\\"\\\\E048\\"}.glyphicon-italic:before{content:\\"\\\\E049\\"}.glyphicon-text-height:before{content:\\"\\\\E050\\"}.glyphicon-text-width:before{content:\\"\\\\E051\\"}.glyphicon-align-left:before{content:\\"\\\\E052\\"}.glyphicon-align-center:before{content:\\"\\\\E053\\"}.glyphicon-align-right:before{content:\\"\\\\E054\\"}.glyphicon-align-justify:before{content:\\"\\\\E055\\"}.glyphicon-list:before{content:\\"\\\\E056\\"}.glyphicon-indent-left:before{content:\\"\\\\E057\\"}.glyphicon-indent-right:before{content:\\"\\\\E058\\"}.glyphicon-facetime-video:before{content:\\"\\\\E059\\"}.glyphicon-picture:before{content:\\"\\\\E060\\"}.glyphicon-map-marker:before{content:\\"\\\\E062\\"}.glyphicon-adjust:before{content:\\"\\\\E063\\"}.glyphicon-tint:before{content:\\"\\\\E064\\"}.glyphicon-edit:before{content:\\"\\\\E065\\"}.glyphicon-share:before{content:\\"\\\\E066\\"}.glyphicon-check:before{content:\\"\\\\E067\\"}.glyphicon-move:before{content:\\"\\\\E068\\"}.glyphicon-step-backward:before{content:\\"\\\\E069\\"}.glyphicon-fast-backward:before{content:\\"\\\\E070\\"}.glyphicon-backward:before{content:\\"\\\\E071\\"}.glyphicon-play:before{content:\\"\\\\E072\\"}.glyphicon-pause:before{content:\\"\\\\E073\\"}.glyphicon-stop:before{content:\\"\\\\E074\\"}.glyphicon-forward:before{content:\\"\\\\E075\\"}.glyphicon-fast-forward:before{content:\\"\\\\E076\\"}.glyphicon-step-forward:before{content:\\"\\\\E077\\"}.glyphicon-eject:before{content:\\"\\\\E078\\"}.glyphicon-chevron-left:before{content:\\"\\\\E079\\"}.glyphicon-chevron-right:before{content:\\"\\\\E080\\"}.glyphicon-plus-sign:before{content:\\"\\\\E081\\"}.glyphicon-minus-sign:before{content:\\"\\\\E082\\"}.glyphicon-remove-sign:before{content:\\"\\\\E083\\"}.glyphicon-ok-sign:before{content:\\"\\\\E084\\"}.glyphicon-question-sign:before{content:\\"\\\\E085\\"}.glyphicon-info-sign:before{content:\\"\\\\E086\\"}.glyphicon-screenshot:before{content:\\"\\\\E087\\"}.glyphicon-remove-circle:before{content:\\"\\\\E088\\"}.glyphicon-ok-circle:before{content:\\"\\\\E089\\"}.glyphicon-ban-circle:before{content:\\"\\\\E090\\"}.glyphicon-arrow-left:before{content:\\"\\\\E091\\"}.glyphicon-arrow-right:before{content:\\"\\\\E092\\"}.glyphicon-arrow-up:before{content:\\"\\\\E093\\"}.glyphicon-arrow-down:before{content:\\"\\\\E094\\"}.glyphicon-share-alt:before{content:\\"\\\\E095\\"}.glyphicon-resize-full:before{content:\\"\\\\E096\\"}.glyphicon-resize-small:before{content:\\"\\\\E097\\"}.glyphicon-exclamation-sign:before{content:\\"\\\\E101\\"}.glyphicon-gift:before{content:\\"\\\\E102\\"}.glyphicon-leaf:before{content:\\"\\\\E103\\"}.glyphicon-fire:before{content:\\"\\\\E104\\"}.glyphicon-eye-open:before{content:\\"\\\\E105\\"}.glyphicon-eye-close:before{content:\\"\\\\E106\\"}.glyphicon-warning-sign:before{content:\\"\\\\E107\\"}.glyphicon-plane:before{content:\\"\\\\E108\\"}.glyphicon-calendar:before{content:\\"\\\\E109\\"}.glyphicon-random:before{content:\\"\\\\E110\\"}.glyphicon-comment:before{content:\\"\\\\E111\\"}.glyphicon-magnet:before{content:\\"\\\\E112\\"}.glyphicon-chevron-up:before{content:\\"\\\\E113\\"}.glyphicon-chevron-down:before{content:\\"\\\\E114\\"}.glyphicon-retweet:before{content:\\"\\\\E115\\"}.glyphicon-shopping-cart:before{content:\\"\\\\E116\\"}.glyphicon-folder-close:before{content:\\"\\\\E117\\"}.glyphicon-folder-open:before{content:\\"\\\\E118\\"}.glyphicon-resize-vertical:before{content:\\"\\\\E119\\"}.glyphicon-resize-horizontal:before{content:\\"\\\\E120\\"}.glyphicon-hdd:before{content:\\"\\\\E121\\"}.glyphicon-bullhorn:before{content:\\"\\\\E122\\"}.glyphicon-bell:before{content:\\"\\\\E123\\"}.glyphicon-certificate:before{content:\\"\\\\E124\\"}.glyphicon-thumbs-up:before{content:\\"\\\\E125\\"}.glyphicon-thumbs-down:before{content:\\"\\\\E126\\"}.glyphicon-hand-right:before{content:\\"\\\\E127\\"}.glyphicon-hand-left:before{content:\\"\\\\E128\\"}.glyphicon-hand-up:before{content:\\"\\\\E129\\"}.glyphicon-hand-down:before{content:\\"\\\\E130\\"}.glyphicon-circle-arrow-right:before{content:\\"\\\\E131\\"}.glyphicon-circle-arrow-left:before{content:\\"\\\\E132\\"}.glyphicon-circle-arrow-up:before{content:\\"\\\\E133\\"}.glyphicon-circle-arrow-down:before{content:\\"\\\\E134\\"}.glyphicon-globe:before{content:\\"\\\\E135\\"}.glyphicon-wrench:before{content:\\"\\\\E136\\"}.glyphicon-tasks:before{content:\\"\\\\E137\\"}.glyphicon-filter:before{content:\\"\\\\E138\\"}.glyphicon-briefcase:before{content:\\"\\\\E139\\"}.glyphicon-fullscreen:before{content:\\"\\\\E140\\"}.glyphicon-dashboard:before{content:\\"\\\\E141\\"}.glyphicon-paperclip:before{content:\\"\\\\E142\\"}.glyphicon-heart-empty:before{content:\\"\\\\E143\\"}.glyphicon-link:before{content:\\"\\\\E144\\"}.glyphicon-phone:before{content:\\"\\\\E145\\"}.glyphicon-pushpin:before{content:\\"\\\\E146\\"}.glyphicon-usd:before{content:\\"\\\\E148\\"}.glyphicon-gbp:before{content:\\"\\\\E149\\"}.glyphicon-sort:before{content:\\"\\\\E150\\"}.glyphicon-sort-by-alphabet:before{content:\\"\\\\E151\\"}.glyphicon-sort-by-alphabet-alt:before{content:\\"\\\\E152\\"}.glyphicon-sort-by-order:before{content:\\"\\\\E153\\"}.glyphicon-sort-by-order-alt:before{content:\\"\\\\E154\\"}.glyphicon-sort-by-attributes:before{content:\\"\\\\E155\\"}.glyphicon-sort-by-attributes-alt:before{content:\\"\\\\E156\\"}.glyphicon-unchecked:before{content:\\"\\\\E157\\"}.glyphicon-expand:before{content:\\"\\\\E158\\"}.glyphicon-collapse-down:before{content:\\"\\\\E159\\"}.glyphicon-collapse-up:before{content:\\"\\\\E160\\"}.glyphicon-log-in:before{content:\\"\\\\E161\\"}.glyphicon-flash:before{content:\\"\\\\E162\\"}.glyphicon-log-out:before{content:\\"\\\\E163\\"}.glyphicon-new-window:before{content:\\"\\\\E164\\"}.glyphicon-record:before{content:\\"\\\\E165\\"}.glyphicon-save:before{content:\\"\\\\E166\\"}.glyphicon-open:before{content:\\"\\\\E167\\"}.glyphicon-saved:before{content:\\"\\\\E168\\"}.glyphicon-import:before{content:\\"\\\\E169\\"}.glyphicon-export:before{content:\\"\\\\E170\\"}.glyphicon-send:before{content:\\"\\\\E171\\"}.glyphicon-floppy-disk:before{content:\\"\\\\E172\\"}.glyphicon-floppy-saved:before{content:\\"\\\\E173\\"}.glyphicon-floppy-remove:before{content:\\"\\\\E174\\"}.glyphicon-floppy-save:before{content:\\"\\\\E175\\"}.glyphicon-floppy-open:before{content:\\"\\\\E176\\"}.glyphicon-credit-card:before{content:\\"\\\\E177\\"}.glyphicon-transfer:before{content:\\"\\\\E178\\"}.glyphicon-cutlery:before{content:\\"\\\\E179\\"}.glyphicon-header:before{content:\\"\\\\E180\\"}.glyphicon-compressed:before{content:\\"\\\\E181\\"}.glyphicon-earphone:before{content:\\"\\\\E182\\"}.glyphicon-phone-alt:before{content:\\"\\\\E183\\"}.glyphicon-tower:before{content:\\"\\\\E184\\"}.glyphicon-stats:before{content:\\"\\\\E185\\"}.glyphicon-sd-video:before{content:\\"\\\\E186\\"}.glyphicon-hd-video:before{content:\\"\\\\E187\\"}.glyphicon-subtitles:before{content:\\"\\\\E188\\"}.glyphicon-sound-stereo:before{content:\\"\\\\E189\\"}.glyphicon-sound-dolby:before{content:\\"\\\\E190\\"}.glyphicon-sound-5-1:before{content:\\"\\\\E191\\"}.glyphicon-sound-6-1:before{content:\\"\\\\E192\\"}.glyphicon-sound-7-1:before{content:\\"\\\\E193\\"}.glyphicon-copyright-mark:before{content:\\"\\\\E194\\"}.glyphicon-registration-mark:before{content:\\"\\\\E195\\"}.glyphicon-cloud-download:before{content:\\"\\\\E197\\"}.glyphicon-cloud-upload:before{content:\\"\\\\E198\\"}.glyphicon-tree-conifer:before{content:\\"\\\\E199\\"}.glyphicon-tree-deciduous:before{content:\\"\\\\E200\\"}*,:after,:before{box-sizing:border-box}html{font-size:62.5%;-webkit-tap-highlight-color:transparent}body{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-size:14px;line-height:1.42857;color:#333;background-color:#fff}button,input,select,textarea{font-family:inherit;font-size:inherit;line-height:inherit}a{color:#428bca;text-decoration:none}a:focus,a:hover{color:#2a6496;text-decoration:underline}a:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}figure{margin:0}img{vertical-align:middle}.img-responsive{display:block;max-width:100%;height:auto}.img-rounded{border-radius:6px}.img-thumbnail{padding:4px;line-height:1.42857;background-color:#fff;border:1px solid #ddd;border-radius:4px;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out;display:inline-block;max-width:100%;height:auto}.img-circle{border-radius:50%}hr{margin-top:20px;margin-bottom:20px;border:0;border-top:1px solid #eee}.sr-only{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{font-family:inherit;font-weight:500;line-height:1.1;color:inherit}.h1 .small,.h1 small,.h2 .small,.h2 small,.h3 .small,.h3 small,.h4 .small,.h4 small,.h5 .small,.h5 small,.h6 .small,.h6 small,h1 .small,h1 small,h2 .small,h2 small,h3 .small,h3 small,h4 .small,h4 small,h5 .small,h5 small,h6 .small,h6 small{font-weight:400;line-height:1;color:#999}.h1,.h2,.h3,h1,h2,h3{margin-top:20px;margin-bottom:10px}.h1 .small,.h1 small,.h2 .small,.h2 small,.h3 .small,.h3 small,h1 .small,h1 small,h2 .small,h2 small,h3 .small,h3 small{font-size:65%}.h4,.h5,.h6,h4,h5,h6{margin-top:10px;margin-bottom:10px}.h4 .small,.h4 small,.h5 .small,.h5 small,.h6 .small,.h6 small,h4 .small,h4 small,h5 .small,h5 small,h6 .small,h6 small{font-size:75%}.h1,h1{font-size:36px}.h2,h2{font-size:30px}.h3,h3{font-size:24px}.h4,h4{font-size:18px}.h5,h5{font-size:14px}.h6,h6{font-size:12px}p{margin:0 0 10px}.lead{margin-bottom:20px;font-size:16px;font-weight:300;line-height:1.4}@media (min-width:768px){.lead{font-size:21px}}.small,small{font-size:85%}cite{font-style:normal}.mark,mark{background-color:#fcf8e3;padding:.2em}.text-left{text-align:left}.text-right{text-align:right}.text-center{text-align:center}.text-justify{text-align:justify}.text-muted{color:#999}.text-primary{color:#428bca}a.text-primary:hover{color:#3071a9}.text-success{color:#3c763d}a.text-success:hover{color:#2b542c}.text-info{color:#31708f}a.text-info:hover{color:#245269}.text-warning{color:#8a6d3b}a.text-warning:hover{color:#66512c}.text-danger{color:#a94442}a.text-danger:hover{color:#843534}.bg-primary{color:#fff;background-color:#428bca}a.bg-primary:hover{background-color:#3071a9}.bg-success{background-color:#dff0d8}a.bg-success:hover{background-color:#c1e2b3}.bg-info{background-color:#d9edf7}a.bg-info:hover{background-color:#afd9ee}.bg-warning{background-color:#fcf8e3}a.bg-warning:hover{background-color:#f7ecb5}.bg-danger{background-color:#f2dede}a.bg-danger:hover{background-color:#e4b9b9}.page-header{padding-bottom:9px;margin:40px 0 20px;border-bottom:1px solid #eee}ol,ul{margin-top:0;margin-bottom:10px}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}.list-inline,.list-unstyled{padding-left:0;list-style:none}.list-inline{margin-left:-5px}.list-inline>li{display:inline-block;padding-left:5px;padding-right:5px}dl{margin-top:0;margin-bottom:20px}dd,dt{line-height:1.42857}dt{font-weight:700}dd{margin-left:0}.dl-horizontal dd:after,.dl-horizontal dd:before{content:\\" \\";display:table}.dl-horizontal dd:after{clear:both}@media (min-width:768px){.dl-horizontal dt{float:left;width:160px;clear:left;text-align:right;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.dl-horizontal dd{margin-left:180px}}abbr[data-original-title],abbr[title]{cursor:help;border-bottom:1px dotted #999}.initialism{font-size:90%;text-transform:uppercase}blockquote{padding:10px 20px;margin:0 0 20px;font-size:17.5px;border-left:5px solid #eee}blockquote ol:last-child,blockquote p:last-child,blockquote ul:last-child{margin-bottom:0}blockquote .small,blockquote footer,blockquote small{display:block;font-size:80%;line-height:1.42857;color:#999}blockquote .small:before,blockquote footer:before,blockquote small:before{content:\'\\\\2014   \\\\A0\'}.blockquote-reverse,blockquote.pull-right{padding-right:15px;padding-left:0;border-right:5px solid #eee;border-left:0;text-align:right}.blockquote-reverse .small:before,.blockquote-reverse footer:before,.blockquote-reverse small:before,blockquote.pull-right .small:before,blockquote.pull-right footer:before,blockquote.pull-right small:before{content:\'\'}.blockquote-reverse .small:after,.blockquote-reverse footer:after,.blockquote-reverse small:after,blockquote.pull-right .small:after,blockquote.pull-right footer:after,blockquote.pull-right small:after{content:\'\\\\A0   \\\\2014\'}blockquote:after,blockquote:before{content:\\"\\"}address{margin-bottom:20px;font-style:normal;line-height:1.42857}code,kbd,pre,samp{font-family:Menlo,Monaco,Consolas,Courier New,monospace}code{color:#c7254e;background-color:#f9f2f4;border-radius:4px}code,kbd{padding:2px 4px;font-size:90%}kbd{color:#fff;background-color:#333;border-radius:3px;box-shadow:inset 0 -1px 0 rgba(0,0,0,.25)}pre{display:block;padding:9.5px;margin:0 0 10px;font-size:13px;line-height:1.42857;word-break:break-all;word-wrap:break-word;color:#333;background-color:#f5f5f5;border:1px solid #ccc;border-radius:4px}pre code{padding:0;font-size:inherit;color:inherit;white-space:pre-wrap;background-color:transparent;border-radius:0}.pre-scrollable{max-height:340px;overflow-y:scroll}.container{margin-right:auto;margin-left:auto;padding-left:15px;padding-right:15px}.container:after,.container:before{content:\\" \\";display:table}.container:after{clear:both}@media (min-width:768px){.container{width:750px}}@media (min-width:992px){.container{width:970px}}@media (min-width:1200px){.container{width:1170px}}.container-fluid{margin-right:auto;margin-left:auto;padding-left:15px;padding-right:15px}.container-fluid:after,.container-fluid:before{content:\\" \\";display:table}.container-fluid:after{clear:both}.row{margin-left:-15px;margin-right:-15px}.row:after,.row:before{content:\\" \\";display:table}.row:after{clear:both}.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-xs-1,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9,.col-xs-10,.col-xs-11,.col-xs-12{position:relative;min-height:1px;padding-left:15px;padding-right:15px}.col-xs-1,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9,.col-xs-10,.col-xs-11,.col-xs-12{float:left}.col-xs-1{width:8.33333%}.col-xs-2{width:16.66667%}.col-xs-3{width:25%}.col-xs-4{width:33.33333%}.col-xs-5{width:41.66667%}.col-xs-6{width:50%}.col-xs-7{width:58.33333%}.col-xs-8{width:66.66667%}.col-xs-9{width:75%}.col-xs-10{width:83.33333%}.col-xs-11{width:91.66667%}.col-xs-12{width:100%}.col-xs-pull-0{right:auto}.col-xs-pull-1{right:8.33333%}.col-xs-pull-2{right:16.66667%}.col-xs-pull-3{right:25%}.col-xs-pull-4{right:33.33333%}.col-xs-pull-5{right:41.66667%}.col-xs-pull-6{right:50%}.col-xs-pull-7{right:58.33333%}.col-xs-pull-8{right:66.66667%}.col-xs-pull-9{right:75%}.col-xs-pull-10{right:83.33333%}.col-xs-pull-11{right:91.66667%}.col-xs-pull-12{right:100%}.col-xs-push-0{left:auto}.col-xs-push-1{left:8.33333%}.col-xs-push-2{left:16.66667%}.col-xs-push-3{left:25%}.col-xs-push-4{left:33.33333%}.col-xs-push-5{left:41.66667%}.col-xs-push-6{left:50%}.col-xs-push-7{left:58.33333%}.col-xs-push-8{left:66.66667%}.col-xs-push-9{left:75%}.col-xs-push-10{left:83.33333%}.col-xs-push-11{left:91.66667%}.col-xs-push-12{left:100%}.col-xs-offset-0{margin-left:0}.col-xs-offset-1{margin-left:8.33333%}.col-xs-offset-2{margin-left:16.66667%}.col-xs-offset-3{margin-left:25%}.col-xs-offset-4{margin-left:33.33333%}.col-xs-offset-5{margin-left:41.66667%}.col-xs-offset-6{margin-left:50%}.col-xs-offset-7{margin-left:58.33333%}.col-xs-offset-8{margin-left:66.66667%}.col-xs-offset-9{margin-left:75%}.col-xs-offset-10{margin-left:83.33333%}.col-xs-offset-11{margin-left:91.66667%}.col-xs-offset-12{margin-left:100%}@media (min-width:768px){.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12{float:left}.col-sm-1{width:8.33333%}.col-sm-2{width:16.66667%}.col-sm-3{width:25%}.col-sm-4{width:33.33333%}.col-sm-5{width:41.66667%}.col-sm-6{width:50%}.col-sm-7{width:58.33333%}.col-sm-8{width:66.66667%}.col-sm-9{width:75%}.col-sm-10{width:83.33333%}.col-sm-11{width:91.66667%}.col-sm-12{width:100%}.col-sm-pull-0{right:auto}.col-sm-pull-1{right:8.33333%}.col-sm-pull-2{right:16.66667%}.col-sm-pull-3{right:25%}.col-sm-pull-4{right:33.33333%}.col-sm-pull-5{right:41.66667%}.col-sm-pull-6{right:50%}.col-sm-pull-7{right:58.33333%}.col-sm-pull-8{right:66.66667%}.col-sm-pull-9{right:75%}.col-sm-pull-10{right:83.33333%}.col-sm-pull-11{right:91.66667%}.col-sm-pull-12{right:100%}.col-sm-push-0{left:auto}.col-sm-push-1{left:8.33333%}.col-sm-push-2{left:16.66667%}.col-sm-push-3{left:25%}.col-sm-push-4{left:33.33333%}.col-sm-push-5{left:41.66667%}.col-sm-push-6{left:50%}.col-sm-push-7{left:58.33333%}.col-sm-push-8{left:66.66667%}.col-sm-push-9{left:75%}.col-sm-push-10{left:83.33333%}.col-sm-push-11{left:91.66667%}.col-sm-push-12{left:100%}.col-sm-offset-0{margin-left:0}.col-sm-offset-1{margin-left:8.33333%}.col-sm-offset-2{margin-left:16.66667%}.col-sm-offset-3{margin-left:25%}.col-sm-offset-4{margin-left:33.33333%}.col-sm-offset-5{margin-left:41.66667%}.col-sm-offset-6{margin-left:50%}.col-sm-offset-7{margin-left:58.33333%}.col-sm-offset-8{margin-left:66.66667%}.col-sm-offset-9{margin-left:75%}.col-sm-offset-10{margin-left:83.33333%}.col-sm-offset-11{margin-left:91.66667%}.col-sm-offset-12{margin-left:100%}}@media (min-width:992px){.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12{float:left}.col-md-1{width:8.33333%}.col-md-2{width:16.66667%}.col-md-3{width:25%}.col-md-4{width:33.33333%}.col-md-5{width:41.66667%}.col-md-6{width:50%}.col-md-7{width:58.33333%}.col-md-8{width:66.66667%}.col-md-9{width:75%}.col-md-10{width:83.33333%}.col-md-11{width:91.66667%}.col-md-12{width:100%}.col-md-pull-0{right:auto}.col-md-pull-1{right:8.33333%}.col-md-pull-2{right:16.66667%}.col-md-pull-3{right:25%}.col-md-pull-4{right:33.33333%}.col-md-pull-5{right:41.66667%}.col-md-pull-6{right:50%}.col-md-pull-7{right:58.33333%}.col-md-pull-8{right:66.66667%}.col-md-pull-9{right:75%}.col-md-pull-10{right:83.33333%}.col-md-pull-11{right:91.66667%}.col-md-pull-12{right:100%}.col-md-push-0{left:auto}.col-md-push-1{left:8.33333%}.col-md-push-2{left:16.66667%}.col-md-push-3{left:25%}.col-md-push-4{left:33.33333%}.col-md-push-5{left:41.66667%}.col-md-push-6{left:50%}.col-md-push-7{left:58.33333%}.col-md-push-8{left:66.66667%}.col-md-push-9{left:75%}.col-md-push-10{left:83.33333%}.col-md-push-11{left:91.66667%}.col-md-push-12{left:100%}.col-md-offset-0{margin-left:0}.col-md-offset-1{margin-left:8.33333%}.col-md-offset-2{margin-left:16.66667%}.col-md-offset-3{margin-left:25%}.col-md-offset-4{margin-left:33.33333%}.col-md-offset-5{margin-left:41.66667%}.col-md-offset-6{margin-left:50%}.col-md-offset-7{margin-left:58.33333%}.col-md-offset-8{margin-left:66.66667%}.col-md-offset-9{margin-left:75%}.col-md-offset-10{margin-left:83.33333%}.col-md-offset-11{margin-left:91.66667%}.col-md-offset-12{margin-left:100%}}@media (min-width:1200px){.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12{float:left}.col-lg-1{width:8.33333%}.col-lg-2{width:16.66667%}.col-lg-3{width:25%}.col-lg-4{width:33.33333%}.col-lg-5{width:41.66667%}.col-lg-6{width:50%}.col-lg-7{width:58.33333%}.col-lg-8{width:66.66667%}.col-lg-9{width:75%}.col-lg-10{width:83.33333%}.col-lg-11{width:91.66667%}.col-lg-12{width:100%}.col-lg-pull-0{right:auto}.col-lg-pull-1{right:8.33333%}.col-lg-pull-2{right:16.66667%}.col-lg-pull-3{right:25%}.col-lg-pull-4{right:33.33333%}.col-lg-pull-5{right:41.66667%}.col-lg-pull-6{right:50%}.col-lg-pull-7{right:58.33333%}.col-lg-pull-8{right:66.66667%}.col-lg-pull-9{right:75%}.col-lg-pull-10{right:83.33333%}.col-lg-pull-11{right:91.66667%}.col-lg-pull-12{right:100%}.col-lg-push-0{left:auto}.col-lg-push-1{left:8.33333%}.col-lg-push-2{left:16.66667%}.col-lg-push-3{left:25%}.col-lg-push-4{left:33.33333%}.col-lg-push-5{left:41.66667%}.col-lg-push-6{left:50%}.col-lg-push-7{left:58.33333%}.col-lg-push-8{left:66.66667%}.col-lg-push-9{left:75%}.col-lg-push-10{left:83.33333%}.col-lg-push-11{left:91.66667%}.col-lg-push-12{left:100%}.col-lg-offset-0{margin-left:0}.col-lg-offset-1{margin-left:8.33333%}.col-lg-offset-2{margin-left:16.66667%}.col-lg-offset-3{margin-left:25%}.col-lg-offset-4{margin-left:33.33333%}.col-lg-offset-5{margin-left:41.66667%}.col-lg-offset-6{margin-left:50%}.col-lg-offset-7{margin-left:58.33333%}.col-lg-offset-8{margin-left:66.66667%}.col-lg-offset-9{margin-left:75%}.col-lg-offset-10{margin-left:83.33333%}.col-lg-offset-11{margin-left:91.66667%}.col-lg-offset-12{margin-left:100%}}table{max-width:100%;background-color:transparent}th{text-align:left}.table{width:100%;margin-bottom:20px}.table>tbody>tr>td,.table>tbody>tr>th,.table>tfoot>tr>td,.table>tfoot>tr>th,.table>thead>tr>td,.table>thead>tr>th{padding:8px;line-height:1.42857;vertical-align:top;border-top:1px solid #ddd}.table>thead>tr>th{vertical-align:bottom;border-bottom:2px solid #ddd}.table>caption+thead>tr:first-child>td,.table>caption+thead>tr:first-child>th,.table>colgroup+thead>tr:first-child>td,.table>colgroup+thead>tr:first-child>th,.table>thead:first-child>tr:first-child>td,.table>thead:first-child>tr:first-child>th{border-top:0}.table>tbody+tbody{border-top:2px solid #ddd}.table .table{background-color:#fff}.table-condensed>tbody>tr>td,.table-condensed>tbody>tr>th,.table-condensed>tfoot>tr>td,.table-condensed>tfoot>tr>th,.table-condensed>thead>tr>td,.table-condensed>thead>tr>th{padding:5px}.table-bordered,.table-bordered>tbody>tr>td,.table-bordered>tbody>tr>th,.table-bordered>tfoot>tr>td,.table-bordered>tfoot>tr>th,.table-bordered>thead>tr>td,.table-bordered>thead>tr>th{border:1px solid #ddd}.table-bordered>thead>tr>td,.table-bordered>thead>tr>th{border-bottom-width:2px}.table-striped>tbody>tr:nth-child(odd)>td,.table-striped>tbody>tr:nth-child(odd)>th{background-color:#f9f9f9}.table-hover>tbody>tr:hover>td,.table-hover>tbody>tr:hover>th{background-color:#f5f5f5}table col[class*=col-]{position:static;float:none;display:table-column}table td[class*=col-],table th[class*=col-]{position:static;float:none;display:table-cell}.table>tbody>tr.active>td,.table>tbody>tr.active>th,.table>tbody>tr>td.active,.table>tbody>tr>th.active,.table>tfoot>tr.active>td,.table>tfoot>tr.active>th,.table>tfoot>tr>td.active,.table>tfoot>tr>th.active,.table>thead>tr.active>td,.table>thead>tr.active>th,.table>thead>tr>td.active,.table>thead>tr>th.active{background-color:#f5f5f5}.table-hover>tbody>tr.active:hover>td,.table-hover>tbody>tr.active:hover>th,.table-hover>tbody>tr:hover>.active,.table-hover>tbody>tr>td.active:hover,.table-hover>tbody>tr>th.active:hover{background-color:#e8e8e8}.table>tbody>tr.success>td,.table>tbody>tr.success>th,.table>tbody>tr>td.success,.table>tbody>tr>th.success,.table>tfoot>tr.success>td,.table>tfoot>tr.success>th,.table>tfoot>tr>td.success,.table>tfoot>tr>th.success,.table>thead>tr.success>td,.table>thead>tr.success>th,.table>thead>tr>td.success,.table>thead>tr>th.success{background-color:#dff0d8}.table-hover>tbody>tr.success:hover>td,.table-hover>tbody>tr.success:hover>th,.table-hover>tbody>tr:hover>.success,.table-hover>tbody>tr>td.success:hover,.table-hover>tbody>tr>th.success:hover{background-color:#d0e9c6}.table>tbody>tr.info>td,.table>tbody>tr.info>th,.table>tbody>tr>td.info,.table>tbody>tr>th.info,.table>tfoot>tr.info>td,.table>tfoot>tr.info>th,.table>tfoot>tr>td.info,.table>tfoot>tr>th.info,.table>thead>tr.info>td,.table>thead>tr.info>th,.table>thead>tr>td.info,.table>thead>tr>th.info{background-color:#d9edf7}.table-hover>tbody>tr.info:hover>td,.table-hover>tbody>tr.info:hover>th,.table-hover>tbody>tr:hover>.info,.table-hover>tbody>tr>td.info:hover,.table-hover>tbody>tr>th.info:hover{background-color:#c4e3f3}.table>tbody>tr.warning>td,.table>tbody>tr.warning>th,.table>tbody>tr>td.warning,.table>tbody>tr>th.warning,.table>tfoot>tr.warning>td,.table>tfoot>tr.warning>th,.table>tfoot>tr>td.warning,.table>tfoot>tr>th.warning,.table>thead>tr.warning>td,.table>thead>tr.warning>th,.table>thead>tr>td.warning,.table>thead>tr>th.warning{background-color:#fcf8e3}.table-hover>tbody>tr.warning:hover>td,.table-hover>tbody>tr.warning:hover>th,.table-hover>tbody>tr:hover>.warning,.table-hover>tbody>tr>td.warning:hover,.table-hover>tbody>tr>th.warning:hover{background-color:#faf2cc}.table>tbody>tr.danger>td,.table>tbody>tr.danger>th,.table>tbody>tr>td.danger,.table>tbody>tr>th.danger,.table>tfoot>tr.danger>td,.table>tfoot>tr.danger>th,.table>tfoot>tr>td.danger,.table>tfoot>tr>th.danger,.table>thead>tr.danger>td,.table>thead>tr.danger>th,.table>thead>tr>td.danger,.table>thead>tr>th.danger{background-color:#f2dede}.table-hover>tbody>tr.danger:hover>td,.table-hover>tbody>tr.danger:hover>th,.table-hover>tbody>tr:hover>.danger,.table-hover>tbody>tr>td.danger:hover,.table-hover>tbody>tr>th.danger:hover{background-color:#ebcccc}@media screen and (max-width:767px){.table-responsive{width:100%;margin-bottom:15px;overflow-y:hidden;overflow-x:scroll;-ms-overflow-style:-ms-autohiding-scrollbar;border:1px solid #ddd;-webkit-overflow-scrolling:touch}.table-responsive>.table{margin-bottom:0}.table-responsive>.table>tbody>tr>td,.table-responsive>.table>tbody>tr>th,.table-responsive>.table>tfoot>tr>td,.table-responsive>.table>tfoot>tr>th,.table-responsive>.table>thead>tr>td,.table-responsive>.table>thead>tr>th{white-space:nowrap}.table-responsive>.table-bordered{border:0}.table-responsive>.table-bordered>tbody>tr>td:first-child,.table-responsive>.table-bordered>tbody>tr>th:first-child,.table-responsive>.table-bordered>tfoot>tr>td:first-child,.table-responsive>.table-bordered>tfoot>tr>th:first-child,.table-responsive>.table-bordered>thead>tr>td:first-child,.table-responsive>.table-bordered>thead>tr>th:first-child{border-left:0}.table-responsive>.table-bordered>tbody>tr>td:last-child,.table-responsive>.table-bordered>tbody>tr>th:last-child,.table-responsive>.table-bordered>tfoot>tr>td:last-child,.table-responsive>.table-bordered>tfoot>tr>th:last-child,.table-responsive>.table-bordered>thead>tr>td:last-child,.table-responsive>.table-bordered>thead>tr>th:last-child{border-right:0}.table-responsive>.table-bordered>tbody>tr:last-child>td,.table-responsive>.table-bordered>tbody>tr:last-child>th,.table-responsive>.table-bordered>tfoot>tr:last-child>td,.table-responsive>.table-bordered>tfoot>tr:last-child>th{border-bottom:0}}fieldset{margin:0;min-width:0}fieldset,legend{padding:0;border:0}legend{display:block;width:100%;margin-bottom:20px;font-size:21px;line-height:inherit;color:#333;border-bottom:1px solid #e5e5e5}label{display:inline-block;max-width:100%;margin-bottom:5px;font-weight:700}input[type=search]{box-sizing:border-box}input[type=checkbox],input[type=radio]{margin:4px 0 0;margin-top:1px\\\\9;line-height:normal}input[type=file]{display:block}input[type=range]{display:block;width:100%}select[multiple],select[size]{height:auto}input[type=checkbox]:focus,input[type=file]:focus,input[type=radio]:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}output{padding-top:7px}.form-control,output{display:block;font-size:14px;line-height:1.42857;color:#555}.form-control{width:100%;height:34px;padding:6px 12px;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px;box-shadow:inset 0 1px 1px rgba(0,0,0,.075);-webkit-transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s;transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s}.form-control:focus{border-color:#66afe9;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6)}.form-control::-moz-placeholder{color:#999;opacity:1}.form-control:-ms-input-placeholder{color:#999}.form-control::-webkit-input-placeholder{color:#999}.form-control[disabled],.form-control[readonly],fieldset[disabled] .form-control{cursor:not-allowed;background-color:#eee;opacity:1}textarea.form-control{height:auto}input[type=search]{-webkit-appearance:none}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{line-height:34px;line-height:1.42857 \\\\0}.input-group-sm>.input-group-btn>input[type=date].btn,.input-group-sm>.input-group-btn>input[type=datetime-local].btn,.input-group-sm>.input-group-btn>input[type=month].btn,.input-group-sm>.input-group-btn>input[type=time].btn,.input-group-sm>input[type=date].form-control,.input-group-sm>input[type=date].input-group-addon,.input-group-sm>input[type=datetime-local].form-control,.input-group-sm>input[type=datetime-local].input-group-addon,.input-group-sm>input[type=month].form-control,.input-group-sm>input[type=month].input-group-addon,.input-group-sm>input[type=time].form-control,.input-group-sm>input[type=time].input-group-addon,input[type=date].input-sm,input[type=datetime-local].input-sm,input[type=month].input-sm,input[type=time].input-sm{line-height:30px}.input-group-lg>.input-group-btn>input[type=date].btn,.input-group-lg>.input-group-btn>input[type=datetime-local].btn,.input-group-lg>.input-group-btn>input[type=month].btn,.input-group-lg>.input-group-btn>input[type=time].btn,.input-group-lg>input[type=date].form-control,.input-group-lg>input[type=date].input-group-addon,.input-group-lg>input[type=datetime-local].form-control,.input-group-lg>input[type=datetime-local].input-group-addon,.input-group-lg>input[type=month].form-control,.input-group-lg>input[type=month].input-group-addon,.input-group-lg>input[type=time].form-control,.input-group-lg>input[type=time].input-group-addon,input[type=date].input-lg,input[type=datetime-local].input-lg,input[type=month].input-lg,input[type=time].input-lg{line-height:46px}.form-group{margin-bottom:15px}.checkbox,.radio{display:block;min-height:20px;margin-top:10px;margin-bottom:10px}.checkbox label,.radio label{padding-left:20px;margin-bottom:0;font-weight:400;cursor:pointer}.checkbox-inline input[type=checkbox],.checkbox input[type=checkbox],.radio-inline input[type=radio],.radio input[type=radio]{float:left;margin-left:-20px}.checkbox+.checkbox,.radio+.radio{margin-top:-5px}.checkbox-inline,.radio-inline{display:inline-block;padding-left:20px;margin-bottom:0;vertical-align:middle;font-weight:400;cursor:pointer}.checkbox-inline+.checkbox-inline,.radio-inline+.radio-inline{margin-top:0;margin-left:10px}.checkbox-inline[disabled],.checkbox[disabled],.radio-inline[disabled],.radio[disabled],fieldset[disabled] .checkbox,fieldset[disabled] .checkbox-inline,fieldset[disabled] .radio,fieldset[disabled] .radio-inline,fieldset[disabled] input[type=checkbox],fieldset[disabled] input[type=radio],input[type=checkbox][disabled],input[type=radio][disabled]{cursor:not-allowed}.input-group-sm>.form-control,.input-group-sm>.input-group-addon,.input-group-sm>.input-group-btn>.btn,.input-sm{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}.input-group-sm>.input-group-btn>select.btn,.input-group-sm>select.form-control,.input-group-sm>select.input-group-addon,select.input-sm{height:30px;line-height:30px}.input-group-sm>.input-group-btn>select[multiple].btn,.input-group-sm>.input-group-btn>textarea.btn,.input-group-sm>select[multiple].form-control,.input-group-sm>select[multiple].input-group-addon,.input-group-sm>textarea.form-control,.input-group-sm>textarea.input-group-addon,select[multiple].input-sm,textarea.input-sm{height:auto}.input-group-lg>.form-control,.input-group-lg>.input-group-addon,.input-group-lg>.input-group-btn>.btn,.input-lg{height:46px;padding:10px 16px;font-size:18px;line-height:1.33;border-radius:6px}.input-group-lg>.input-group-btn>select.btn,.input-group-lg>select.form-control,.input-group-lg>select.input-group-addon,select.input-lg{height:46px;line-height:46px}.input-group-lg>.input-group-btn>select[multiple].btn,.input-group-lg>.input-group-btn>textarea.btn,.input-group-lg>select[multiple].form-control,.input-group-lg>select[multiple].input-group-addon,.input-group-lg>textarea.form-control,.input-group-lg>textarea.input-group-addon,select[multiple].input-lg,textarea.input-lg{height:auto}.has-feedback{position:relative}.has-feedback .form-control{padding-right:42.5px}.form-control-feedback{position:absolute;top:25px;right:0;z-index:2;display:block;width:34px;height:34px;line-height:34px;text-align:center}.input-group-lg>.form-control+.form-control-feedback,.input-group-lg>.input-group-addon+.form-control-feedback,.input-group-lg>.input-group-btn>.btn+.form-control-feedback,.input-lg+.form-control-feedback{width:46px;height:46px;line-height:46px}.input-group-sm>.form-control+.form-control-feedback,.input-group-sm>.input-group-addon+.form-control-feedback,.input-group-sm>.input-group-btn>.btn+.form-control-feedback,.input-sm+.form-control-feedback{width:30px;height:30px;line-height:30px}.has-success .checkbox,.has-success .checkbox-inline,.has-success .control-label,.has-success .help-block,.has-success .radio,.has-success .radio-inline{color:#3c763d}.has-success .form-control{border-color:#3c763d;box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-success .form-control:focus{border-color:#2b542c;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #67b168}.has-success .input-group-addon{color:#3c763d;border-color:#3c763d;background-color:#dff0d8}.has-success .form-control-feedback{color:#3c763d}.has-warning .checkbox,.has-warning .checkbox-inline,.has-warning .control-label,.has-warning .help-block,.has-warning .radio,.has-warning .radio-inline{color:#8a6d3b}.has-warning .form-control{border-color:#8a6d3b;box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-warning .form-control:focus{border-color:#66512c;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #c0a16b}.has-warning .input-group-addon{color:#8a6d3b;border-color:#8a6d3b;background-color:#fcf8e3}.has-warning .form-control-feedback{color:#8a6d3b}.has-error .checkbox,.has-error .checkbox-inline,.has-error .control-label,.has-error .help-block,.has-error .radio,.has-error .radio-inline{color:#a94442}.has-error .form-control{border-color:#a94442;box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-error .form-control:focus{border-color:#843534;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #ce8483}.has-error .input-group-addon{color:#a94442;border-color:#a94442;background-color:#f2dede}.has-error .form-control-feedback{color:#a94442}.has-feedback label.sr-only~.form-control-feedback{top:0}.form-control-static{margin-bottom:0}.help-block{display:block;margin-top:5px;margin-bottom:10px;color:#737373}@media (min-width:768px){.form-inline .form-group,.navbar-form .form-group{display:inline-block;margin-bottom:0;vertical-align:middle}.form-inline .form-control,.navbar-form .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .input-group,.navbar-form .input-group{display:inline-table;vertical-align:middle}.form-inline .input-group .form-control,.form-inline .input-group .input-group-addon,.form-inline .input-group .input-group-btn,.navbar-form .input-group .form-control,.navbar-form .input-group .input-group-addon,.navbar-form .input-group .input-group-btn{width:auto}.form-inline .input-group>.form-control,.navbar-form .input-group>.form-control{width:100%}.form-inline .control-label,.navbar-form .control-label{margin-bottom:0;vertical-align:middle}.form-inline .checkbox,.form-inline .radio,.navbar-form .checkbox,.navbar-form .radio{display:inline-block;margin-top:0;margin-bottom:0;padding-left:0;vertical-align:middle}.form-inline .checkbox input[type=checkbox],.form-inline .radio input[type=radio],.navbar-form .checkbox input[type=checkbox],.navbar-form .radio input[type=radio]{float:none;margin-left:0}.form-inline .has-feedback .form-control-feedback,.navbar-form .has-feedback .form-control-feedback{top:0}}.form-horizontal .checkbox,.form-horizontal .checkbox-inline,.form-horizontal .radio,.form-horizontal .radio-inline{margin-top:0;margin-bottom:0;padding-top:7px}.form-horizontal .checkbox,.form-horizontal .radio{min-height:27px}.form-horizontal .form-group{margin-left:-15px;margin-right:-15px}.form-horizontal .form-group:after,.form-horizontal .form-group:before{content:\\" \\";display:table}.form-horizontal .form-group:after{clear:both}.form-horizontal .form-control-static{padding-top:7px;padding-bottom:7px}@media (min-width:768px){.form-horizontal .control-label{text-align:right;margin-bottom:0;padding-top:7px}}.form-horizontal .has-feedback .form-control-feedback{top:0;right:15px}.btn{display:inline-block;margin-bottom:0;font-weight:400;text-align:center;vertical-align:middle;cursor:pointer;background-image:none;border:1px solid transparent;white-space:nowrap;padding:6px 12px;font-size:14px;line-height:1.42857;border-radius:4px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.btn.active:focus,.btn:active:focus,.btn:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}.btn:focus,.btn:hover{color:#333;text-decoration:none}.btn.active,.btn:active{outline:0;background-image:none;box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn.disabled,.btn[disabled],fieldset[disabled] .btn{cursor:not-allowed;pointer-events:none;opacity:.65;filter:alpha(opacity=65);box-shadow:none}.btn-default{color:#333;background-color:#fff;border-color:#ccc}.btn-default.active,.btn-default:active,.btn-default:focus,.btn-default:hover,.open>.btn-default.dropdown-toggle{color:#333;background-color:#e6e6e6;border-color:#adadad}.btn-default.active,.btn-default:active,.open>.btn-default.dropdown-toggle{background-image:none}.btn-default.disabled,.btn-default.disabled.active,.btn-default.disabled:active,.btn-default.disabled:focus,.btn-default.disabled:hover,.btn-default[disabled],.btn-default[disabled].active,.btn-default[disabled]:active,.btn-default[disabled]:focus,.btn-default[disabled]:hover,fieldset[disabled] .btn-default,fieldset[disabled] .btn-default.active,fieldset[disabled] .btn-default:active,fieldset[disabled] .btn-default:focus,fieldset[disabled] .btn-default:hover{background-color:#fff;border-color:#ccc}.btn-default .badge{color:#fff;background-color:#333}.btn-primary{color:#fff;background-color:#428bca;border-color:#357ebd}.btn-primary.active,.btn-primary:active,.btn-primary:focus,.btn-primary:hover,.open>.btn-primary.dropdown-toggle{color:#fff;background-color:#3071a9;border-color:#285e8e}.btn-primary.active,.btn-primary:active,.open>.btn-primary.dropdown-toggle{background-image:none}.btn-primary.disabled,.btn-primary.disabled.active,.btn-primary.disabled:active,.btn-primary.disabled:focus,.btn-primary.disabled:hover,.btn-primary[disabled],.btn-primary[disabled].active,.btn-primary[disabled]:active,.btn-primary[disabled]:focus,.btn-primary[disabled]:hover,fieldset[disabled] .btn-primary,fieldset[disabled] .btn-primary.active,fieldset[disabled] .btn-primary:active,fieldset[disabled] .btn-primary:focus,fieldset[disabled] .btn-primary:hover{background-color:#428bca;border-color:#357ebd}.btn-primary .badge{color:#428bca;background-color:#fff}.btn-success{color:#fff;background-color:#5cb85c;border-color:#4cae4c}.btn-success.active,.btn-success:active,.btn-success:focus,.btn-success:hover,.open>.btn-success.dropdown-toggle{color:#fff;background-color:#449d44;border-color:#398439}.btn-success.active,.btn-success:active,.open>.btn-success.dropdown-toggle{background-image:none}.btn-success.disabled,.btn-success.disabled.active,.btn-success.disabled:active,.btn-success.disabled:focus,.btn-success.disabled:hover,.btn-success[disabled],.btn-success[disabled].active,.btn-success[disabled]:active,.btn-success[disabled]:focus,.btn-success[disabled]:hover,fieldset[disabled] .btn-success,fieldset[disabled] .btn-success.active,fieldset[disabled] .btn-success:active,fieldset[disabled] .btn-success:focus,fieldset[disabled] .btn-success:hover{background-color:#5cb85c;border-color:#4cae4c}.btn-success .badge{color:#5cb85c;background-color:#fff}.btn-info{color:#fff;background-color:#5bc0de;border-color:#46b8da}.btn-info.active,.btn-info:active,.btn-info:focus,.btn-info:hover,.open>.btn-info.dropdown-toggle{color:#fff;background-color:#31b0d5;border-color:#269abc}.btn-info.active,.btn-info:active,.open>.btn-info.dropdown-toggle{background-image:none}.btn-info.disabled,.btn-info.disabled.active,.btn-info.disabled:active,.btn-info.disabled:focus,.btn-info.disabled:hover,.btn-info[disabled],.btn-info[disabled].active,.btn-info[disabled]:active,.btn-info[disabled]:focus,.btn-info[disabled]:hover,fieldset[disabled] .btn-info,fieldset[disabled] .btn-info.active,fieldset[disabled] .btn-info:active,fieldset[disabled] .btn-info:focus,fieldset[disabled] .btn-info:hover{background-color:#5bc0de;border-color:#46b8da}.btn-info .badge{color:#5bc0de;background-color:#fff}.btn-warning{color:#fff;background-color:#f0ad4e;border-color:#eea236}.btn-warning.active,.btn-warning:active,.btn-warning:focus,.btn-warning:hover,.open>.btn-warning.dropdown-toggle{color:#fff;background-color:#ec971f;border-color:#d58512}.btn-warning.active,.btn-warning:active,.open>.btn-warning.dropdown-toggle{background-image:none}.btn-warning.disabled,.btn-warning.disabled.active,.btn-warning.disabled:active,.btn-warning.disabled:focus,.btn-warning.disabled:hover,.btn-warning[disabled],.btn-warning[disabled].active,.btn-warning[disabled]:active,.btn-warning[disabled]:focus,.btn-warning[disabled]:hover,fieldset[disabled] .btn-warning,fieldset[disabled] .btn-warning.active,fieldset[disabled] .btn-warning:active,fieldset[disabled] .btn-warning:focus,fieldset[disabled] .btn-warning:hover{background-color:#f0ad4e;border-color:#eea236}.btn-warning .badge{color:#f0ad4e;background-color:#fff}.btn-danger{color:#fff;background-color:#d9534f;border-color:#d43f3a}.btn-danger.active,.btn-danger:active,.btn-danger:focus,.btn-danger:hover,.open>.btn-danger.dropdown-toggle{color:#fff;background-color:#c9302c;border-color:#ac2925}.btn-danger.active,.btn-danger:active,.open>.btn-danger.dropdown-toggle{background-image:none}.btn-danger.disabled,.btn-danger.disabled.active,.btn-danger.disabled:active,.btn-danger.disabled:focus,.btn-danger.disabled:hover,.btn-danger[disabled],.btn-danger[disabled].active,.btn-danger[disabled]:active,.btn-danger[disabled]:focus,.btn-danger[disabled]:hover,fieldset[disabled] .btn-danger,fieldset[disabled] .btn-danger.active,fieldset[disabled] .btn-danger:active,fieldset[disabled] .btn-danger:focus,fieldset[disabled] .btn-danger:hover{background-color:#d9534f;border-color:#d43f3a}.btn-danger .badge{color:#d9534f;background-color:#fff}.btn-link{color:#428bca;font-weight:400;cursor:pointer;border-radius:0}.btn-link,.btn-link:active,.btn-link[disabled],fieldset[disabled] .btn-link{background-color:transparent;box-shadow:none}.btn-link,.btn-link:active,.btn-link:focus,.btn-link:hover{border-color:transparent}.btn-link:focus,.btn-link:hover{color:#2a6496;text-decoration:underline;background-color:transparent}.btn-link[disabled]:focus,.btn-link[disabled]:hover,fieldset[disabled] .btn-link:focus,fieldset[disabled] .btn-link:hover{color:#999;text-decoration:none}.btn-group-lg>.btn,.btn-lg{padding:10px 16px;font-size:18px;line-height:1.33;border-radius:6px}.btn-group-sm>.btn,.btn-sm{padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}.btn-group-xs>.btn,.btn-xs{padding:1px 5px;font-size:12px;line-height:1.5;border-radius:3px}.btn-block{display:block;width:100%;padding-left:0;padding-right:0}.btn-block+.btn-block{margin-top:5px}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}.fade{opacity:0;-webkit-transition:opacity .15s linear;transition:opacity .15s linear}.fade.in{opacity:1}.collapse{display:none}.collapse.in{display:block}tr.collapse.in{display:table-row}tbody.collapse.in{display:table-row-group}.collapsing{position:relative;height:0;overflow:hidden;-webkit-transition:height .35s ease;transition:height .35s ease}.caret{display:inline-block;width:0;height:0;margin-left:2px;vertical-align:middle;border-top:4px solid;border-right:4px solid transparent;border-left:4px solid transparent}.dropdown{position:relative}.dropdown-toggle:focus{outline:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:160px;padding:5px 0;margin:2px 0 0;list-style:none;font-size:14px;text-align:left;background-color:#fff;border:1px solid #ccc;border:1px solid rgba(0,0,0,.15);border-radius:4px;box-shadow:0 6px 12px rgba(0,0,0,.175);background-clip:padding-box}.dropdown-menu.pull-right{right:0;left:auto}.dropdown-menu .divider{height:1px;margin:9px 0;overflow:hidden;background-color:#e5e5e5}.dropdown-menu>li>a{display:block;padding:3px 20px;clear:both;font-weight:400;line-height:1.42857;color:#333;white-space:nowrap}.dropdown-menu>li>a:focus,.dropdown-menu>li>a:hover{text-decoration:none;color:#262626;background-color:#f5f5f5}.dropdown-menu>.active>a,.dropdown-menu>.active>a:focus,.dropdown-menu>.active>a:hover{color:#fff;text-decoration:none;outline:0;background-color:#428bca}.dropdown-menu>.disabled>a,.dropdown-menu>.disabled>a:focus,.dropdown-menu>.disabled>a:hover{color:#999}.dropdown-menu>.disabled>a:focus,.dropdown-menu>.disabled>a:hover{text-decoration:none;background-color:transparent;background-image:none;filter:progid:DXImageTransform.Microsoft.gradient(enabled = false);cursor:not-allowed}.open>.dropdown-menu{display:block}.open>a{outline:0}.dropdown-menu-right{left:auto;right:0}.dropdown-menu-left{left:0;right:auto}.dropdown-header{display:block;padding:3px 20px;font-size:12px;line-height:1.42857;color:#999}.dropdown-backdrop{position:fixed;left:0;right:0;bottom:0;top:0;z-index:990}.pull-right>.dropdown-menu{right:0;left:auto}.dropup .caret,.navbar-fixed-bottom .dropdown .caret{border-top:0;border-bottom:4px solid;content:\\"\\"}.dropup .dropdown-menu,.navbar-fixed-bottom .dropdown .dropdown-menu{top:auto;bottom:100%;margin-bottom:1px}@media (min-width:768px){.navbar-right .dropdown-menu{right:0;left:auto}.navbar-right .dropdown-menu-left{left:0;right:auto}}.btn-group,.btn-group-vertical{position:relative;display:inline-block;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;float:left}.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group-vertical>.btn:hover,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus,.btn-group>.btn:hover{z-index:2}.btn-group-vertical>.btn:focus,.btn-group>.btn:focus{outline:0}.btn-group .btn+.btn,.btn-group .btn+.btn-group,.btn-group .btn-group+.btn,.btn-group .btn-group+.btn-group{margin-left:-1px}.btn-toolbar{margin-left:-5px}.btn-toolbar:after,.btn-toolbar:before{content:\\" \\";display:table}.btn-toolbar:after{clear:both}.btn-toolbar .btn-group,.btn-toolbar .input-group{float:left}.btn-toolbar>.btn,.btn-toolbar>.btn-group,.btn-toolbar>.input-group{margin-left:5px}.btn-group>.btn:not(:first-child):not(:last-child):not(.dropdown-toggle){border-radius:0}.btn-group>.btn:first-child{margin-left:0}.btn-group>.btn:first-child:not(:last-child):not(.dropdown-toggle){border-bottom-right-radius:0;border-top-right-radius:0}.btn-group>.btn:last-child:not(:first-child),.btn-group>.dropdown-toggle:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0}.btn-group>.btn-group{float:left}.btn-group>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0}.btn-group>.btn-group:first-child>.btn:last-child,.btn-group>.btn-group:first-child>.dropdown-toggle{border-bottom-right-radius:0;border-top-right-radius:0}.btn-group>.btn-group:last-child>.btn:first-child{border-bottom-left-radius:0;border-top-left-radius:0}.btn-group .dropdown-toggle:active,.btn-group.open .dropdown-toggle{outline:0}.btn-group>.btn+.dropdown-toggle{padding-left:8px;padding-right:8px}.btn-group-lg.btn-group>.btn+.dropdown-toggle,.btn-group>.btn-lg+.dropdown-toggle{padding-left:12px;padding-right:12px}.btn-group.open .dropdown-toggle{box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn-group.open .dropdown-toggle.btn-link{box-shadow:none}.btn .caret{margin-left:0}.btn-group-lg>.btn .caret,.btn-lg .caret{border-width:5px 5px 0;border-bottom-width:0}.dropup .btn-group-lg>.btn .caret,.dropup .btn-lg .caret{border-width:0 5px 5px}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group,.btn-group-vertical>.btn-group>.btn{display:block;float:none;width:100%;max-width:100%}.btn-group-vertical>.btn-group:after,.btn-group-vertical>.btn-group:before{content:\\" \\";display:table}.btn-group-vertical>.btn-group:after{clear:both}.btn-group-vertical>.btn-group>.btn{float:none}.btn-group-vertical>.btn+.btn,.btn-group-vertical>.btn+.btn-group,.btn-group-vertical>.btn-group+.btn,.btn-group-vertical>.btn-group+.btn-group{margin-top:-1px;margin-left:0}.btn-group-vertical>.btn:not(:first-child):not(:last-child){border-radius:0}.btn-group-vertical>.btn:first-child:not(:last-child){border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn:last-child:not(:first-child){border-bottom-left-radius:4px;border-top-right-radius:0;border-top-left-radius:0}.btn-group-vertical>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0}.btn-group-vertical>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group-vertical>.btn-group:first-child:not(:last-child)>.dropdown-toggle{border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:last-child:not(:first-child)>.btn:first-child{border-top-right-radius:0;border-top-left-radius:0}.btn-group-justified{display:table;width:100%;table-layout:fixed;border-collapse:separate}.btn-group-justified>.btn,.btn-group-justified>.btn-group{float:none;display:table-cell;width:1%}.btn-group-justified>.btn-group .btn{width:100%}[data-toggle=buttons]>.btn>input[type=checkbox],[data-toggle=buttons]>.btn>input[type=radio]{position:absolute;z-index:-1;opacity:0}.input-group{position:relative;display:table;border-collapse:separate}.input-group[class*=col-]{float:none;padding-left:0;padding-right:0}.input-group .form-control{position:relative;z-index:2;float:left;width:100%;margin-bottom:0}.input-group-addon,.input-group-btn,.input-group .form-control{display:table-cell}.input-group-addon:not(:first-child):not(:last-child),.input-group-btn:not(:first-child):not(:last-child),.input-group .form-control:not(:first-child):not(:last-child){border-radius:0}.input-group-addon,.input-group-btn{width:1%;white-space:nowrap;vertical-align:middle}.input-group-addon{padding:6px 12px;font-size:14px;font-weight:400;line-height:1;color:#555;text-align:center;background-color:#eee;border:1px solid #ccc;border-radius:4px}.input-group-addon.input-sm,.input-group-sm>.input-group-addon,.input-group-sm>.input-group-btn>.input-group-addon.btn{padding:5px 10px;font-size:12px;border-radius:3px}.input-group-addon.input-lg,.input-group-lg>.input-group-addon,.input-group-lg>.input-group-btn>.input-group-addon.btn{padding:10px 16px;font-size:18px;border-radius:6px}.input-group-addon input[type=checkbox],.input-group-addon input[type=radio]{margin-top:0}.input-group-addon:first-child,.input-group-btn:first-child>.btn,.input-group-btn:first-child>.btn-group>.btn,.input-group-btn:first-child>.dropdown-toggle,.input-group-btn:last-child>.btn-group:not(:last-child)>.btn,.input-group-btn:last-child>.btn:not(:last-child):not(.dropdown-toggle),.input-group .form-control:first-child{border-bottom-right-radius:0;border-top-right-radius:0}.input-group-addon:first-child{border-right:0}.input-group-addon:last-child,.input-group-btn:first-child>.btn-group:not(:first-child)>.btn,.input-group-btn:first-child>.btn:not(:first-child),.input-group-btn:last-child>.btn,.input-group-btn:last-child>.btn-group>.btn,.input-group-btn:last-child>.dropdown-toggle,.input-group .form-control:last-child{border-bottom-left-radius:0;border-top-left-radius:0}.input-group-addon:last-child{border-left:0}.input-group-btn{font-size:0;white-space:nowrap}.input-group-btn,.input-group-btn>.btn{position:relative}.input-group-btn>.btn+.btn{margin-left:-1px}.input-group-btn>.btn:active,.input-group-btn>.btn:focus,.input-group-btn>.btn:hover{z-index:2}.input-group-btn:first-child>.btn,.input-group-btn:first-child>.btn-group{margin-right:-1px}.input-group-btn:last-child>.btn,.input-group-btn:last-child>.btn-group{margin-left:-1px}.nav{margin-bottom:0;padding-left:0;list-style:none}.nav:after,.nav:before{content:\\" \\";display:table}.nav:after{clear:both}.nav>li,.nav>li>a{position:relative;display:block}.nav>li>a{padding:10px 15px}.nav>li>a:focus,.nav>li>a:hover{text-decoration:none;background-color:#eee}.nav>li.disabled>a{color:#999}.nav>li.disabled>a:focus,.nav>li.disabled>a:hover{color:#999;text-decoration:none;background-color:transparent;cursor:not-allowed}.nav .open>a,.nav .open>a:focus,.nav .open>a:hover{background-color:#eee;border-color:#428bca}.nav .nav-divider{height:1px;margin:9px 0;overflow:hidden;background-color:#e5e5e5}.nav>li>a>img{max-width:none}.nav-tabs{border-bottom:1px solid #ddd}.nav-tabs>li{float:left;margin-bottom:-1px}.nav-tabs>li>a{margin-right:2px;line-height:1.42857;border:1px solid transparent;border-radius:4px 4px 0 0}.nav-tabs>li>a:hover{border-color:#eee #eee #ddd}.nav-tabs>li.active>a,.nav-tabs>li.active>a:focus,.nav-tabs>li.active>a:hover{color:#555;background-color:#fff;border:1px solid #ddd;border-bottom-color:transparent;cursor:default}.nav-pills>li{float:left}.nav-pills>li>a{border-radius:4px}.nav-pills>li+li{margin-left:2px}.nav-pills>li.active>a,.nav-pills>li.active>a:focus,.nav-pills>li.active>a:hover{color:#fff;background-color:#428bca}.nav-stacked>li{float:none}.nav-stacked>li+li{margin-top:2px;margin-left:0}.nav-justified,.nav-tabs.nav-justified{width:100%}.nav-justified>li,.nav-tabs.nav-justified>li{float:none}.nav-justified>li>a,.nav-tabs.nav-justified>li>a{text-align:center;margin-bottom:5px}.nav-justified>.dropdown .dropdown-menu{top:auto;left:auto}@media (min-width:768px){.nav-justified>li,.nav-tabs.nav-justified>li{display:table-cell;width:1%}.nav-justified>li>a,.nav-tabs.nav-justified>li>a{margin-bottom:0}}.nav-tabs-justified,.nav-tabs.nav-justified{border-bottom:0}.nav-tabs-justified>li>a,.nav-tabs.nav-justified>li>a{margin-right:0;border-radius:4px}.nav-tabs-justified>.active>a,.nav-tabs-justified>.active>a:focus,.nav-tabs-justified>.active>a:hover,.nav-tabs.nav-justified>.active>a,.nav-tabs.nav-justified>.active>a:focus,.nav-tabs.nav-justified>.active>a:hover{border:1px solid #ddd}@media (min-width:768px){.nav-tabs-justified>li>a,.nav-tabs.nav-justified>li>a{border-bottom:1px solid #ddd;border-radius:4px 4px 0 0}.nav-tabs-justified>.active>a,.nav-tabs-justified>.active>a:focus,.nav-tabs-justified>.active>a:hover,.nav-tabs.nav-justified>.active>a,.nav-tabs.nav-justified>.active>a:focus,.nav-tabs.nav-justified>.active>a:hover{border-bottom-color:#fff}}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-right-radius:0;border-top-left-radius:0}.navbar{position:relative;min-height:50px;margin-bottom:20px;border:1px solid transparent}.navbar:after,.navbar:before{content:\\" \\";display:table}.navbar:after{clear:both}@media (min-width:768px){.navbar{border-radius:4px}}.navbar-header:after,.navbar-header:before{content:\\" \\";display:table}.navbar-header:after{clear:both}@media (min-width:768px){.navbar-header{float:left}}.navbar-collapse{overflow-x:visible;padding-right:15px;padding-left:15px;border-top:1px solid transparent;box-shadow:inset 0 1px 0 hsla(0,0%,100%,.1);-webkit-overflow-scrolling:touch}.navbar-collapse:after,.navbar-collapse:before{content:\\" \\";display:table}.navbar-collapse:after{clear:both}.navbar-collapse.in{overflow-y:auto}@media (min-width:768px){.navbar-collapse{width:auto;border-top:0;box-shadow:none}.navbar-collapse.collapse{display:block!important;height:auto!important;padding-bottom:0;overflow:visible!important}.navbar-collapse.in{overflow-y:visible}.navbar-fixed-bottom .navbar-collapse,.navbar-fixed-top .navbar-collapse,.navbar-static-top .navbar-collapse{padding-left:0;padding-right:0}}.navbar-fixed-bottom .navbar-collapse,.navbar-fixed-top .navbar-collapse{max-height:340px}@media (max-width:480px) and (orientation:landscape){.navbar-fixed-bottom .navbar-collapse,.navbar-fixed-top .navbar-collapse{max-height:200px}}.container-fluid>.navbar-collapse,.container-fluid>.navbar-header,.container>.navbar-collapse,.container>.navbar-header{margin-right:-15px;margin-left:-15px}@media (min-width:768px){.container-fluid>.navbar-collapse,.container-fluid>.navbar-header,.container>.navbar-collapse,.container>.navbar-header{margin-right:0;margin-left:0}}.navbar-static-top{z-index:1000;border-width:0 0 1px}@media (min-width:768px){.navbar-static-top{border-radius:0}}.navbar-fixed-bottom,.navbar-fixed-top{position:fixed;right:0;left:0;z-index:1030}@media (min-width:768px){.navbar-fixed-bottom,.navbar-fixed-top{border-radius:0}}.navbar-fixed-top{top:0;border-width:0 0 1px}.navbar-fixed-bottom{bottom:0;margin-bottom:0;border-width:1px 0 0}.navbar-brand{float:left;padding:15px;font-size:18px;line-height:20px;height:50px}.navbar-brand:focus,.navbar-brand:hover{text-decoration:none}@media (min-width:768px){.navbar>.container-fluid .navbar-brand,.navbar>.container .navbar-brand{margin-left:-15px}}.navbar-toggle{position:relative;float:right;margin-right:15px;padding:9px 10px;margin-top:8px;margin-bottom:8px;background-color:transparent;background-image:none;border:1px solid transparent;border-radius:4px}.navbar-toggle:focus{outline:0}.navbar-toggle .icon-bar{display:block;width:22px;height:2px;border-radius:1px}.navbar-toggle .icon-bar+.icon-bar{margin-top:4px}@media (min-width:768px){.navbar-toggle{display:none}}.navbar-nav{margin:7.5px -15px}.navbar-nav>li>a{padding-top:10px;padding-bottom:10px;line-height:20px}@media (max-width:767px){.navbar-nav .open .dropdown-menu{position:static;float:none;width:auto;margin-top:0;background-color:transparent;border:0;box-shadow:none}.navbar-nav .open .dropdown-menu .dropdown-header,.navbar-nav .open .dropdown-menu>li>a{padding:5px 15px 5px 25px}.navbar-nav .open .dropdown-menu>li>a{line-height:20px}.navbar-nav .open .dropdown-menu>li>a:focus,.navbar-nav .open .dropdown-menu>li>a:hover{background-image:none}}@media (min-width:768px){.navbar-nav{float:left;margin:0}.navbar-nav>li{float:left}.navbar-nav>li>a{padding-top:15px;padding-bottom:15px}.navbar-nav.navbar-right:last-child{margin-right:-15px}}@media (min-width:768px){.navbar-left{float:left!important}.navbar-right{float:right!important}}.navbar-form{margin:8px -15px;padding:10px 15px;border-top:1px solid transparent;border-bottom:1px solid transparent;box-shadow:inset 0 1px 0 hsla(0,0%,100%,.1),0 1px 0 hsla(0,0%,100%,.1)}@media (max-width:767px){.navbar-form .form-group{margin-bottom:5px}}@media (min-width:768px){.navbar-form{width:auto;border:0;margin-left:0;margin-right:0;padding-top:0;padding-bottom:0;box-shadow:none}.navbar-form.navbar-right:last-child{margin-right:-15px}}.navbar-nav>li>.dropdown-menu{margin-top:0;border-top-right-radius:0;border-top-left-radius:0}.navbar-fixed-bottom .navbar-nav>li>.dropdown-menu{border-bottom-right-radius:0;border-bottom-left-radius:0}.navbar-btn{margin-top:8px;margin-bottom:8px}.btn-group-sm>.navbar-btn.btn,.navbar-btn.btn-sm{margin-top:10px;margin-bottom:10px}.btn-group-xs>.navbar-btn.btn,.navbar-btn.btn-xs{margin-top:14px;margin-bottom:14px}.navbar-text{margin-top:15px;margin-bottom:15px}@media (min-width:768px){.navbar-text{float:left;margin-left:15px;margin-right:15px}.navbar-text.navbar-right:last-child{margin-right:0}}.navbar-default{background-color:#f8f8f8;border-color:#e7e7e7}.navbar-default .navbar-brand{color:#777}.navbar-default .navbar-brand:focus,.navbar-default .navbar-brand:hover{color:#5e5e5e;background-color:transparent}.navbar-default .navbar-nav>li>a,.navbar-default .navbar-text{color:#777}.navbar-default .navbar-nav>li>a:focus,.navbar-default .navbar-nav>li>a:hover{color:#333;background-color:transparent}.navbar-default .navbar-nav>.active>a,.navbar-default .navbar-nav>.active>a:focus,.navbar-default .navbar-nav>.active>a:hover{color:#555;background-color:#e7e7e7}.navbar-default .navbar-nav>.disabled>a,.navbar-default .navbar-nav>.disabled>a:focus,.navbar-default .navbar-nav>.disabled>a:hover{color:#ccc;background-color:transparent}.navbar-default .navbar-toggle{border-color:#ddd}.navbar-default .navbar-toggle:focus,.navbar-default .navbar-toggle:hover{background-color:#ddd}.navbar-default .navbar-toggle .icon-bar{background-color:#888}.navbar-default .navbar-collapse,.navbar-default .navbar-form{border-color:#e7e7e7}.navbar-default .navbar-nav>.open>a,.navbar-default .navbar-nav>.open>a:focus,.navbar-default .navbar-nav>.open>a:hover{background-color:#e7e7e7;color:#555}@media (max-width:767px){.navbar-default .navbar-nav .open .dropdown-menu>li>a{color:#777}.navbar-default .navbar-nav .open .dropdown-menu>li>a:focus,.navbar-default .navbar-nav .open .dropdown-menu>li>a:hover{color:#333;background-color:transparent}.navbar-default .navbar-nav .open .dropdown-menu>.active>a,.navbar-default .navbar-nav .open .dropdown-menu>.active>a:focus,.navbar-default .navbar-nav .open .dropdown-menu>.active>a:hover{color:#555;background-color:#e7e7e7}.navbar-default .navbar-nav .open .dropdown-menu>.disabled>a,.navbar-default .navbar-nav .open .dropdown-menu>.disabled>a:focus,.navbar-default .navbar-nav .open .dropdown-menu>.disabled>a:hover{color:#ccc;background-color:transparent}}.navbar-default .navbar-link{color:#777}.navbar-default .navbar-link:hover{color:#333}.navbar-default .btn-link{color:#777}.navbar-default .btn-link:focus,.navbar-default .btn-link:hover{color:#333}.navbar-default .btn-link[disabled]:focus,.navbar-default .btn-link[disabled]:hover,fieldset[disabled] .navbar-default .btn-link:focus,fieldset[disabled] .navbar-default .btn-link:hover{color:#ccc}.navbar-inverse{background-color:#222;border-color:#090909}.navbar-inverse .navbar-brand{color:#999}.navbar-inverse .navbar-brand:focus,.navbar-inverse .navbar-brand:hover{color:#fff;background-color:transparent}.navbar-inverse .navbar-nav>li>a,.navbar-inverse .navbar-text{color:#999}.navbar-inverse .navbar-nav>li>a:focus,.navbar-inverse .navbar-nav>li>a:hover{color:#fff;background-color:transparent}.navbar-inverse .navbar-nav>.active>a,.navbar-inverse .navbar-nav>.active>a:focus,.navbar-inverse .navbar-nav>.active>a:hover{color:#fff;background-color:#090909}.navbar-inverse .navbar-nav>.disabled>a,.navbar-inverse .navbar-nav>.disabled>a:focus,.navbar-inverse .navbar-nav>.disabled>a:hover{color:#444;background-color:transparent}.navbar-inverse .navbar-toggle{border-color:#333}.navbar-inverse .navbar-toggle:focus,.navbar-inverse .navbar-toggle:hover{background-color:#333}.navbar-inverse .navbar-toggle .icon-bar{background-color:#fff}.navbar-inverse .navbar-collapse,.navbar-inverse .navbar-form{border-color:#101010}.navbar-inverse .navbar-nav>.open>a,.navbar-inverse .navbar-nav>.open>a:focus,.navbar-inverse .navbar-nav>.open>a:hover{background-color:#090909;color:#fff}@media (max-width:767px){.navbar-inverse .navbar-nav .open .dropdown-menu>.dropdown-header{border-color:#090909}.navbar-inverse .navbar-nav .open .dropdown-menu .divider{background-color:#090909}.navbar-inverse .navbar-nav .open .dropdown-menu>li>a{color:#999}.navbar-inverse .navbar-nav .open .dropdown-menu>li>a:focus,.navbar-inverse .navbar-nav .open .dropdown-menu>li>a:hover{color:#fff;background-color:transparent}.navbar-inverse .navbar-nav .open .dropdown-menu>.active>a,.navbar-inverse .navbar-nav .open .dropdown-menu>.active>a:focus,.navbar-inverse .navbar-nav .open .dropdown-menu>.active>a:hover{color:#fff;background-color:#090909}.navbar-inverse .navbar-nav .open .dropdown-menu>.disabled>a,.navbar-inverse .navbar-nav .open .dropdown-menu>.disabled>a:focus,.navbar-inverse .navbar-nav .open .dropdown-menu>.disabled>a:hover{color:#444;background-color:transparent}}.navbar-inverse .navbar-link{color:#999}.navbar-inverse .navbar-link:hover{color:#fff}.navbar-inverse .btn-link{color:#999}.navbar-inverse .btn-link:focus,.navbar-inverse .btn-link:hover{color:#fff}.navbar-inverse .btn-link[disabled]:focus,.navbar-inverse .btn-link[disabled]:hover,fieldset[disabled] .navbar-inverse .btn-link:focus,fieldset[disabled] .navbar-inverse .btn-link:hover{color:#444}.breadcrumb{padding:8px 15px;margin-bottom:20px;list-style:none;background-color:#f5f5f5;border-radius:4px}.breadcrumb>li{display:inline-block}.breadcrumb>li+li:before{content:\\"/\\\\A0\\";padding:0 5px;color:#ccc}.breadcrumb>.active{color:#999}.pagination{display:inline-block;padding-left:0;margin:20px 0;border-radius:4px}.pagination>li{display:inline}.pagination>li>a,.pagination>li>span{position:relative;float:left;padding:6px 12px;line-height:1.42857;text-decoration:none;color:#428bca;background-color:#fff;border:1px solid #ddd;margin-left:-1px}.pagination>li:first-child>a,.pagination>li:first-child>span{margin-left:0;border-bottom-left-radius:4px;border-top-left-radius:4px}.pagination>li:last-child>a,.pagination>li:last-child>span{border-bottom-right-radius:4px;border-top-right-radius:4px}.pagination>li>a:focus,.pagination>li>a:hover,.pagination>li>span:focus,.pagination>li>span:hover{color:#2a6496;background-color:#eee;border-color:#ddd}.pagination>.active>a,.pagination>.active>a:focus,.pagination>.active>a:hover,.pagination>.active>span,.pagination>.active>span:focus,.pagination>.active>span:hover{z-index:2;color:#fff;background-color:#428bca;border-color:#428bca;cursor:default}.pagination>.disabled>a,.pagination>.disabled>a:focus,.pagination>.disabled>a:hover,.pagination>.disabled>span,.pagination>.disabled>span:focus,.pagination>.disabled>span:hover{color:#999;background-color:#fff;border-color:#ddd;cursor:not-allowed}.pagination-lg>li>a,.pagination-lg>li>span{padding:10px 16px;font-size:18px}.pagination-lg>li:first-child>a,.pagination-lg>li:first-child>span{border-bottom-left-radius:6px;border-top-left-radius:6px}.pagination-lg>li:last-child>a,.pagination-lg>li:last-child>span{border-bottom-right-radius:6px;border-top-right-radius:6px}.pagination-sm>li>a,.pagination-sm>li>span{padding:5px 10px;font-size:12px}.pagination-sm>li:first-child>a,.pagination-sm>li:first-child>span{border-bottom-left-radius:3px;border-top-left-radius:3px}.pagination-sm>li:last-child>a,.pagination-sm>li:last-child>span{border-bottom-right-radius:3px;border-top-right-radius:3px}.pager{padding-left:0;margin:20px 0;list-style:none;text-align:center}.pager:after,.pager:before{content:\\" \\";display:table}.pager:after{clear:both}.pager li{display:inline}.pager li>a,.pager li>span{display:inline-block;padding:5px 14px;background-color:#fff;border:1px solid #ddd;border-radius:15px}.pager li>a:focus,.pager li>a:hover{text-decoration:none;background-color:#eee}.pager .next>a,.pager .next>span{float:right}.pager .previous>a,.pager .previous>span{float:left}.pager .disabled>a,.pager .disabled>a:focus,.pager .disabled>a:hover,.pager .disabled>span{color:#999;background-color:#fff;cursor:not-allowed}.label{display:inline;padding:.2em .6em .3em;font-size:75%;font-weight:700;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25em}.label:empty{display:none}.btn .label{position:relative;top:-1px}a.label:focus,a.label:hover{color:#fff;text-decoration:none;cursor:pointer}.label-default{background-color:#999}.label-default[href]:focus,.label-default[href]:hover{background-color:gray}.label-primary{background-color:#428bca}.label-primary[href]:focus,.label-primary[href]:hover{background-color:#3071a9}.label-success{background-color:#5cb85c}.label-success[href]:focus,.label-success[href]:hover{background-color:#449d44}.label-info{background-color:#5bc0de}.label-info[href]:focus,.label-info[href]:hover{background-color:#31b0d5}.label-warning{background-color:#f0ad4e}.label-warning[href]:focus,.label-warning[href]:hover{background-color:#ec971f}.label-danger{background-color:#d9534f}.label-danger[href]:focus,.label-danger[href]:hover{background-color:#c9302c}.badge{display:inline-block;min-width:10px;padding:3px 7px;font-size:12px;font-weight:700;color:#fff;line-height:1;vertical-align:baseline;white-space:nowrap;text-align:center;background-color:#999;border-radius:10px}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.btn-group-xs>.btn .badge,.btn-xs .badge{top:0;padding:1px 5px}.nav-pills>.active>a>.badge,a.list-group-item.active>.badge{color:#428bca;background-color:#fff}.nav-pills>li>a>.badge{margin-left:3px}a.badge:focus,a.badge:hover{color:#fff;text-decoration:none;cursor:pointer}.jumbotron{padding:30px;margin-bottom:30px;background-color:#eee}.jumbotron,.jumbotron .h1,.jumbotron h1{color:inherit}.jumbotron p{margin-bottom:15px;font-size:21px;font-weight:200}.jumbotron>hr{border-top-color:#d5d5d5}.container .jumbotron{border-radius:6px}.jumbotron .container{max-width:100%}@media screen and (min-width:768px){.jumbotron{padding-top:48px;padding-bottom:48px}.container .jumbotron{padding-left:60px;padding-right:60px}.jumbotron .h1,.jumbotron h1{font-size:63px}}.thumbnail{display:block;padding:4px;margin-bottom:20px;line-height:1.42857;background-color:#fff;border:1px solid #ddd;border-radius:4px;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.thumbnail>img,.thumbnail a>img{display:block;max-width:100%;height:auto;margin-left:auto;margin-right:auto}.thumbnail .caption{padding:9px;color:#333}a.thumbnail.active,a.thumbnail:focus,a.thumbnail:hover{border-color:#428bca}.alert{padding:15px;margin-bottom:20px;border:1px solid transparent;border-radius:4px}.alert h4{margin-top:0;color:inherit}.alert .alert-link{font-weight:700}.alert>p,.alert>ul{margin-bottom:0}.alert>p+p{margin-top:5px}.alert-dismissable{padding-right:35px}.alert-dismissable .close{position:relative;top:-2px;right:-21px;color:inherit}.alert-success{background-color:#dff0d8;border-color:#d6e9c6;color:#3c763d}.alert-success hr{border-top-color:#c9e2b3}.alert-success .alert-link{color:#2b542c}.alert-info{background-color:#d9edf7;border-color:#bce8f1;color:#31708f}.alert-info hr{border-top-color:#a6e1ec}.alert-info .alert-link{color:#245269}.alert-warning{background-color:#fcf8e3;border-color:#faebcc;color:#8a6d3b}.alert-warning hr{border-top-color:#f7e1b5}.alert-warning .alert-link{color:#66512c}.alert-danger{background-color:#f2dede;border-color:#ebccd1;color:#a94442}.alert-danger hr{border-top-color:#e4b9c0}.alert-danger .alert-link{color:#843534}@keyframes progress-bar-stripes{0%{background-position:40px 0}to{background-position:0 0}}.progress{overflow:hidden;height:20px;margin-bottom:20px;background-color:#f5f5f5;border-radius:4px;box-shadow:inset 0 1px 2px rgba(0,0,0,.1)}.progress-bar{float:left;width:0;height:100%;font-size:12px;line-height:20px;color:#fff;text-align:center;background-color:#428bca;box-shadow:inset 0 -1px 0 rgba(0,0,0,.15);-webkit-transition:width .6s ease;transition:width .6s ease}.progress-striped .progress-bar{background-image:-webkit-linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent);background-image:linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent);background-size:40px 40px}.progress.active .progress-bar{-webkit-animation:progress-bar-stripes 2s linear infinite;animation:progress-bar-stripes 2s linear infinite}.progress-bar[aria-valuenow=\\"1\\"],.progress-bar[aria-valuenow=\\"2\\"]{min-width:30px}.progress-bar[aria-valuenow=\\"0\\"]{color:#999;min-width:30px;background-color:transparent;background-image:none;box-shadow:none}.progress-bar-success{background-color:#5cb85c}.progress-striped .progress-bar-success{background-image:-webkit-linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent);background-image:linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent)}.progress-bar-info{background-color:#5bc0de}.progress-striped .progress-bar-info{background-image:-webkit-linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent);background-image:linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent)}.progress-bar-warning{background-color:#f0ad4e}.progress-striped .progress-bar-warning{background-image:-webkit-linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent);background-image:linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent)}.progress-bar-danger{background-color:#d9534f}.progress-striped .progress-bar-danger{background-image:-webkit-linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent);background-image:linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent)}.media,.media-body{overflow:hidden;zoom:1}.media,.media .media{margin-top:15px}.media:first-child{margin-top:0}.media-object{display:block}.media-heading{margin:0 0 5px}.media>.pull-left{margin-right:10px}.media>.pull-right{margin-left:10px}.media-list{padding-left:0;list-style:none}.list-group{margin-bottom:20px;padding-left:0}.list-group-item{position:relative;display:block;padding:10px 15px;margin-bottom:-1px;background-color:#fff;border:1px solid #ddd}.list-group-item:first-child{border-top-right-radius:4px;border-top-left-radius:4px}.list-group-item:last-child{margin-bottom:0;border-bottom-right-radius:4px;border-bottom-left-radius:4px}.list-group-item>.badge{float:right}.list-group-item>.badge+.badge{margin-right:5px}a.list-group-item{color:#555}a.list-group-item .list-group-item-heading{color:#333}a.list-group-item:focus,a.list-group-item:hover{text-decoration:none;color:#555;background-color:#f5f5f5}.list-group-item.disabled,.list-group-item.disabled:focus,.list-group-item.disabled:hover{background-color:#eee;color:#999}.list-group-item.disabled .list-group-item-heading,.list-group-item.disabled:focus .list-group-item-heading,.list-group-item.disabled:hover .list-group-item-heading{color:inherit}.list-group-item.disabled .list-group-item-text,.list-group-item.disabled:focus .list-group-item-text,.list-group-item.disabled:hover .list-group-item-text{color:#999}.list-group-item.active,.list-group-item.active:focus,.list-group-item.active:hover{z-index:2;color:#fff;background-color:#428bca;border-color:#428bca}.list-group-item.active .list-group-item-heading,.list-group-item.active:focus .list-group-item-heading,.list-group-item.active:hover .list-group-item-heading{color:inherit}.list-group-item.active .list-group-item-text,.list-group-item.active:focus .list-group-item-text,.list-group-item.active:hover .list-group-item-text{color:#e1edf7}.list-group-item-success{color:#3c763d;background-color:#dff0d8}a.list-group-item-success{color:#3c763d}a.list-group-item-success .list-group-item-heading{color:inherit}a.list-group-item-success:focus,a.list-group-item-success:hover{color:#3c763d;background-color:#d0e9c6}a.list-group-item-success.active,a.list-group-item-success.active:focus,a.list-group-item-success.active:hover{color:#fff;background-color:#3c763d;border-color:#3c763d}.list-group-item-info{color:#31708f;background-color:#d9edf7}a.list-group-item-info{color:#31708f}a.list-group-item-info .list-group-item-heading{color:inherit}a.list-group-item-info:focus,a.list-group-item-info:hover{color:#31708f;background-color:#c4e3f3}a.list-group-item-info.active,a.list-group-item-info.active:focus,a.list-group-item-info.active:hover{color:#fff;background-color:#31708f;border-color:#31708f}.list-group-item-warning{color:#8a6d3b;background-color:#fcf8e3}a.list-group-item-warning{color:#8a6d3b}a.list-group-item-warning .list-group-item-heading{color:inherit}a.list-group-item-warning:focus,a.list-group-item-warning:hover{color:#8a6d3b;background-color:#faf2cc}a.list-group-item-warning.active,a.list-group-item-warning.active:focus,a.list-group-item-warning.active:hover{color:#fff;background-color:#8a6d3b;border-color:#8a6d3b}.list-group-item-danger{color:#a94442;background-color:#f2dede}a.list-group-item-danger{color:#a94442}a.list-group-item-danger .list-group-item-heading{color:inherit}a.list-group-item-danger:focus,a.list-group-item-danger:hover{color:#a94442;background-color:#ebcccc}a.list-group-item-danger.active,a.list-group-item-danger.active:focus,a.list-group-item-danger.active:hover{color:#fff;background-color:#a94442;border-color:#a94442}.list-group-item-heading{margin-top:0;margin-bottom:5px}.list-group-item-text{margin-bottom:0;line-height:1.3}.panel{margin-bottom:20px;background-color:#fff;border:1px solid transparent;border-radius:4px;box-shadow:0 1px 1px rgba(0,0,0,.05)}.panel-body{padding:15px}.panel-body:after,.panel-body:before{content:\\" \\";display:table}.panel-body:after{clear:both}.panel-heading{padding:10px 15px;border-bottom:1px solid transparent;border-top-right-radius:3px;border-top-left-radius:3px}.panel-heading>.dropdown .dropdown-toggle,.panel-title{color:inherit}.panel-title{margin-top:0;margin-bottom:0;font-size:16px}.panel-title>a{color:inherit}.panel-footer{padding:10px 15px;background-color:#f5f5f5;border-top:1px solid #ddd;border-bottom-right-radius:3px;border-bottom-left-radius:3px}.panel>.list-group{margin-bottom:0}.panel>.list-group .list-group-item{border-width:1px 0;border-radius:0}.panel>.list-group:first-child .list-group-item:first-child{border-top:0;border-top-right-radius:3px;border-top-left-radius:3px}.panel>.list-group:last-child .list-group-item:last-child{border-bottom:0;border-bottom-right-radius:3px;border-bottom-left-radius:3px}.panel-heading+.list-group .list-group-item:first-child{border-top-width:0}.panel>.table,.panel>.table-responsive>.table{margin-bottom:0}.panel>.table-responsive:first-child>.table:first-child,.panel>.table:first-child{border-top-right-radius:3px;border-top-left-radius:3px}.panel>.table-responsive:first-child>.table:first-child>tbody:first-child>tr:first-child td:first-child,.panel>.table-responsive:first-child>.table:first-child>tbody:first-child>tr:first-child th:first-child,.panel>.table-responsive:first-child>.table:first-child>thead:first-child>tr:first-child td:first-child,.panel>.table-responsive:first-child>.table:first-child>thead:first-child>tr:first-child th:first-child,.panel>.table:first-child>tbody:first-child>tr:first-child td:first-child,.panel>.table:first-child>tbody:first-child>tr:first-child th:first-child,.panel>.table:first-child>thead:first-child>tr:first-child td:first-child,.panel>.table:first-child>thead:first-child>tr:first-child th:first-child{border-top-left-radius:3px}.panel>.table-responsive:first-child>.table:first-child>tbody:first-child>tr:first-child td:last-child,.panel>.table-responsive:first-child>.table:first-child>tbody:first-child>tr:first-child th:last-child,.panel>.table-responsive:first-child>.table:first-child>thead:first-child>tr:first-child td:last-child,.panel>.table-responsive:first-child>.table:first-child>thead:first-child>tr:first-child th:last-child,.panel>.table:first-child>tbody:first-child>tr:first-child td:last-child,.panel>.table:first-child>tbody:first-child>tr:first-child th:last-child,.panel>.table:first-child>thead:first-child>tr:first-child td:last-child,.panel>.table:first-child>thead:first-child>tr:first-child th:last-child{border-top-right-radius:3px}.panel>.table-responsive:last-child>.table:last-child,.panel>.table:last-child{border-bottom-right-radius:3px;border-bottom-left-radius:3px}.panel>.table-responsive:last-child>.table:last-child>tbody:last-child>tr:last-child td:first-child,.panel>.table-responsive:last-child>.table:last-child>tbody:last-child>tr:last-child th:first-child,.panel>.table-responsive:last-child>.table:last-child>tfoot:last-child>tr:last-child td:first-child,.panel>.table-responsive:last-child>.table:last-child>tfoot:last-child>tr:last-child th:first-child,.panel>.table:last-child>tbody:last-child>tr:last-child td:first-child,.panel>.table:last-child>tbody:last-child>tr:last-child th:first-child,.panel>.table:last-child>tfoot:last-child>tr:last-child td:first-child,.panel>.table:last-child>tfoot:last-child>tr:last-child th:first-child{border-bottom-left-radius:3px}.panel>.table-responsive:last-child>.table:last-child>tbody:last-child>tr:last-child td:last-child,.panel>.table-responsive:last-child>.table:last-child>tbody:last-child>tr:last-child th:last-child,.panel>.table-responsive:last-child>.table:last-child>tfoot:last-child>tr:last-child td:last-child,.panel>.table-responsive:last-child>.table:last-child>tfoot:last-child>tr:last-child th:last-child,.panel>.table:last-child>tbody:last-child>tr:last-child td:last-child,.panel>.table:last-child>tbody:last-child>tr:last-child th:last-child,.panel>.table:last-child>tfoot:last-child>tr:last-child td:last-child,.panel>.table:last-child>tfoot:last-child>tr:last-child th:last-child{border-bottom-right-radius:3px}.panel>.panel-body+.table,.panel>.panel-body+.table-responsive{border-top:1px solid #ddd}.panel>.table>tbody:first-child>tr:first-child td,.panel>.table>tbody:first-child>tr:first-child th{border-top:0}.panel>.table-bordered,.panel>.table-responsive>.table-bordered{border:0}.panel>.table-bordered>tbody>tr>td:first-child,.panel>.table-bordered>tbody>tr>th:first-child,.panel>.table-bordered>tfoot>tr>td:first-child,.panel>.table-bordered>tfoot>tr>th:first-child,.panel>.table-bordered>thead>tr>td:first-child,.panel>.table-bordered>thead>tr>th:first-child,.panel>.table-responsive>.table-bordered>tbody>tr>td:first-child,.panel>.table-responsive>.table-bordered>tbody>tr>th:first-child,.panel>.table-responsive>.table-bordered>tfoot>tr>td:first-child,.panel>.table-responsive>.table-bordered>tfoot>tr>th:first-child,.panel>.table-responsive>.table-bordered>thead>tr>td:first-child,.panel>.table-responsive>.table-bordered>thead>tr>th:first-child{border-left:0}.panel>.table-bordered>tbody>tr>td:last-child,.panel>.table-bordered>tbody>tr>th:last-child,.panel>.table-bordered>tfoot>tr>td:last-child,.panel>.table-bordered>tfoot>tr>th:last-child,.panel>.table-bordered>thead>tr>td:last-child,.panel>.table-bordered>thead>tr>th:last-child,.panel>.table-responsive>.table-bordered>tbody>tr>td:last-child,.panel>.table-responsive>.table-bordered>tbody>tr>th:last-child,.panel>.table-responsive>.table-bordered>tfoot>tr>td:last-child,.panel>.table-responsive>.table-bordered>tfoot>tr>th:last-child,.panel>.table-responsive>.table-bordered>thead>tr>td:last-child,.panel>.table-responsive>.table-bordered>thead>tr>th:last-child{border-right:0}.panel>.table-bordered>tbody>tr:first-child>td,.panel>.table-bordered>tbody>tr:first-child>th,.panel>.table-bordered>tbody>tr:last-child>td,.panel>.table-bordered>tbody>tr:last-child>th,.panel>.table-bordered>tfoot>tr:last-child>td,.panel>.table-bordered>tfoot>tr:last-child>th,.panel>.table-bordered>thead>tr:first-child>td,.panel>.table-bordered>thead>tr:first-child>th,.panel>.table-responsive>.table-bordered>tbody>tr:first-child>td,.panel>.table-responsive>.table-bordered>tbody>tr:first-child>th,.panel>.table-responsive>.table-bordered>tbody>tr:last-child>td,.panel>.table-responsive>.table-bordered>tbody>tr:last-child>th,.panel>.table-responsive>.table-bordered>tfoot>tr:last-child>td,.panel>.table-responsive>.table-bordered>tfoot>tr:last-child>th,.panel>.table-responsive>.table-bordered>thead>tr:first-child>td,.panel>.table-responsive>.table-bordered>thead>tr:first-child>th{border-bottom:0}.panel>.table-responsive{border:0;margin-bottom:0}.panel-group{margin-bottom:20px}.panel-group .panel{margin-bottom:0;border-radius:4px}.panel-group .panel+.panel{margin-top:5px}.panel-group .panel-heading{border-bottom:0}.panel-group .panel-heading+.panel-collapse .panel-body{border-top:1px solid #ddd}.panel-group .panel-footer{border-top:0}.panel-group .panel-footer+.panel-collapse .panel-body{border-bottom:1px solid #ddd}.panel-default{border-color:#ddd}.panel-default>.panel-heading{color:#333;background-color:#f5f5f5;border-color:#ddd}.panel-default>.panel-heading+.panel-collapse>.panel-body{border-top-color:#ddd}.panel-default>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#ddd}.panel-primary{border-color:#428bca}.panel-primary>.panel-heading{color:#fff;background-color:#428bca;border-color:#428bca}.panel-primary>.panel-heading+.panel-collapse>.panel-body{border-top-color:#428bca}.panel-primary>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#428bca}.panel-success{border-color:#d6e9c6}.panel-success>.panel-heading{color:#3c763d;background-color:#dff0d8;border-color:#d6e9c6}.panel-success>.panel-heading+.panel-collapse>.panel-body{border-top-color:#d6e9c6}.panel-success>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#d6e9c6}.panel-info{border-color:#bce8f1}.panel-info>.panel-heading{color:#31708f;background-color:#d9edf7;border-color:#bce8f1}.panel-info>.panel-heading+.panel-collapse>.panel-body{border-top-color:#bce8f1}.panel-info>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#bce8f1}.panel-warning{border-color:#faebcc}.panel-warning>.panel-heading{color:#8a6d3b;background-color:#fcf8e3;border-color:#faebcc}.panel-warning>.panel-heading+.panel-collapse>.panel-body{border-top-color:#faebcc}.panel-warning>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#faebcc}.panel-danger{border-color:#ebccd1}.panel-danger>.panel-heading{color:#a94442;background-color:#f2dede;border-color:#ebccd1}.panel-danger>.panel-heading+.panel-collapse>.panel-body{border-top-color:#ebccd1}.panel-danger>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#ebccd1}.embed-responsive{position:relative;display:block;height:0;padding:0;overflow:hidden}.embed-responsive .embed-responsive-item,.embed-responsive embed,.embed-responsive iframe,.embed-responsive object{position:absolute;top:0;left:0;bottom:0;height:100%;width:100%;border:0}.embed-responsive.embed-responsive-16by9{padding-bottom:56.25%}.embed-responsive.embed-responsive-4by3{padding-bottom:75%}.well{min-height:20px;padding:19px;margin-bottom:20px;background-color:#f5f5f5;border:1px solid #e3e3e3;border-radius:4px;box-shadow:inset 0 1px 1px rgba(0,0,0,.05)}.well blockquote{border-color:#ddd;border-color:rgba(0,0,0,.15)}.well-lg{padding:24px;border-radius:6px}.well-sm{padding:9px;border-radius:3px}.close{float:right;font-size:21px;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.2;filter:alpha(opacity=20)}.close:focus,.close:hover{color:#000;text-decoration:none;cursor:pointer;opacity:.5;filter:alpha(opacity=50)}button.close{padding:0;cursor:pointer;background:transparent;border:0;-webkit-appearance:none}.modal-open{overflow:hidden}.modal{display:none;overflow:auto;overflow-y:scroll;position:fixed;top:0;right:0;bottom:0;left:0;z-index:1050;-webkit-overflow-scrolling:touch;outline:0}.modal.fade .modal-dialog{-webkit-transform:translateY(-25%);transform:translateY(-25%);-webkit-transition:-webkit-transform .3s ease-out;transition:transform .3s ease-out}.modal.in .modal-dialog{-webkit-transform:translate(0);transform:translate(0)}.modal-dialog{position:relative;width:auto;margin:10px}.modal-content{position:relative;background-color:#fff;border:1px solid #999;border:1px solid rgba(0,0,0,.2);border-radius:6px;box-shadow:0 3px 9px rgba(0,0,0,.5);background-clip:padding-box;outline:0}.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#000}.modal-backdrop.fade{opacity:0;filter:alpha(opacity=0)}.modal-backdrop.in{opacity:.5;filter:alpha(opacity=50)}.modal-header{padding:15px;border-bottom:1px solid #e5e5e5;min-height:16.42857px}.modal-header .close{margin-top:-2px}.modal-title{margin:0;line-height:1.42857}.modal-body{position:relative;padding:15px}.modal-footer{padding:15px;text-align:right;border-top:1px solid #e5e5e5}.modal-footer:after,.modal-footer:before{content:\\" \\";display:table}.modal-footer:after{clear:both}.modal-footer .btn+.btn{margin-left:5px;margin-bottom:0}.modal-footer .btn-group .btn+.btn{margin-left:-1px}.modal-footer .btn-block+.btn-block{margin-left:0}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:768px){.modal-dialog{width:600px;margin:30px auto}.modal-content{box-shadow:0 5px 15px rgba(0,0,0,.5)}.modal-sm{width:300px}}@media (min-width:992px){.modal-lg{width:900px}}.tooltip{position:absolute;z-index:1070;display:block;visibility:visible;font-size:12px;line-height:1.4;opacity:0;filter:alpha(opacity=0)}.tooltip.in{opacity:.9;filter:alpha(opacity=90)}.tooltip.top{margin-top:-3px;padding:5px 0}.tooltip.right{margin-left:3px;padding:0 5px}.tooltip.bottom{margin-top:3px;padding:5px 0}.tooltip.left{margin-left:-3px;padding:0 5px}.tooltip-inner{max-width:200px;padding:3px 8px;color:#fff;text-align:center;text-decoration:none;background-color:#000;border-radius:4px}.tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.tooltip.top .tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0;border-top-color:#000}.tooltip.top-left .tooltip-arrow{bottom:0;left:5px;border-width:5px 5px 0;border-top-color:#000}.tooltip.top-right .tooltip-arrow{bottom:0;right:5px;border-width:5px 5px 0;border-top-color:#000}.tooltip.right .tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0;border-right-color:#000}.tooltip.left .tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px;border-left-color:#000}.tooltip.bottom .tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px;border-bottom-color:#000}.tooltip.bottom-left .tooltip-arrow{top:0;left:5px;border-width:0 5px 5px;border-bottom-color:#000}.tooltip.bottom-right .tooltip-arrow{top:0;right:5px;border-width:0 5px 5px;border-bottom-color:#000}.popover{position:absolute;top:0;left:0;z-index:1060;display:none;max-width:276px;padding:1px;text-align:left;background-color:#fff;background-clip:padding-box;border:1px solid #ccc;border:1px solid rgba(0,0,0,.2);border-radius:6px;box-shadow:0 5px 10px rgba(0,0,0,.2);white-space:normal}.popover.top{margin-top:-10px}.popover.right{margin-left:10px}.popover.bottom{margin-top:10px}.popover.left{margin-left:-10px}.popover-title{margin:0;padding:8px 14px;font-size:14px;font-weight:400;line-height:18px;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-radius:5px 5px 0 0}.popover-content{padding:9px 14px}.popover>.arrow,.popover>.arrow:after{position:absolute;display:block;width:0;height:0;border-color:transparent;border-style:solid}.popover>.arrow{border-width:11px}.popover>.arrow:after{border-width:10px;content:\\"\\"}.popover.top>.arrow{left:50%;margin-left:-11px;border-bottom-width:0;border-top-color:#999;border-top-color:rgba(0,0,0,.25);bottom:-11px}.popover.top>.arrow:after{content:\\" \\";bottom:1px;margin-left:-10px;border-bottom-width:0;border-top-color:#fff}.popover.right>.arrow{top:50%;left:-11px;margin-top:-11px;border-left-width:0;border-right-color:#999;border-right-color:rgba(0,0,0,.25)}.popover.right>.arrow:after{content:\\" \\";left:1px;bottom:-10px;border-left-width:0;border-right-color:#fff}.popover.bottom>.arrow{left:50%;margin-left:-11px;border-top-width:0;border-bottom-color:#999;border-bottom-color:rgba(0,0,0,.25);top:-11px}.popover.bottom>.arrow:after{content:\\" \\";top:1px;margin-left:-10px;border-top-width:0;border-bottom-color:#fff}.popover.left>.arrow{top:50%;right:-11px;margin-top:-11px;border-right-width:0;border-left-color:#999;border-left-color:rgba(0,0,0,.25)}.popover.left>.arrow:after{content:\\" \\";right:1px;border-right-width:0;border-left-color:#fff;bottom:-10px}.carousel,.carousel-inner{position:relative}.carousel-inner{overflow:hidden;width:100%}.carousel-inner>.item{display:none;position:relative;-webkit-transition:.6s ease-in-out left;transition:.6s ease-in-out left}.carousel-inner>.item>a>img,.carousel-inner>.item>img{display:block;max-width:100%;height:auto;line-height:1}.carousel-inner>.active,.carousel-inner>.next,.carousel-inner>.prev{display:block}.carousel-inner>.active{left:0}.carousel-inner>.next,.carousel-inner>.prev{position:absolute;top:0;width:100%}.carousel-inner>.next{left:100%}.carousel-inner>.prev{left:-100%}.carousel-inner>.next.left,.carousel-inner>.prev.right{left:0}.carousel-inner>.active.left{left:-100%}.carousel-inner>.active.right{left:100%}.carousel-control{position:absolute;top:0;left:0;bottom:0;width:15%;opacity:.5;filter:alpha(opacity=50);font-size:20px;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.6)}.carousel-control.left{background-image:-webkit-linear-gradient(left,color-stop(rgba(0,0,0,.5) 0),color-stop(rgba(0,0,0,.0001) 100%));background-image:linear-gradient(90deg,rgba(0,0,0,.5) 0,rgba(0,0,0,.0001));background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\'#80000000\',endColorstr=\'#00000000\',GradientType=1)}.carousel-control.right{left:auto;right:0;background-image:-webkit-linear-gradient(left,color-stop(rgba(0,0,0,.0001) 0),color-stop(rgba(0,0,0,.5) 100%));background-image:linear-gradient(90deg,rgba(0,0,0,.0001) 0,rgba(0,0,0,.5));background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\'#00000000\',endColorstr=\'#80000000\',GradientType=1)}.carousel-control:focus,.carousel-control:hover{outline:0;color:#fff;text-decoration:none;opacity:.9;filter:alpha(opacity=90)}.carousel-control .glyphicon-chevron-left,.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next,.carousel-control .icon-prev{position:absolute;top:50%;z-index:5;display:inline-block}.carousel-control .glyphicon-chevron-left,.carousel-control .icon-prev{left:50%;margin-left:-10px}.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next{right:50%;margin-right:-10px}.carousel-control .icon-next,.carousel-control .icon-prev{width:20px;height:20px;margin-top:-10px;font-family:serif}.carousel-control .icon-prev:before{content:\'\\\\2039\'}.carousel-control .icon-next:before{content:\'\\\\203A\'}.carousel-indicators{position:absolute;bottom:10px;left:50%;z-index:15;width:60%;margin-left:-30%;padding-left:0;list-style:none;text-align:center}.carousel-indicators li{display:inline-block;width:10px;height:10px;margin:1px;text-indent:-999px;border:1px solid #fff;border-radius:10px;cursor:pointer;background-color:#000\\\\9;background-color:transparent}.carousel-indicators .active{margin:0;width:12px;height:12px;background-color:#fff}.carousel-caption{position:absolute;left:15%;right:15%;bottom:20px;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.6)}.carousel-caption .btn{text-shadow:none}@media screen and (min-width:768px){.carousel-control .glyphicon-chevron-left,.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next,.carousel-control .icon-prev{width:30px;height:30px;margin-top:-15px;font-size:30px}.carousel-control .glyphicon-chevron-left,.carousel-control .icon-prev{margin-left:-15px}.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next{margin-right:-15px}.carousel-caption{left:20%;right:20%;padding-bottom:30px}.carousel-indicators{bottom:20px}}.clearfix:after,.clearfix:before{content:\\" \\";display:table}.clearfix:after{clear:both}.center-block{display:block;margin-left:auto;margin-right:auto}.pull-right{float:right!important}.pull-left{float:left!important}.hide{display:none!important}.show{display:block!important}.invisible{visibility:hidden}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.hidden{display:none!important;visibility:hidden!important}.affix{position:fixed}@-ms-viewport{width:device-width}.visible-lg,.visible-lg-block,.visible-lg-inline,.visible-lg-inline-block,.visible-md,.visible-md-block,.visible-md-inline,.visible-md-inline-block,.visible-sm,.visible-sm-block,.visible-sm-inline,.visible-sm-inline-block,.visible-xs,.visible-xs-block,.visible-xs-inline,.visible-xs-inline-block{display:none!important}@media (max-width:767px){.visible-xs{display:block!important}table.visible-xs{display:table}tr.visible-xs{display:table-row!important}td.visible-xs,th.visible-xs{display:table-cell!important}}@media (max-width:767px){.visible-xs-block{display:block!important}}@media (max-width:767px){.visible-xs-inline{display:inline!important}}@media (max-width:767px){.visible-xs-inline-block{display:inline-block!important}}@media (min-width:768px) and (max-width:991px){.visible-sm{display:block!important}table.visible-sm{display:table}tr.visible-sm{display:table-row!important}td.visible-sm,th.visible-sm{display:table-cell!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-block{display:block!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-inline{display:inline!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-inline-block{display:inline-block!important}}@media (min-width:992px) and (max-width:1199px){.visible-md{display:block!important}table.visible-md{display:table}tr.visible-md{display:table-row!important}td.visible-md,th.visible-md{display:table-cell!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-block{display:block!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-inline{display:inline!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-inline-block{display:inline-block!important}}@media (min-width:1200px){.visible-lg{display:block!important}table.visible-lg{display:table}tr.visible-lg{display:table-row!important}td.visible-lg,th.visible-lg{display:table-cell!important}}@media (min-width:1200px){.visible-lg-block{display:block!important}}@media (min-width:1200px){.visible-lg-inline{display:inline!important}}@media (min-width:1200px){.visible-lg-inline-block{display:inline-block!important}}@media (max-width:767px){.hidden-xs{display:none!important}}@media (min-width:768px) and (max-width:991px){.hidden-sm{display:none!important}}@media (min-width:992px) and (max-width:1199px){.hidden-md{display:none!important}}@media (min-width:1200px){.hidden-lg{display:none!important}}.visible-print{display:none!important}@media print{.visible-print{display:block!important}table.visible-print{display:table}tr.visible-print{display:table-row!important}td.visible-print,th.visible-print{display:table-cell!important}}.visible-print-block{display:none!important}@media print{.visible-print-block{display:block!important}}.visible-print-inline{display:none!important}@media print{.visible-print-inline{display:inline!important}}.visible-print-inline-block{display:none!important}@media print{.visible-print-inline-block{display:inline-block!important}}@media print{.hidden-print{display:none!important}}.browsehappy{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}body{background:#edebe3}body,h1,h2,h3,h4{font-family:ff-meta-web-pro,sans-serif}h1,h2,h3,h4{margin-top:0;color:#554e44}h1{font-size:2.8rem}p,ul{margin-top:0}.heading{background:#e1e0d2;border-top:2px dashed #8b877d;border-bottom:2px dashed #8b877d;line-height:1;font-weight:700;padding:.25em 2em}.spinner{display:block;margin:30px auto}.header{background:#40134f;padding:2rem}.l-inner{max-width:1920px;margin:0 auto}.list{margin:0;padding:0;list-style:none}.l-flex{display:flex;justify-content:space-between}.l-flex--around{justify-content:space-around}.l-panels{margin-bottom:2rem}.l-panels:last-child{margin-bottom:0}.l-panels>*{width:100%;display:flex}.l-panel{flex:1;padding-bottom:3rem;transition:1s all}.l-panel--dark{background-color:#a19d93;min-height:300px}.l-panel--dark .heading{background:#a19d93;color:#fff}.l-panel--fluid{flex:auto}.container{max-width:1024px}@keyframes bounceIn{0%{transform:scale(1)}50%{transform:scale(1.3)}to{transform:scale(1)}}.bounceIn--on{animation:bounceIn .5s ease-out}.modal-dialog{width:100%;height:100%;background:hsla(0,0%,100%,.5);text-align:center}.modal-dialog .modal-content{background:hsla(0,0%,100%,.4)}.modal-dialog img{max-width:100%;border:10px solid #fff;display:block;margin:1em auto 0}.modal-dialog h3{padding:.5em;font-size:20px;background:#edebe3}@keyframes move{0%{transform:translate(0)}25%{transform:translate(1%)}75%{transform:translate(-1%)}to{transform:translate(0)}}.modal-notification{background-color:rgba(0,0,0,.4)!important}.modal-notification .modal-dialog{transform:translate(0)!important}.modal-notification h1{font-size:180px;line-height:165px;text-shadow:0 3px 20px #000;width:190px;height:190px;border-radius:50%;border:10px solid #c34242;margin:0 auto;background-image:url(" + __webpack_require__(50) + ");background-position:0 0}.modal-notification h1,.modal-notification h2{font-weight:700;color:#fff}.modal-notification .modal-content{background-color:#333;color:#fff;width:100%;max-width:800px;left:50%;margin-left:-400px;-webkit-animation:move .5s ease-in-out 5;position:absolute}.modal-notification .notification-container{position:relative;overflow:hidden;padding:40px}.modal-notification .notification-container .notification-icon{width:30%;text-align:center;float:left}.modal-notification .notification-container .notification-icon img{max-width:190px;border:3px solid #fff;border-radius:50%;margin:0 auto}.modal-notification .notification-container .notification-icon p{font-size:27px;margin:0}.modal-notification .notification-container .notification-info{width:65%;text-align:left;color:#fff;float:right}.modal-notification .notification-container .notification-info p{font-size:18px;font-family:\'ff-meta-serif-web-pro\';font-weight:400}.modal-notification .notification-container .notification-info .notification-date{margin-top:20px;font-size:16px;font-family:ff-meta-web-pro;font-weight:400}.card{border:1px solid #eee;border-radius:5px;width:200px;background:#fff;list-style:none;margin:0;padding:0;position:relative;font-size:15px;padding:10px 20px;min-height:220px;color:#8b877d;margin:0 1em}.card__avatar{display:block;margin:0 auto;width:115px;height:115px;border-radius:50%;overflow:hidden;border:2px solid #8b877d;background:#fff;padding:0;margin-top:-80px;margin-bottom:20px}.card__name{font-size:15px;color:#8b877d;text-transform:capitalize;text-overflow:ellipsis;overflow:hidden}.card__footer{margin-bottom:0;padding:10px;color:hsla(0,0%,100%,.7);text-transform:uppercase;line-height:1;background:#400e4d;border-radius:5px;position:absolute;bottom:-5px;left:-5px;right:-5px;text-align:center}.card__status{position:absolute;bottom:25px;z-index:100;left:50%;margin-left:-17.5px}.card__culprits{margin-top:90px}.table>tbody>tr.blue>td,.table>tbody>tr.blue>th,.table>tbody>tr>td.blue,.table>tbody>tr>th.blue,.table>tfoot>tr.blue>td,.table>tfoot>tr.blue>th,.table>tfoot>tr>td.blue,.table>tfoot>tr>th.blue,.table>thead>tr.blue>td,.table>thead>tr.blue>th,.table>thead>tr>td.blue,.table>thead>tr>th.blue{background-color:#dff0d8}.table-hover>tbody>tr.blue:hover>td,.table-hover>tbody>tr.blue:hover>th,.table-hover>tbody>tr:hover>.blue,.table-hover>tbody>tr>td.blue:hover,.table-hover>tbody>tr>th.blue:hover{background-color:#d0e9c6}.table>tbody>tr.red>td,.table>tbody>tr.red>th,.table>tbody>tr>td.red,.table>tbody>tr>th.red,.table>tfoot>tr.red>td,.table>tfoot>tr.red>th,.table>tfoot>tr>td.red,.table>tfoot>tr>th.red,.table>thead>tr.red>td,.table>thead>tr.red>th,.table>thead>tr>td.red,.table>thead>tr>th.red{background-color:#f2dede}.table-hover>tbody>tr.red:hover>td,.table-hover>tbody>tr.red:hover>th,.table-hover>tbody>tr:hover>.red,.table-hover>tbody>tr>td.red:hover,.table-hover>tbody>tr>th.red:hover{background-color:#ebcccc}.table>tbody>tr.grey>td,.table>tbody>tr.grey>th,.table>tbody>tr>td.grey,.table>tbody>tr>th.grey,.table>tfoot>tr.grey>td,.table>tfoot>tr.grey>th,.table>tfoot>tr>td.grey,.table>tfoot>tr>th.grey,.table>thead>tr.grey>td,.table>thead>tr.grey>th,.table>thead>tr>td.grey,.table>thead>tr>th.grey{background-color:#fcf8e3}.table-hover>tbody>tr.grey:hover>td,.table-hover>tbody>tr.grey:hover>th,.table-hover>tbody>tr:hover>.grey,.table-hover>tbody>tr>td.grey:hover,.table-hover>tbody>tr>th.grey:hover{background-color:#faf2cc}.jenkins-img{width:100px;position:absolute;right:20px;top:20px}.leeroy-container{padding:20px}.leeroy{margin-top:100px;padding:0 1em}.leeroy .card{text-align:center}.leeroy-no-builds{background-image:url(" + __webpack_require__(51) + ");background-position:top;background-repeat:no-repeat;text-align:center;padding-top:280px;margin-top:80px;width:300px;margin:50px auto 0;color:hsla(0,0%,100%,.5)}.leeroy .card.ng-enter{animation:flipInY 1s linear}.trello{margin:100px 0 0;padding:0 1em}.trello__no-card{text-align:center;font-style:italic}", ""]);\n\n// exports\n//@ sourceMappingURL=data:application/json;base64,');
},function(module,exports){eval("'use strict';\n\nfunction Event(eventType) {\n  this.type = eventType;\n}\n\nEvent.prototype.initEvent = function(eventType, canBubble, cancelable) {\n  this.type = eventType;\n  this.bubbles = canBubble;\n  this.cancelable = cancelable;\n  this.timeStamp = +new Date();\n  return this;\n};\n\nEvent.prototype.stopPropagation = function() {};\nEvent.prototype.preventDefault  = function() {};\n\nEvent.CAPTURING_PHASE = 1;\nEvent.AT_TARGET       = 2;\nEvent.BUBBLING_PHASE  = 3;\n\nmodule.exports = Event;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9ldmVudC9ldmVudC5qcz81ODUyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIxNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gRXZlbnQoZXZlbnRUeXBlKSB7XG4gIHRoaXMudHlwZSA9IGV2ZW50VHlwZTtcbn1cblxuRXZlbnQucHJvdG90eXBlLmluaXRFdmVudCA9IGZ1bmN0aW9uKGV2ZW50VHlwZSwgY2FuQnViYmxlLCBjYW5jZWxhYmxlKSB7XG4gIHRoaXMudHlwZSA9IGV2ZW50VHlwZTtcbiAgdGhpcy5idWJibGVzID0gY2FuQnViYmxlO1xuICB0aGlzLmNhbmNlbGFibGUgPSBjYW5jZWxhYmxlO1xuICB0aGlzLnRpbWVTdGFtcCA9ICtuZXcgRGF0ZSgpO1xuICByZXR1cm4gdGhpcztcbn07XG5cbkV2ZW50LnByb3RvdHlwZS5zdG9wUHJvcGFnYXRpb24gPSBmdW5jdGlvbigpIHt9O1xuRXZlbnQucHJvdG90eXBlLnByZXZlbnREZWZhdWx0ICA9IGZ1bmN0aW9uKCkge307XG5cbkV2ZW50LkNBUFRVUklOR19QSEFTRSA9IDE7XG5FdmVudC5BVF9UQVJHRVQgICAgICAgPSAyO1xuRXZlbnQuQlVCQkxJTkdfUEhBU0UgID0gMztcblxubW9kdWxlLmV4cG9ydHMgPSBFdmVudDtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9ldmVudC9ldmVudC5qc1xuICoqIG1vZHVsZSBpZCA9IDE2XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\nvar inherits = __webpack_require__(1)\n  , IframeTransport = __webpack_require__(30)\n  , objectUtils = __webpack_require__(19)\n  ;\n\nmodule.exports = function(transport) {\n\n  function IframeWrapTransport(transUrl, baseUrl) {\n    IframeTransport.call(this, transport.transportName, transUrl, baseUrl);\n  }\n\n  inherits(IframeWrapTransport, IframeTransport);\n\n  IframeWrapTransport.enabled = function(url, info) {\n    if (!global.document) {\n      return false;\n    }\n\n    var iframeInfo = objectUtils.extend({}, info);\n    iframeInfo.sameOrigin = true;\n    return transport.enabled(iframeInfo) && IframeTransport.enabled();\n  };\n\n  IframeWrapTransport.transportName = 'iframe-' + transport.transportName;\n  IframeWrapTransport.needBody = true;\n  IframeWrapTransport.roundTrips = IframeTransport.roundTrips + transport.roundTrips - 1; // html, javascript (2) + transport - no CORS (1)\n\n  IframeWrapTransport.facadeTransport = transport;\n\n  return IframeWrapTransport;\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvbGliL2lmcmFtZS13cmFwLmpzPzFkYzciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDBDQUEwQztBQUMxQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHlGQUF5Rjs7QUFFekY7O0FBRUE7QUFDQSIsImZpbGUiOiIxNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIElmcmFtZVRyYW5zcG9ydCA9IHJlcXVpcmUoJy4uL2lmcmFtZScpXG4gICwgb2JqZWN0VXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy9vYmplY3QnKVxuICA7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odHJhbnNwb3J0KSB7XG5cbiAgZnVuY3Rpb24gSWZyYW1lV3JhcFRyYW5zcG9ydCh0cmFuc1VybCwgYmFzZVVybCkge1xuICAgIElmcmFtZVRyYW5zcG9ydC5jYWxsKHRoaXMsIHRyYW5zcG9ydC50cmFuc3BvcnROYW1lLCB0cmFuc1VybCwgYmFzZVVybCk7XG4gIH1cblxuICBpbmhlcml0cyhJZnJhbWVXcmFwVHJhbnNwb3J0LCBJZnJhbWVUcmFuc3BvcnQpO1xuXG4gIElmcmFtZVdyYXBUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKHVybCwgaW5mbykge1xuICAgIGlmICghZ2xvYmFsLmRvY3VtZW50KSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIGlmcmFtZUluZm8gPSBvYmplY3RVdGlscy5leHRlbmQoe30sIGluZm8pO1xuICAgIGlmcmFtZUluZm8uc2FtZU9yaWdpbiA9IHRydWU7XG4gICAgcmV0dXJuIHRyYW5zcG9ydC5lbmFibGVkKGlmcmFtZUluZm8pICYmIElmcmFtZVRyYW5zcG9ydC5lbmFibGVkKCk7XG4gIH07XG5cbiAgSWZyYW1lV3JhcFRyYW5zcG9ydC50cmFuc3BvcnROYW1lID0gJ2lmcmFtZS0nICsgdHJhbnNwb3J0LnRyYW5zcG9ydE5hbWU7XG4gIElmcmFtZVdyYXBUcmFuc3BvcnQubmVlZEJvZHkgPSB0cnVlO1xuICBJZnJhbWVXcmFwVHJhbnNwb3J0LnJvdW5kVHJpcHMgPSBJZnJhbWVUcmFuc3BvcnQucm91bmRUcmlwcyArIHRyYW5zcG9ydC5yb3VuZFRyaXBzIC0gMTsgLy8gaHRtbCwgamF2YXNjcmlwdCAoMikgKyB0cmFuc3BvcnQgLSBubyBDT1JTICgxKVxuXG4gIElmcmFtZVdyYXBUcmFuc3BvcnQuZmFjYWRlVHJhbnNwb3J0ID0gdHJhbnNwb3J0O1xuXG4gIHJldHVybiBJZnJhbWVXcmFwVHJhbnNwb3J0O1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvbGliL2lmcmFtZS13cmFwLmpzXG4gKiogbW9kdWxlIGlkID0gMTdcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process, global) {'use strict';\n\nvar EventEmitter = __webpack_require__(4).EventEmitter\n  , inherits = __webpack_require__(1)\n  , eventUtils = __webpack_require__(7)\n  , browser = __webpack_require__(11)\n  , urlUtils = __webpack_require__(5)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:sender:xdr');\n}\n\n// References:\n//   http://ajaxian.com/archives/100-line-ajax-wrapper\n//   http://msdn.microsoft.com/en-us/library/cc288060(v=VS.85).aspx\n\nfunction XDRObject(method, url, payload) {\n  debug(method, url);\n  var self = this;\n  EventEmitter.call(this);\n\n  setTimeout(function() {\n    self._start(method, url, payload);\n  }, 0);\n}\n\ninherits(XDRObject, EventEmitter);\n\nXDRObject.prototype._start = function(method, url, payload) {\n  debug('_start');\n  var self = this;\n  var xdr = new global.XDomainRequest();\n  // IE caches even POSTs\n  url = urlUtils.addQuery(url, 't=' + (+new Date()));\n\n  xdr.onerror = function() {\n    debug('onerror');\n    self._error();\n  };\n  xdr.ontimeout = function() {\n    debug('ontimeout');\n    self._error();\n  };\n  xdr.onprogress = function() {\n    debug('progress', xdr.responseText);\n    self.emit('chunk', 200, xdr.responseText);\n  };\n  xdr.onload = function() {\n    debug('load');\n    self.emit('finish', 200, xdr.responseText);\n    self._cleanup(false);\n  };\n  this.xdr = xdr;\n  this.unloadRef = eventUtils.unloadAdd(function() {\n    self._cleanup(true);\n  });\n  try {\n    // Fails with AccessDenied if port number is bogus\n    this.xdr.open(method, url);\n    if (this.timeout) {\n      this.xdr.timeout = this.timeout;\n    }\n    this.xdr.send(payload);\n  } catch (x) {\n    this._error();\n  }\n};\n\nXDRObject.prototype._error = function() {\n  this.emit('finish', 0, '');\n  this._cleanup(false);\n};\n\nXDRObject.prototype._cleanup = function(abort) {\n  debug('cleanup', abort);\n  if (!this.xdr) {\n    return;\n  }\n  this.removeAllListeners();\n  eventUtils.unloadDel(this.unloadRef);\n\n  this.xdr.ontimeout = this.xdr.onerror = this.xdr.onprogress = this.xdr.onload = null;\n  if (abort) {\n    try {\n      this.xdr.abort();\n    } catch (x) {}\n  }\n  this.unloadRef = this.xdr = null;\n};\n\nXDRObject.prototype.close = function() {\n  debug('close');\n  this._cleanup(true);\n};\n\n// IE 8/9 if the request target uses the same scheme - #79\nXDRObject.enabled = !!(global.XDomainRequest && browser.hasDomain());\n\nmodule.exports = XDRObject;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvc2VuZGVyL3hkci5qcz80OTg1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgLCBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBldmVudFV0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvZXZlbnQnKVxuICAsIGJyb3dzZXIgPSByZXF1aXJlKCcuLi8uLi91dGlscy9icm93c2VyJylcbiAgLCB1cmxVdGlscyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL3VybCcpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDpzZW5kZXI6eGRyJyk7XG59XG5cbi8vIFJlZmVyZW5jZXM6XG4vLyAgIGh0dHA6Ly9hamF4aWFuLmNvbS9hcmNoaXZlcy8xMDAtbGluZS1hamF4LXdyYXBwZXJcbi8vICAgaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2NjMjg4MDYwKHY9VlMuODUpLmFzcHhcblxuZnVuY3Rpb24gWERST2JqZWN0KG1ldGhvZCwgdXJsLCBwYXlsb2FkKSB7XG4gIGRlYnVnKG1ldGhvZCwgdXJsKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcblxuICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIHNlbGYuX3N0YXJ0KG1ldGhvZCwgdXJsLCBwYXlsb2FkKTtcbiAgfSwgMCk7XG59XG5cbmluaGVyaXRzKFhEUk9iamVjdCwgRXZlbnRFbWl0dGVyKTtcblxuWERST2JqZWN0LnByb3RvdHlwZS5fc3RhcnQgPSBmdW5jdGlvbihtZXRob2QsIHVybCwgcGF5bG9hZCkge1xuICBkZWJ1ZygnX3N0YXJ0Jyk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIHhkciA9IG5ldyBnbG9iYWwuWERvbWFpblJlcXVlc3QoKTtcbiAgLy8gSUUgY2FjaGVzIGV2ZW4gUE9TVHNcbiAgdXJsID0gdXJsVXRpbHMuYWRkUXVlcnkodXJsLCAndD0nICsgKCtuZXcgRGF0ZSgpKSk7XG5cbiAgeGRyLm9uZXJyb3IgPSBmdW5jdGlvbigpIHtcbiAgICBkZWJ1Zygnb25lcnJvcicpO1xuICAgIHNlbGYuX2Vycm9yKCk7XG4gIH07XG4gIHhkci5vbnRpbWVvdXQgPSBmdW5jdGlvbigpIHtcbiAgICBkZWJ1Zygnb250aW1lb3V0Jyk7XG4gICAgc2VsZi5fZXJyb3IoKTtcbiAgfTtcbiAgeGRyLm9ucHJvZ3Jlc3MgPSBmdW5jdGlvbigpIHtcbiAgICBkZWJ1ZygncHJvZ3Jlc3MnLCB4ZHIucmVzcG9uc2VUZXh0KTtcbiAgICBzZWxmLmVtaXQoJ2NodW5rJywgMjAwLCB4ZHIucmVzcG9uc2VUZXh0KTtcbiAgfTtcbiAgeGRyLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdsb2FkJyk7XG4gICAgc2VsZi5lbWl0KCdmaW5pc2gnLCAyMDAsIHhkci5yZXNwb25zZVRleHQpO1xuICAgIHNlbGYuX2NsZWFudXAoZmFsc2UpO1xuICB9O1xuICB0aGlzLnhkciA9IHhkcjtcbiAgdGhpcy51bmxvYWRSZWYgPSBldmVudFV0aWxzLnVubG9hZEFkZChmdW5jdGlvbigpIHtcbiAgICBzZWxmLl9jbGVhbnVwKHRydWUpO1xuICB9KTtcbiAgdHJ5IHtcbiAgICAvLyBGYWlscyB3aXRoIEFjY2Vzc0RlbmllZCBpZiBwb3J0IG51bWJlciBpcyBib2d1c1xuICAgIHRoaXMueGRyLm9wZW4obWV0aG9kLCB1cmwpO1xuICAgIGlmICh0aGlzLnRpbWVvdXQpIHtcbiAgICAgIHRoaXMueGRyLnRpbWVvdXQgPSB0aGlzLnRpbWVvdXQ7XG4gICAgfVxuICAgIHRoaXMueGRyLnNlbmQocGF5bG9hZCk7XG4gIH0gY2F0Y2ggKHgpIHtcbiAgICB0aGlzLl9lcnJvcigpO1xuICB9XG59O1xuXG5YRFJPYmplY3QucHJvdG90eXBlLl9lcnJvciA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLmVtaXQoJ2ZpbmlzaCcsIDAsICcnKTtcbiAgdGhpcy5fY2xlYW51cChmYWxzZSk7XG59O1xuXG5YRFJPYmplY3QucHJvdG90eXBlLl9jbGVhbnVwID0gZnVuY3Rpb24oYWJvcnQpIHtcbiAgZGVidWcoJ2NsZWFudXAnLCBhYm9ydCk7XG4gIGlmICghdGhpcy54ZHIpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgZXZlbnRVdGlscy51bmxvYWREZWwodGhpcy51bmxvYWRSZWYpO1xuXG4gIHRoaXMueGRyLm9udGltZW91dCA9IHRoaXMueGRyLm9uZXJyb3IgPSB0aGlzLnhkci5vbnByb2dyZXNzID0gdGhpcy54ZHIub25sb2FkID0gbnVsbDtcbiAgaWYgKGFib3J0KSB7XG4gICAgdHJ5IHtcbiAgICAgIHRoaXMueGRyLmFib3J0KCk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgfVxuICB0aGlzLnVubG9hZFJlZiA9IHRoaXMueGRyID0gbnVsbDtcbn07XG5cblhEUk9iamVjdC5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ2Nsb3NlJyk7XG4gIHRoaXMuX2NsZWFudXAodHJ1ZSk7XG59O1xuXG4vLyBJRSA4LzkgaWYgdGhlIHJlcXVlc3QgdGFyZ2V0IHVzZXMgdGhlIHNhbWUgc2NoZW1lIC0gIzc5XG5YRFJPYmplY3QuZW5hYmxlZCA9ICEhKGdsb2JhbC5YRG9tYWluUmVxdWVzdCAmJiBicm93c2VyLmhhc0RvbWFpbigpKTtcblxubW9kdWxlLmV4cG9ydHMgPSBYRFJPYmplY3Q7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3NlbmRlci94ZHIuanNcbiAqKiBtb2R1bGUgaWQgPSAxOFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports){eval("'use strict';\n\nmodule.exports = {\n  isObject: function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  }\n\n, extend: function(obj) {\n    if (!this.isObject(obj)) {\n      return obj;\n    }\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n      source = arguments[i];\n      for (prop in source) {\n        if (Object.prototype.hasOwnProperty.call(source, prop)) {\n          obj[prop] = source[prop];\n        }\n      }\n    }\n    return obj;\n  }\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi91dGlscy9vYmplY3QuanM/MDIzYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsWUFBWTtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGlzT2JqZWN0OiBmdW5jdGlvbihvYmopIHtcbiAgICB2YXIgdHlwZSA9IHR5cGVvZiBvYmo7XG4gICAgcmV0dXJuIHR5cGUgPT09ICdmdW5jdGlvbicgfHwgdHlwZSA9PT0gJ29iamVjdCcgJiYgISFvYmo7XG4gIH1cblxuLCBleHRlbmQ6IGZ1bmN0aW9uKG9iaikge1xuICAgIGlmICghdGhpcy5pc09iamVjdChvYmopKSB7XG4gICAgICByZXR1cm4gb2JqO1xuICAgIH1cbiAgICB2YXIgc291cmNlLCBwcm9wO1xuICAgIGZvciAodmFyIGkgPSAxLCBsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgIGZvciAocHJvcCBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIHByb3ApKSB7XG4gICAgICAgICAgb2JqW3Byb3BdID0gc291cmNlW3Byb3BdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBvYmo7XG4gIH1cbn07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9saWIvdXRpbHMvb2JqZWN0LmpzXG4gKiogbW9kdWxlIGlkID0gMTlcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar required = __webpack_require__(83)\n  , lolcation = __webpack_require__(81)\n  , qs = __webpack_require__(82)\n  , relativere = /^\\/(?!\\/)/;\n\n/**\n * These are the parse instructions for the URL parsers, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar instructions = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  ['//', 'protocol', 2, 1, 1],          // Extract from the front.\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/\\:(\\d+)$/, 'port'],                 // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my CDO.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Boolean|function} parser Parser for the query string.\n * @param {Object} location Location defaults for relative paths.\n * @api public\n */\nfunction URL(address, location, parser) {\n  if (!(this instanceof URL)) {\n    return new URL(address, location, parser);\n  }\n\n  var relative = relativere.test(address)\n    , parse, instruction, index, key\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) {\n    parser = qs.parse;\n  }\n\n  location = lolcation(location);\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if (index = parse.exec(address)) {\n      url[key] = index[1];\n      address = address.slice(0, address.length - index[0].length);\n    }\n\n    url[key] = url[key] || (instruction[3] || ('port' === key && relative) ? location[key] || '' : '');\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) {\n      url[key] = url[key].toLowerCase();\n    }\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} prop Property we need to adjust.\n * @param {Mixed} value The newly assigned value.\n * @returns {URL}\n * @api public\n */\nURL.prototype.set = function set(part, value, fn) {\n  var url = this;\n\n  if ('query' === part) {\n    if ('string' === typeof value && value.length) {\n      value = (fn || qs.parse)(value);\n    }\n\n    url[part] = value;\n  } else if ('port' === part) {\n    url[part] = value;\n\n    if (!required(value, url.protocol)) {\n      url.host = url.hostname;\n      url[part] = '';\n    } else if (value) {\n      url.host = url.hostname +':'+ value;\n    }\n  } else if ('hostname' === part) {\n    url[part] = value;\n\n    if (url.port) value += ':'+ url.port;\n    url.host = value;\n  } else if ('host' === part) {\n    url[part] = value;\n\n    if (/\\:\\d+/.test(value)) {\n      value = value.split(':');\n      url.hostname = value[0];\n      url.port = value[1];\n    }\n  } else {\n    url[part] = value;\n  }\n\n  url.href = url.toString();\n  return url;\n};\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String}\n * @api public\n */\nURL.prototype.toString = function toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , result = url.protocol +'//';\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.hostname;\n  if (url.port) result += ':'+ url.port;\n\n  result += url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n};\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others.\n//\nURL.qs = qs;\nURL.location = lolcation;\nmodule.exports = URL;\n//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "7ad17c6085dee9a33787bac28fb23d46.eot";//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Jvb3RzdHJhcC1zYXNzL3ZlbmRvci9hc3NldHMvZm9udHMvYm9vdHN0cmFwL2dseXBoaWNvbnMtaGFsZmxpbmdzLXJlZ3VsYXIuZW90PzFiOTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI3YWQxN2M2MDg1ZGVlOWEzMzc4N2JhYzI4ZmIyM2Q0Ni5lb3RcIjtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9ib290c3RyYXAtc2Fzcy92ZW5kb3IvYXNzZXRzL2ZvbnRzL2Jvb3RzdHJhcC9nbHlwaGljb25zLWhhbGZsaW5ncy1yZWd1bGFyLmVvdFxuICoqIG1vZHVsZSBpZCA9IDIxXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports){eval("'use strict';\n\n/* Simplified implementation of DOM2 EventTarget.\n *   http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget\n */\n\nfunction EventTarget() {\n  this._listeners = {};\n}\n\nEventTarget.prototype.addEventListener = function(eventType, listener) {\n  if (!(eventType in this._listeners)) {\n    this._listeners[eventType] = [];\n  }\n  var arr = this._listeners[eventType];\n  // #4\n  if (arr.indexOf(listener) === -1) {\n    // Make a copy so as not to interfere with a current dispatchEvent.\n    arr = arr.concat([listener]);\n  }\n  this._listeners[eventType] = arr;\n};\n\nEventTarget.prototype.removeEventListener = function(eventType, listener) {\n  var arr = this._listeners[eventType];\n  if (!arr) {\n    return;\n  }\n  var idx = arr.indexOf(listener);\n  if (idx !== -1) {\n    if (arr.length > 1) {\n      // Make a copy so as not to interfere with a current dispatchEvent.\n      this._listeners[eventType] = arr.slice(0, idx).concat(arr.slice(idx + 1));\n    } else {\n      delete this._listeners[eventType];\n    }\n    return;\n  }\n};\n\nEventTarget.prototype.dispatchEvent = function(event) {\n  var t = event.type;\n  var args = Array.prototype.slice.call(arguments, 0);\n  // TODO: This doesn't match the real behavior; per spec, onfoo get\n  // their place in line from the /first/ time they're set from\n  // non-null. Although WebKit bumps it to the end every time it's\n  // set.\n  if (this['on' + t]) {\n    this['on' + t].apply(this, args);\n  }\n  if (t in this._listeners) {\n    // Grab a reference to the listeners list. removeEventListener may alter the list.\n    var listeners = this._listeners[t];\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i].apply(this, args);\n    }\n  }\n};\n\nmodule.exports = EventTarget;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9ldmVudC9ldmVudHRhcmdldC5qcz9hMDkxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixzQkFBc0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qIFNpbXBsaWZpZWQgaW1wbGVtZW50YXRpb24gb2YgRE9NMiBFdmVudFRhcmdldC5cbiAqICAgaHR0cDovL3d3dy53My5vcmcvVFIvRE9NLUxldmVsLTItRXZlbnRzL2V2ZW50cy5odG1sI0V2ZW50cy1FdmVudFRhcmdldFxuICovXG5cbmZ1bmN0aW9uIEV2ZW50VGFyZ2V0KCkge1xuICB0aGlzLl9saXN0ZW5lcnMgPSB7fTtcbn1cblxuRXZlbnRUYXJnZXQucHJvdG90eXBlLmFkZEV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbihldmVudFR5cGUsIGxpc3RlbmVyKSB7XG4gIGlmICghKGV2ZW50VHlwZSBpbiB0aGlzLl9saXN0ZW5lcnMpKSB7XG4gICAgdGhpcy5fbGlzdGVuZXJzW2V2ZW50VHlwZV0gPSBbXTtcbiAgfVxuICB2YXIgYXJyID0gdGhpcy5fbGlzdGVuZXJzW2V2ZW50VHlwZV07XG4gIC8vICM0XG4gIGlmIChhcnIuaW5kZXhPZihsaXN0ZW5lcikgPT09IC0xKSB7XG4gICAgLy8gTWFrZSBhIGNvcHkgc28gYXMgbm90IHRvIGludGVyZmVyZSB3aXRoIGEgY3VycmVudCBkaXNwYXRjaEV2ZW50LlxuICAgIGFyciA9IGFyci5jb25jYXQoW2xpc3RlbmVyXSk7XG4gIH1cbiAgdGhpcy5fbGlzdGVuZXJzW2V2ZW50VHlwZV0gPSBhcnI7XG59O1xuXG5FdmVudFRhcmdldC5wcm90b3R5cGUucmVtb3ZlRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uKGV2ZW50VHlwZSwgbGlzdGVuZXIpIHtcbiAgdmFyIGFyciA9IHRoaXMuX2xpc3RlbmVyc1tldmVudFR5cGVdO1xuICBpZiAoIWFycikge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgaWR4ID0gYXJyLmluZGV4T2YobGlzdGVuZXIpO1xuICBpZiAoaWR4ICE9PSAtMSkge1xuICAgIGlmIChhcnIubGVuZ3RoID4gMSkge1xuICAgICAgLy8gTWFrZSBhIGNvcHkgc28gYXMgbm90IHRvIGludGVyZmVyZSB3aXRoIGEgY3VycmVudCBkaXNwYXRjaEV2ZW50LlxuICAgICAgdGhpcy5fbGlzdGVuZXJzW2V2ZW50VHlwZV0gPSBhcnIuc2xpY2UoMCwgaWR4KS5jb25jYXQoYXJyLnNsaWNlKGlkeCArIDEpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZGVsZXRlIHRoaXMuX2xpc3RlbmVyc1tldmVudFR5cGVdO1xuICAgIH1cbiAgICByZXR1cm47XG4gIH1cbn07XG5cbkV2ZW50VGFyZ2V0LnByb3RvdHlwZS5kaXNwYXRjaEV2ZW50ID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgdmFyIHQgPSBldmVudC50eXBlO1xuICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMCk7XG4gIC8vIFRPRE86IFRoaXMgZG9lc24ndCBtYXRjaCB0aGUgcmVhbCBiZWhhdmlvcjsgcGVyIHNwZWMsIG9uZm9vIGdldFxuICAvLyB0aGVpciBwbGFjZSBpbiBsaW5lIGZyb20gdGhlIC9maXJzdC8gdGltZSB0aGV5J3JlIHNldCBmcm9tXG4gIC8vIG5vbi1udWxsLiBBbHRob3VnaCBXZWJLaXQgYnVtcHMgaXQgdG8gdGhlIGVuZCBldmVyeSB0aW1lIGl0J3NcbiAgLy8gc2V0LlxuICBpZiAodGhpc1snb24nICsgdF0pIHtcbiAgICB0aGlzWydvbicgKyB0XS5hcHBseSh0aGlzLCBhcmdzKTtcbiAgfVxuICBpZiAodCBpbiB0aGlzLl9saXN0ZW5lcnMpIHtcbiAgICAvLyBHcmFiIGEgcmVmZXJlbmNlIHRvIHRoZSBsaXN0ZW5lcnMgbGlzdC4gcmVtb3ZlRXZlbnRMaXN0ZW5lciBtYXkgYWx0ZXIgdGhlIGxpc3QuXG4gICAgdmFyIGxpc3RlbmVycyA9IHRoaXMuX2xpc3RlbmVyc1t0XTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgbGlzdGVuZXJzW2ldLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH1cbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBFdmVudFRhcmdldDtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9ldmVudC9ldmVudHRhcmdldC5qc1xuICoqIG1vZHVsZSBpZCA9IDIyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\nvar EventEmitter = __webpack_require__(4).EventEmitter\n  , inherits = __webpack_require__(1)\n  , JSON3 = __webpack_require__(6)\n  , objectUtils = __webpack_require__(19)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:info-ajax');\n}\n\nfunction InfoAjax(url, AjaxObject) {\n  EventEmitter.call(this);\n\n  var self = this;\n  var t0 = +new Date();\n  this.xo = new AjaxObject('GET', url);\n\n  this.xo.once('finish', function(status, text) {\n    var info, rtt;\n    if (status === 200) {\n      rtt = (+new Date()) - t0;\n      if (text) {\n        try {\n          info = JSON3.parse(text);\n        } catch (e) {\n          debug('bad json', text);\n        }\n      }\n\n      if (!objectUtils.isObject(info)) {\n        info = {};\n      }\n    }\n    self.emit('finish', info, rtt);\n    self.removeAllListeners();\n  });\n}\n\ninherits(InfoAjax, EventEmitter);\n\nInfoAjax.prototype.close = function() {\n  this.removeAllListeners();\n  this.xo.close();\n};\n\nmodule.exports = InfoAjax;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9pbmZvLWFqYXguanM/ZjQ4YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgLCBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBKU09OMyA9IHJlcXVpcmUoJ2pzb24zJylcbiAgLCBvYmplY3RVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMvb2JqZWN0JylcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OmluZm8tYWpheCcpO1xufVxuXG5mdW5jdGlvbiBJbmZvQWpheCh1cmwsIEFqYXhPYmplY3QpIHtcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG5cbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgdDAgPSArbmV3IERhdGUoKTtcbiAgdGhpcy54byA9IG5ldyBBamF4T2JqZWN0KCdHRVQnLCB1cmwpO1xuXG4gIHRoaXMueG8ub25jZSgnZmluaXNoJywgZnVuY3Rpb24oc3RhdHVzLCB0ZXh0KSB7XG4gICAgdmFyIGluZm8sIHJ0dDtcbiAgICBpZiAoc3RhdHVzID09PSAyMDApIHtcbiAgICAgIHJ0dCA9ICgrbmV3IERhdGUoKSkgLSB0MDtcbiAgICAgIGlmICh0ZXh0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaW5mbyA9IEpTT04zLnBhcnNlKHRleHQpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgZGVidWcoJ2JhZCBqc29uJywgdGV4dCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKCFvYmplY3RVdGlscy5pc09iamVjdChpbmZvKSkge1xuICAgICAgICBpbmZvID0ge307XG4gICAgICB9XG4gICAgfVxuICAgIHNlbGYuZW1pdCgnZmluaXNoJywgaW5mbywgcnR0KTtcbiAgICBzZWxmLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICB9KTtcbn1cblxuaW5oZXJpdHMoSW5mb0FqYXgsIEV2ZW50RW1pdHRlcik7XG5cbkluZm9BamF4LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICB0aGlzLnhvLmNsb3NlKCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEluZm9BamF4O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL2luZm8tYWpheC5qc1xuICoqIG1vZHVsZSBpZCA9IDIzXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar inherits = __webpack_require__(1)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  , JSON3 = __webpack_require__(6)\n  , XHRLocalObject = __webpack_require__(10)\n  , InfoAjax = __webpack_require__(23)\n  ;\n\nfunction InfoReceiverIframe(transUrl) {\n  var self = this;\n  EventEmitter.call(this);\n\n  this.ir = new InfoAjax(transUrl, XHRLocalObject);\n  this.ir.once('finish', function(info, rtt) {\n    self.ir = null;\n    self.emit('message', JSON3.stringify([info, rtt]));\n  });\n}\n\ninherits(InfoReceiverIframe, EventEmitter);\n\nInfoReceiverIframe.transportName = 'iframe-info-receiver';\n\nInfoReceiverIframe.prototype.close = function() {\n  if (this.ir) {\n    this.ir.close();\n    this.ir = null;\n  }\n  this.removeAllListeners();\n};\n\nmodule.exports = InfoReceiverIframe;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9pbmZvLWlmcmFtZS1yZWNlaXZlci5qcz85MTdiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgLCBKU09OMyA9IHJlcXVpcmUoJ2pzb24zJylcbiAgLCBYSFJMb2NhbE9iamVjdCA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0L3NlbmRlci94aHItbG9jYWwnKVxuICAsIEluZm9BamF4ID0gcmVxdWlyZSgnLi9pbmZvLWFqYXgnKVxuICA7XG5cbmZ1bmN0aW9uIEluZm9SZWNlaXZlcklmcmFtZSh0cmFuc1VybCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuXG4gIHRoaXMuaXIgPSBuZXcgSW5mb0FqYXgodHJhbnNVcmwsIFhIUkxvY2FsT2JqZWN0KTtcbiAgdGhpcy5pci5vbmNlKCdmaW5pc2gnLCBmdW5jdGlvbihpbmZvLCBydHQpIHtcbiAgICBzZWxmLmlyID0gbnVsbDtcbiAgICBzZWxmLmVtaXQoJ21lc3NhZ2UnLCBKU09OMy5zdHJpbmdpZnkoW2luZm8sIHJ0dF0pKTtcbiAgfSk7XG59XG5cbmluaGVyaXRzKEluZm9SZWNlaXZlcklmcmFtZSwgRXZlbnRFbWl0dGVyKTtcblxuSW5mb1JlY2VpdmVySWZyYW1lLnRyYW5zcG9ydE5hbWUgPSAnaWZyYW1lLWluZm8tcmVjZWl2ZXInO1xuXG5JbmZvUmVjZWl2ZXJJZnJhbWUucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIGlmICh0aGlzLmlyKSB7XG4gICAgdGhpcy5pci5jbG9zZSgpO1xuICAgIHRoaXMuaXIgPSBudWxsO1xuICB9XG4gIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEluZm9SZWNlaXZlcklmcmFtZTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9pbmZvLWlmcmFtZS1yZWNlaXZlci5qc1xuICoqIG1vZHVsZSBpZCA9IDI0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports){eval("/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\nmodule.exports = global.location || {\n  origin: 'http://localhost:80'\n, protocol: 'http'\n, host: 'localhost'\n, port: 80\n, href: 'http://localhost/'\n, hash: ''\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9sb2NhdGlvbi5qcz9lMGZmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZ2xvYmFsLmxvY2F0aW9uIHx8IHtcbiAgb3JpZ2luOiAnaHR0cDovL2xvY2FsaG9zdDo4MCdcbiwgcHJvdG9jb2w6ICdodHRwJ1xuLCBob3N0OiAnbG9jYWxob3N0J1xuLCBwb3J0OiA4MFxuLCBocmVmOiAnaHR0cDovL2xvY2FsaG9zdC8nXG4sIGhhc2g6ICcnXG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL2xvY2F0aW9uLmpzXG4gKiogbW9kdWxlIGlkID0gMjVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global, process) {'use strict';\n\nvar EventEmitter = __webpack_require__(4).EventEmitter\n  , inherits = __webpack_require__(1)\n  , utils = __webpack_require__(7)\n  , urlUtils = __webpack_require__(5)\n  , XHR = global.XMLHttpRequest\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:browser:xhr');\n}\n\nfunction AbstractXHRObject(method, url, payload, opts) {\n  debug(method, url);\n  var self = this;\n  EventEmitter.call(this);\n\n  setTimeout(function () {\n    self._start(method, url, payload, opts);\n  }, 0);\n}\n\ninherits(AbstractXHRObject, EventEmitter);\n\nAbstractXHRObject.prototype._start = function(method, url, payload, opts) {\n  var self = this;\n\n  try {\n    this.xhr = new XHR();\n  } catch (x) {}\n\n  if (!this.xhr) {\n    debug('no xhr');\n    this.emit('finish', 0, 'no xhr support');\n    this._cleanup();\n    return;\n  }\n\n  // several browsers cache POSTs\n  url = urlUtils.addQuery(url, 't=' + (+new Date()));\n\n  // Explorer tends to keep connection open, even after the\n  // tab gets closed: http://bugs.jquery.com/ticket/5280\n  this.unloadRef = utils.unloadAdd(function() {\n    debug('unload cleanup');\n    self._cleanup(true);\n  });\n  try {\n    this.xhr.open(method, url, true);\n    if (this.timeout && 'timeout' in this.xhr) {\n      this.xhr.timeout = this.timeout;\n      this.xhr.ontimeout = function() {\n        debug('xhr timeout');\n        self.emit('finish', 0, '');\n        self._cleanup(false);\n      };\n    }\n  } catch (e) {\n    debug('exception', e);\n    // IE raises an exception on wrong port.\n    this.emit('finish', 0, '');\n    this._cleanup(false);\n    return;\n  }\n\n  if ((!opts || !opts.noCredentials) && AbstractXHRObject.supportsCORS) {\n    debug('withCredentials');\n    // Mozilla docs says https://developer.mozilla.org/en/XMLHttpRequest :\n    // \"This never affects same-site requests.\"\n\n    this.xhr.withCredentials = 'true';\n  }\n  if (opts && opts.headers) {\n    for (var key in opts.headers) {\n      this.xhr.setRequestHeader(key, opts.headers[key]);\n    }\n  }\n\n  this.xhr.onreadystatechange = function() {\n    if (self.xhr) {\n      var x = self.xhr;\n      var text, status;\n      debug('readyState', x.readyState);\n      switch (x.readyState) {\n      case 3:\n        // IE doesn't like peeking into responseText or status\n        // on Microsoft.XMLHTTP and readystate=3\n        try {\n          status = x.status;\n          text = x.responseText;\n        } catch (e) {}\n        debug('status', status);\n        // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450\n        if (status === 1223) {\n          status = 204;\n        }\n\n        // IE does return readystate == 3 for 404 answers.\n        if (status === 200 && text && text.length > 0) {\n          debug('chunk');\n          self.emit('chunk', status, text);\n        }\n        break;\n      case 4:\n        status = x.status;\n        debug('status', status);\n        // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450\n        if (status === 1223) {\n          status = 204;\n        }\n        // IE returns this for a bad port\n        // http://msdn.microsoft.com/en-us/library/windows/desktop/aa383770(v=vs.85).aspx\n        if (status === 12005 || status === 12029) {\n          status = 0;\n        }\n\n        debug('finish', status, x.responseText);\n        self.emit('finish', status, x.responseText);\n        self._cleanup(false);\n        break;\n      }\n    }\n  };\n\n  try {\n    self.xhr.send(payload);\n  } catch (e) {\n    self.emit('finish', 0, '');\n    self._cleanup(false);\n  }\n};\n\nAbstractXHRObject.prototype._cleanup = function(abort) {\n  debug('cleanup');\n  if (!this.xhr) {\n    return;\n  }\n  this.removeAllListeners();\n  utils.unloadDel(this.unloadRef);\n\n  // IE needs this field to be a function\n  this.xhr.onreadystatechange = function() {};\n  if (this.xhr.ontimeout) {\n    this.xhr.ontimeout = null;\n  }\n\n  if (abort) {\n    try {\n      this.xhr.abort();\n    } catch (x) {}\n  }\n  this.unloadRef = this.xhr = null;\n};\n\nAbstractXHRObject.prototype.close = function() {\n  debug('close');\n  this._cleanup(true);\n};\n\nAbstractXHRObject.enabled = !!XHR;\n// override XMLHttpRequest for IE6/7\n// obfuscate to avoid firewalls\nvar axo = ['Active'].concat('Object').join('X');\nif (!AbstractXHRObject.enabled && (axo in global)) {\n  debug('overriding xmlhttprequest');\n  XHR = function() {\n    try {\n      return new global[axo]('Microsoft.XMLHTTP');\n    } catch (e) {\n      return null;\n    }\n  };\n  AbstractXHRObject.enabled = !!new XHR();\n}\n\nvar cors = false;\ntry {\n  cors = 'withCredentials' in new XHR();\n} catch (ignored) {}\n\nAbstractXHRObject.supportsCORS = cors;\n\nmodule.exports = AbstractXHRObject;\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(2)))//@ sourceMappingURL=data:application/json;base64,")},function(module,exports){eval("/* WEBPACK VAR INJECTION */(function(global) {module.exports = global.EventSource;\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvYnJvd3Nlci9ldmVudHNvdXJjZS5qcz83MGUwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBnbG9iYWwuRXZlbnRTb3VyY2U7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2Jyb3dzZXIvZXZlbnRzb3VyY2UuanNcbiAqKiBtb2R1bGUgaWQgPSAyN1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar inherits = __webpack_require__(1)\n  , AjaxBasedTransport = __webpack_require__(8)\n  , EventSourceReceiver = __webpack_require__(67)\n  , XHRCorsObject = __webpack_require__(14)\n  , EventSourceDriver = __webpack_require__(27)\n  ;\n\nfunction EventSourceTransport(transUrl) {\n  if (!EventSourceTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n\n  AjaxBasedTransport.call(this, transUrl, '/eventsource', EventSourceReceiver, XHRCorsObject);\n}\n\ninherits(EventSourceTransport, AjaxBasedTransport);\n\nEventSourceTransport.enabled = function() {\n  return !!EventSourceDriver;\n};\n\nEventSourceTransport.transportName = 'eventsource';\nEventSourceTransport.roundTrips = 2;\n\nmodule.exports = EventSourceTransport;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvZXZlbnRzb3VyY2UuanM/Y2NjMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIyOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEFqYXhCYXNlZFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vbGliL2FqYXgtYmFzZWQnKVxuICAsIEV2ZW50U291cmNlUmVjZWl2ZXIgPSByZXF1aXJlKCcuL3JlY2VpdmVyL2V2ZW50c291cmNlJylcbiAgLCBYSFJDb3JzT2JqZWN0ID0gcmVxdWlyZSgnLi9zZW5kZXIveGhyLWNvcnMnKVxuICAsIEV2ZW50U291cmNlRHJpdmVyID0gcmVxdWlyZSgnZXZlbnRzb3VyY2UnKVxuICA7XG5cbmZ1bmN0aW9uIEV2ZW50U291cmNlVHJhbnNwb3J0KHRyYW5zVXJsKSB7XG4gIGlmICghRXZlbnRTb3VyY2VUcmFuc3BvcnQuZW5hYmxlZCgpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUcmFuc3BvcnQgY3JlYXRlZCB3aGVuIGRpc2FibGVkJyk7XG4gIH1cblxuICBBamF4QmFzZWRUcmFuc3BvcnQuY2FsbCh0aGlzLCB0cmFuc1VybCwgJy9ldmVudHNvdXJjZScsIEV2ZW50U291cmNlUmVjZWl2ZXIsIFhIUkNvcnNPYmplY3QpO1xufVxuXG5pbmhlcml0cyhFdmVudFNvdXJjZVRyYW5zcG9ydCwgQWpheEJhc2VkVHJhbnNwb3J0KTtcblxuRXZlbnRTb3VyY2VUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gISFFdmVudFNvdXJjZURyaXZlcjtcbn07XG5cbkV2ZW50U291cmNlVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUgPSAnZXZlbnRzb3VyY2UnO1xuRXZlbnRTb3VyY2VUcmFuc3BvcnQucm91bmRUcmlwcyA9IDI7XG5cbm1vZHVsZS5leHBvcnRzID0gRXZlbnRTb3VyY2VUcmFuc3BvcnQ7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2V2ZW50c291cmNlLmpzXG4gKiogbW9kdWxlIGlkID0gMjhcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar inherits = __webpack_require__(1)\n  , HtmlfileReceiver = __webpack_require__(68)\n  , XHRLocalObject = __webpack_require__(10)\n  , AjaxBasedTransport = __webpack_require__(8)\n  ;\n\nfunction HtmlFileTransport(transUrl) {\n  if (!HtmlfileReceiver.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n  AjaxBasedTransport.call(this, transUrl, '/htmlfile', HtmlfileReceiver, XHRLocalObject);\n}\n\ninherits(HtmlFileTransport, AjaxBasedTransport);\n\nHtmlFileTransport.enabled = function(info) {\n  return HtmlfileReceiver.enabled && info.sameOrigin;\n};\n\nHtmlFileTransport.transportName = 'htmlfile';\nHtmlFileTransport.roundTrips = 2;\n\nmodule.exports = HtmlFileTransport;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvaHRtbGZpbGUuanM/NWU1NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIyOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEh0bWxmaWxlUmVjZWl2ZXIgPSByZXF1aXJlKCcuL3JlY2VpdmVyL2h0bWxmaWxlJylcbiAgLCBYSFJMb2NhbE9iamVjdCA9IHJlcXVpcmUoJy4vc2VuZGVyL3hoci1sb2NhbCcpXG4gICwgQWpheEJhc2VkVHJhbnNwb3J0ID0gcmVxdWlyZSgnLi9saWIvYWpheC1iYXNlZCcpXG4gIDtcblxuZnVuY3Rpb24gSHRtbEZpbGVUcmFuc3BvcnQodHJhbnNVcmwpIHtcbiAgaWYgKCFIdG1sZmlsZVJlY2VpdmVyLmVuYWJsZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyYW5zcG9ydCBjcmVhdGVkIHdoZW4gZGlzYWJsZWQnKTtcbiAgfVxuICBBamF4QmFzZWRUcmFuc3BvcnQuY2FsbCh0aGlzLCB0cmFuc1VybCwgJy9odG1sZmlsZScsIEh0bWxmaWxlUmVjZWl2ZXIsIFhIUkxvY2FsT2JqZWN0KTtcbn1cblxuaW5oZXJpdHMoSHRtbEZpbGVUcmFuc3BvcnQsIEFqYXhCYXNlZFRyYW5zcG9ydCk7XG5cbkh0bWxGaWxlVHJhbnNwb3J0LmVuYWJsZWQgPSBmdW5jdGlvbihpbmZvKSB7XG4gIHJldHVybiBIdG1sZmlsZVJlY2VpdmVyLmVuYWJsZWQgJiYgaW5mby5zYW1lT3JpZ2luO1xufTtcblxuSHRtbEZpbGVUcmFuc3BvcnQudHJhbnNwb3J0TmFtZSA9ICdodG1sZmlsZSc7XG5IdG1sRmlsZVRyYW5zcG9ydC5yb3VuZFRyaXBzID0gMjtcblxubW9kdWxlLmV4cG9ydHMgPSBIdG1sRmlsZVRyYW5zcG9ydDtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvaHRtbGZpbGUuanNcbiAqKiBtb2R1bGUgaWQgPSAyOVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");
},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\n// Few cool transports do work only for same-origin. In order to make\n// them work cross-domain we shall use iframe, served from the\n// remote domain. New browsers have capabilities to communicate with\n// cross domain iframe using postMessage(). In IE it was implemented\n// from IE 8+, but of course, IE got some details wrong:\n//    http://msdn.microsoft.com/en-us/library/cc197015(v=VS.85).aspx\n//    http://stevesouders.com/misc/test-postmessage.php\n\nvar inherits = __webpack_require__(1)\n  , JSON3 = __webpack_require__(6)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  , version = __webpack_require__(34)\n  , urlUtils = __webpack_require__(5)\n  , iframeUtils = __webpack_require__(12)\n  , eventUtils = __webpack_require__(7)\n  , random = __webpack_require__(9)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:transport:iframe');\n}\n\nfunction IframeTransport(transport, transUrl, baseUrl) {\n  if (!IframeTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n  EventEmitter.call(this);\n\n  var self = this;\n  this.origin = urlUtils.getOrigin(baseUrl);\n  this.baseUrl = baseUrl;\n  this.transUrl = transUrl;\n  this.transport = transport;\n  this.windowId = random.string(8);\n\n  var iframeUrl = urlUtils.addPath(baseUrl, '/iframe.html') + '#' + this.windowId;\n  debug(transport, transUrl, iframeUrl);\n\n  this.iframeObj = iframeUtils.createIframe(iframeUrl, function(r) {\n    debug('err callback');\n    self.emit('close', 1006, 'Unable to load an iframe (' + r + ')');\n    self.close();\n  });\n\n  this.onmessageCallback = this._message.bind(this);\n  eventUtils.attachEvent('message', this.onmessageCallback);\n}\n\ninherits(IframeTransport, EventEmitter);\n\nIframeTransport.prototype.close = function() {\n  debug('close');\n  this.removeAllListeners();\n  if (this.iframeObj) {\n    eventUtils.detachEvent('message', this.onmessageCallback);\n    try {\n      // When the iframe is not loaded, IE raises an exception\n      // on 'contentWindow'.\n      this.postMessage('c');\n    } catch (x) {}\n    this.iframeObj.cleanup();\n    this.iframeObj = null;\n    this.onmessageCallback = this.iframeObj = null;\n  }\n};\n\nIframeTransport.prototype._message = function(e) {\n  debug('message', e.data);\n  if (!urlUtils.isOriginEqual(e.origin, this.origin)) {\n    debug('not same origin', e.origin, this.origin);\n    return;\n  }\n\n  var iframeMessage;\n  try {\n    iframeMessage = JSON3.parse(e.data);\n  } catch (ignored) {\n    debug('bad json', e.data);\n    return;\n  }\n\n  if (iframeMessage.windowId !== this.windowId) {\n    debug('mismatched window id', iframeMessage.windowId, this.windowId);\n    return;\n  }\n\n  switch (iframeMessage.type) {\n  case 's':\n    this.iframeObj.loaded();\n    // window global dependency\n    this.postMessage('s', JSON3.stringify([\n      version\n    , this.transport\n    , this.transUrl\n    , this.baseUrl\n    ]));\n    break;\n  case 't':\n    this.emit('message', iframeMessage.data);\n    break;\n  case 'c':\n    var cdata;\n    try {\n      cdata = JSON3.parse(iframeMessage.data);\n    } catch (ignored) {\n      debug('bad json', iframeMessage.data);\n      return;\n    }\n    this.emit('close', cdata[0], cdata[1]);\n    this.close();\n    break;\n  }\n};\n\nIframeTransport.prototype.postMessage = function(type, data) {\n  debug('postMessage', type, data);\n  this.iframeObj.post(JSON3.stringify({\n    windowId: this.windowId\n  , type: type\n  , data: data || ''\n  }), this.origin);\n};\n\nIframeTransport.prototype.send = function(message) {\n  debug('send', message);\n  this.postMessage('m', message);\n};\n\nIframeTransport.enabled = function() {\n  return iframeUtils.iframeEnabled;\n};\n\nIframeTransport.transportName = 'iframe';\nIframeTransport.roundTrips = 2;\n\nmodule.exports = IframeTransport;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvaWZyYW1lLmpzP2RmMjgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vIEZldyBjb29sIHRyYW5zcG9ydHMgZG8gd29yayBvbmx5IGZvciBzYW1lLW9yaWdpbi4gSW4gb3JkZXIgdG8gbWFrZVxuLy8gdGhlbSB3b3JrIGNyb3NzLWRvbWFpbiB3ZSBzaGFsbCB1c2UgaWZyYW1lLCBzZXJ2ZWQgZnJvbSB0aGVcbi8vIHJlbW90ZSBkb21haW4uIE5ldyBicm93c2VycyBoYXZlIGNhcGFiaWxpdGllcyB0byBjb21tdW5pY2F0ZSB3aXRoXG4vLyBjcm9zcyBkb21haW4gaWZyYW1lIHVzaW5nIHBvc3RNZXNzYWdlKCkuIEluIElFIGl0IHdhcyBpbXBsZW1lbnRlZFxuLy8gZnJvbSBJRSA4KywgYnV0IG9mIGNvdXJzZSwgSUUgZ290IHNvbWUgZGV0YWlscyB3cm9uZzpcbi8vICAgIGh0dHA6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9jYzE5NzAxNSh2PVZTLjg1KS5hc3B4XG4vLyAgICBodHRwOi8vc3RldmVzb3VkZXJzLmNvbS9taXNjL3Rlc3QtcG9zdG1lc3NhZ2UucGhwXG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBKU09OMyA9IHJlcXVpcmUoJ2pzb24zJylcbiAgLCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgLCB2ZXJzaW9uID0gcmVxdWlyZSgnLi4vdmVyc2lvbicpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi91dGlscy91cmwnKVxuICAsIGlmcmFtZVV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMvaWZyYW1lJylcbiAgLCBldmVudFV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMvZXZlbnQnKVxuICAsIHJhbmRvbSA9IHJlcXVpcmUoJy4uL3V0aWxzL3JhbmRvbScpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDp0cmFuc3BvcnQ6aWZyYW1lJyk7XG59XG5cbmZ1bmN0aW9uIElmcmFtZVRyYW5zcG9ydCh0cmFuc3BvcnQsIHRyYW5zVXJsLCBiYXNlVXJsKSB7XG4gIGlmICghSWZyYW1lVHJhbnNwb3J0LmVuYWJsZWQoKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignVHJhbnNwb3J0IGNyZWF0ZWQgd2hlbiBkaXNhYmxlZCcpO1xuICB9XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuXG4gIHZhciBzZWxmID0gdGhpcztcbiAgdGhpcy5vcmlnaW4gPSB1cmxVdGlscy5nZXRPcmlnaW4oYmFzZVVybCk7XG4gIHRoaXMuYmFzZVVybCA9IGJhc2VVcmw7XG4gIHRoaXMudHJhbnNVcmwgPSB0cmFuc1VybDtcbiAgdGhpcy50cmFuc3BvcnQgPSB0cmFuc3BvcnQ7XG4gIHRoaXMud2luZG93SWQgPSByYW5kb20uc3RyaW5nKDgpO1xuXG4gIHZhciBpZnJhbWVVcmwgPSB1cmxVdGlscy5hZGRQYXRoKGJhc2VVcmwsICcvaWZyYW1lLmh0bWwnKSArICcjJyArIHRoaXMud2luZG93SWQ7XG4gIGRlYnVnKHRyYW5zcG9ydCwgdHJhbnNVcmwsIGlmcmFtZVVybCk7XG5cbiAgdGhpcy5pZnJhbWVPYmogPSBpZnJhbWVVdGlscy5jcmVhdGVJZnJhbWUoaWZyYW1lVXJsLCBmdW5jdGlvbihyKSB7XG4gICAgZGVidWcoJ2VyciBjYWxsYmFjaycpO1xuICAgIHNlbGYuZW1pdCgnY2xvc2UnLCAxMDA2LCAnVW5hYmxlIHRvIGxvYWQgYW4gaWZyYW1lICgnICsgciArICcpJyk7XG4gICAgc2VsZi5jbG9zZSgpO1xuICB9KTtcblxuICB0aGlzLm9ubWVzc2FnZUNhbGxiYWNrID0gdGhpcy5fbWVzc2FnZS5iaW5kKHRoaXMpO1xuICBldmVudFV0aWxzLmF0dGFjaEV2ZW50KCdtZXNzYWdlJywgdGhpcy5vbm1lc3NhZ2VDYWxsYmFjayk7XG59XG5cbmluaGVyaXRzKElmcmFtZVRyYW5zcG9ydCwgRXZlbnRFbWl0dGVyKTtcblxuSWZyYW1lVHJhbnNwb3J0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnY2xvc2UnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgaWYgKHRoaXMuaWZyYW1lT2JqKSB7XG4gICAgZXZlbnRVdGlscy5kZXRhY2hFdmVudCgnbWVzc2FnZScsIHRoaXMub25tZXNzYWdlQ2FsbGJhY2spO1xuICAgIHRyeSB7XG4gICAgICAvLyBXaGVuIHRoZSBpZnJhbWUgaXMgbm90IGxvYWRlZCwgSUUgcmFpc2VzIGFuIGV4Y2VwdGlvblxuICAgICAgLy8gb24gJ2NvbnRlbnRXaW5kb3cnLlxuICAgICAgdGhpcy5wb3N0TWVzc2FnZSgnYycpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gICAgdGhpcy5pZnJhbWVPYmouY2xlYW51cCgpO1xuICAgIHRoaXMuaWZyYW1lT2JqID0gbnVsbDtcbiAgICB0aGlzLm9ubWVzc2FnZUNhbGxiYWNrID0gdGhpcy5pZnJhbWVPYmogPSBudWxsO1xuICB9XG59O1xuXG5JZnJhbWVUcmFuc3BvcnQucHJvdG90eXBlLl9tZXNzYWdlID0gZnVuY3Rpb24oZSkge1xuICBkZWJ1ZygnbWVzc2FnZScsIGUuZGF0YSk7XG4gIGlmICghdXJsVXRpbHMuaXNPcmlnaW5FcXVhbChlLm9yaWdpbiwgdGhpcy5vcmlnaW4pKSB7XG4gICAgZGVidWcoJ25vdCBzYW1lIG9yaWdpbicsIGUub3JpZ2luLCB0aGlzLm9yaWdpbik7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIGlmcmFtZU1lc3NhZ2U7XG4gIHRyeSB7XG4gICAgaWZyYW1lTWVzc2FnZSA9IEpTT04zLnBhcnNlKGUuZGF0YSk7XG4gIH0gY2F0Y2ggKGlnbm9yZWQpIHtcbiAgICBkZWJ1ZygnYmFkIGpzb24nLCBlLmRhdGEpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpZnJhbWVNZXNzYWdlLndpbmRvd0lkICE9PSB0aGlzLndpbmRvd0lkKSB7XG4gICAgZGVidWcoJ21pc21hdGNoZWQgd2luZG93IGlkJywgaWZyYW1lTWVzc2FnZS53aW5kb3dJZCwgdGhpcy53aW5kb3dJZCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgc3dpdGNoIChpZnJhbWVNZXNzYWdlLnR5cGUpIHtcbiAgY2FzZSAncyc6XG4gICAgdGhpcy5pZnJhbWVPYmoubG9hZGVkKCk7XG4gICAgLy8gd2luZG93IGdsb2JhbCBkZXBlbmRlbmN5XG4gICAgdGhpcy5wb3N0TWVzc2FnZSgncycsIEpTT04zLnN0cmluZ2lmeShbXG4gICAgICB2ZXJzaW9uXG4gICAgLCB0aGlzLnRyYW5zcG9ydFxuICAgICwgdGhpcy50cmFuc1VybFxuICAgICwgdGhpcy5iYXNlVXJsXG4gICAgXSkpO1xuICAgIGJyZWFrO1xuICBjYXNlICd0JzpcbiAgICB0aGlzLmVtaXQoJ21lc3NhZ2UnLCBpZnJhbWVNZXNzYWdlLmRhdGEpO1xuICAgIGJyZWFrO1xuICBjYXNlICdjJzpcbiAgICB2YXIgY2RhdGE7XG4gICAgdHJ5IHtcbiAgICAgIGNkYXRhID0gSlNPTjMucGFyc2UoaWZyYW1lTWVzc2FnZS5kYXRhKTtcbiAgICB9IGNhdGNoIChpZ25vcmVkKSB7XG4gICAgICBkZWJ1ZygnYmFkIGpzb24nLCBpZnJhbWVNZXNzYWdlLmRhdGEpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmVtaXQoJ2Nsb3NlJywgY2RhdGFbMF0sIGNkYXRhWzFdKTtcbiAgICB0aGlzLmNsb3NlKCk7XG4gICAgYnJlYWs7XG4gIH1cbn07XG5cbklmcmFtZVRyYW5zcG9ydC5wcm90b3R5cGUucG9zdE1lc3NhZ2UgPSBmdW5jdGlvbih0eXBlLCBkYXRhKSB7XG4gIGRlYnVnKCdwb3N0TWVzc2FnZScsIHR5cGUsIGRhdGEpO1xuICB0aGlzLmlmcmFtZU9iai5wb3N0KEpTT04zLnN0cmluZ2lmeSh7XG4gICAgd2luZG93SWQ6IHRoaXMud2luZG93SWRcbiAgLCB0eXBlOiB0eXBlXG4gICwgZGF0YTogZGF0YSB8fCAnJ1xuICB9KSwgdGhpcy5vcmlnaW4pO1xufTtcblxuSWZyYW1lVHJhbnNwb3J0LnByb3RvdHlwZS5zZW5kID0gZnVuY3Rpb24obWVzc2FnZSkge1xuICBkZWJ1Zygnc2VuZCcsIG1lc3NhZ2UpO1xuICB0aGlzLnBvc3RNZXNzYWdlKCdtJywgbWVzc2FnZSk7XG59O1xuXG5JZnJhbWVUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gaWZyYW1lVXRpbHMuaWZyYW1lRW5hYmxlZDtcbn07XG5cbklmcmFtZVRyYW5zcG9ydC50cmFuc3BvcnROYW1lID0gJ2lmcmFtZSc7XG5JZnJhbWVUcmFuc3BvcnQucm91bmRUcmlwcyA9IDI7XG5cbm1vZHVsZS5leHBvcnRzID0gSWZyYW1lVHJhbnNwb3J0O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC9pZnJhbWUuanNcbiAqKiBtb2R1bGUgaWQgPSAzMFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\nvar inherits = __webpack_require__(1)\n  , urlUtils = __webpack_require__(5)\n  , BufferedSender = __webpack_require__(65)\n  , Polling = __webpack_require__(66)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:sender-receiver');\n}\n\nfunction SenderReceiver(transUrl, urlSuffix, senderFunc, Receiver, AjaxObject) {\n  var pollUrl = urlUtils.addPath(transUrl, urlSuffix);\n  debug(pollUrl);\n  var self = this;\n  BufferedSender.call(this, transUrl, senderFunc);\n\n  this.poll = new Polling(Receiver, pollUrl, AjaxObject);\n  this.poll.on('message', function(msg) {\n    debug('poll message', msg);\n    self.emit('message', msg);\n  });\n  this.poll.once('close', function(code, reason) {\n    debug('poll close', code, reason);\n    self.poll = null;\n    self.emit('close', code, reason);\n    self.close();\n  });\n}\n\ninherits(SenderReceiver, BufferedSender);\n\nSenderReceiver.prototype.close = function() {\n  debug('close');\n  this.removeAllListeners();\n  if (this.poll) {\n    this.poll.abort();\n    this.poll = null;\n  }\n  this.stop();\n};\n\nmodule.exports = SenderReceiver;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvbGliL3NlbmRlci1yZWNlaXZlci5qcz9jODNlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIzMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIHVybFV0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvdXJsJylcbiAgLCBCdWZmZXJlZFNlbmRlciA9IHJlcXVpcmUoJy4vYnVmZmVyZWQtc2VuZGVyJylcbiAgLCBQb2xsaW5nID0gcmVxdWlyZSgnLi9wb2xsaW5nJylcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OnNlbmRlci1yZWNlaXZlcicpO1xufVxuXG5mdW5jdGlvbiBTZW5kZXJSZWNlaXZlcih0cmFuc1VybCwgdXJsU3VmZml4LCBzZW5kZXJGdW5jLCBSZWNlaXZlciwgQWpheE9iamVjdCkge1xuICB2YXIgcG9sbFVybCA9IHVybFV0aWxzLmFkZFBhdGgodHJhbnNVcmwsIHVybFN1ZmZpeCk7XG4gIGRlYnVnKHBvbGxVcmwpO1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIEJ1ZmZlcmVkU2VuZGVyLmNhbGwodGhpcywgdHJhbnNVcmwsIHNlbmRlckZ1bmMpO1xuXG4gIHRoaXMucG9sbCA9IG5ldyBQb2xsaW5nKFJlY2VpdmVyLCBwb2xsVXJsLCBBamF4T2JqZWN0KTtcbiAgdGhpcy5wb2xsLm9uKCdtZXNzYWdlJywgZnVuY3Rpb24obXNnKSB7XG4gICAgZGVidWcoJ3BvbGwgbWVzc2FnZScsIG1zZyk7XG4gICAgc2VsZi5lbWl0KCdtZXNzYWdlJywgbXNnKTtcbiAgfSk7XG4gIHRoaXMucG9sbC5vbmNlKCdjbG9zZScsIGZ1bmN0aW9uKGNvZGUsIHJlYXNvbikge1xuICAgIGRlYnVnKCdwb2xsIGNsb3NlJywgY29kZSwgcmVhc29uKTtcbiAgICBzZWxmLnBvbGwgPSBudWxsO1xuICAgIHNlbGYuZW1pdCgnY2xvc2UnLCBjb2RlLCByZWFzb24pO1xuICAgIHNlbGYuY2xvc2UoKTtcbiAgfSk7XG59XG5cbmluaGVyaXRzKFNlbmRlclJlY2VpdmVyLCBCdWZmZXJlZFNlbmRlcik7XG5cblNlbmRlclJlY2VpdmVyLnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnY2xvc2UnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgaWYgKHRoaXMucG9sbCkge1xuICAgIHRoaXMucG9sbC5hYm9ydCgpO1xuICAgIHRoaXMucG9sbCA9IG51bGw7XG4gIH1cbiAgdGhpcy5zdG9wKCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNlbmRlclJlY2VpdmVyO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC9saWIvc2VuZGVyLXJlY2VpdmVyLmpzXG4gKiogbW9kdWxlIGlkID0gMzFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar inherits = __webpack_require__(1)\n  , AjaxBasedTransport = __webpack_require__(8)\n  , XhrReceiver = __webpack_require__(13)\n  , XDRObject = __webpack_require__(18)\n  ;\n\n// According to:\n//   http://stackoverflow.com/questions/1641507/detect-browser-support-for-cross-domain-xmlhttprequests\n//   http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/\n\nfunction XdrStreamingTransport(transUrl) {\n  if (!XDRObject.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n  AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XDRObject);\n}\n\ninherits(XdrStreamingTransport, AjaxBasedTransport);\n\nXdrStreamingTransport.enabled = function(info) {\n  if (info.cookie_needed || info.nullOrigin) {\n    return false;\n  }\n  return XDRObject.enabled && info.sameScheme;\n};\n\nXdrStreamingTransport.transportName = 'xdr-streaming';\nXdrStreamingTransport.roundTrips = 2; // preflight, ajax\n\nmodule.exports = XdrStreamingTransport;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQveGRyLXN0cmVhbWluZy5qcz84ZTc2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxxQ0FBcUM7O0FBRXJDIiwiZmlsZSI6IjMyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgQWpheEJhc2VkVHJhbnNwb3J0ID0gcmVxdWlyZSgnLi9saWIvYWpheC1iYXNlZCcpXG4gICwgWGhyUmVjZWl2ZXIgPSByZXF1aXJlKCcuL3JlY2VpdmVyL3hocicpXG4gICwgWERST2JqZWN0ID0gcmVxdWlyZSgnLi9zZW5kZXIveGRyJylcbiAgO1xuXG4vLyBBY2NvcmRpbmcgdG86XG4vLyAgIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTY0MTUwNy9kZXRlY3QtYnJvd3Nlci1zdXBwb3J0LWZvci1jcm9zcy1kb21haW4teG1saHR0cHJlcXVlc3RzXG4vLyAgIGh0dHA6Ly9oYWNrcy5tb3ppbGxhLm9yZy8yMDA5LzA3L2Nyb3NzLXNpdGUteG1saHR0cHJlcXVlc3Qtd2l0aC1jb3JzL1xuXG5mdW5jdGlvbiBYZHJTdHJlYW1pbmdUcmFuc3BvcnQodHJhbnNVcmwpIHtcbiAgaWYgKCFYRFJPYmplY3QuZW5hYmxlZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignVHJhbnNwb3J0IGNyZWF0ZWQgd2hlbiBkaXNhYmxlZCcpO1xuICB9XG4gIEFqYXhCYXNlZFRyYW5zcG9ydC5jYWxsKHRoaXMsIHRyYW5zVXJsLCAnL3hocl9zdHJlYW1pbmcnLCBYaHJSZWNlaXZlciwgWERST2JqZWN0KTtcbn1cblxuaW5oZXJpdHMoWGRyU3RyZWFtaW5nVHJhbnNwb3J0LCBBamF4QmFzZWRUcmFuc3BvcnQpO1xuXG5YZHJTdHJlYW1pbmdUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKGluZm8pIHtcbiAgaWYgKGluZm8uY29va2llX25lZWRlZCB8fCBpbmZvLm51bGxPcmlnaW4pIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIFhEUk9iamVjdC5lbmFibGVkICYmIGluZm8uc2FtZVNjaGVtZTtcbn07XG5cblhkclN0cmVhbWluZ1RyYW5zcG9ydC50cmFuc3BvcnROYW1lID0gJ3hkci1zdHJlYW1pbmcnO1xuWGRyU3RyZWFtaW5nVHJhbnNwb3J0LnJvdW5kVHJpcHMgPSAyOyAvLyBwcmVmbGlnaHQsIGFqYXhcblxubW9kdWxlLmV4cG9ydHMgPSBYZHJTdHJlYW1pbmdUcmFuc3BvcnQ7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3hkci1zdHJlYW1pbmcuanNcbiAqKiBtb2R1bGUgaWQgPSAzMlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar inherits = __webpack_require__(1)\n  , AjaxBasedTransport = __webpack_require__(8)\n  , XhrReceiver = __webpack_require__(13)\n  , XHRCorsObject = __webpack_require__(14)\n  , XHRLocalObject = __webpack_require__(10)\n  ;\n\nfunction XhrPollingTransport(transUrl) {\n  if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n  AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XHRCorsObject);\n}\n\ninherits(XhrPollingTransport, AjaxBasedTransport);\n\nXhrPollingTransport.enabled = function(info) {\n  if (info.nullOrigin) {\n    return false;\n  }\n\n  if (XHRLocalObject.enabled && info.sameOrigin) {\n    return true;\n  }\n  return XHRCorsObject.enabled;\n};\n\nXhrPollingTransport.transportName = 'xhr-polling';\nXhrPollingTransport.roundTrips = 2; // preflight, ajax\n\nmodule.exports = XhrPollingTransport;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQveGhyLXBvbGxpbmcuanM/NjZiZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUM7O0FBRW5DIiwiZmlsZSI6IjMzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgQWpheEJhc2VkVHJhbnNwb3J0ID0gcmVxdWlyZSgnLi9saWIvYWpheC1iYXNlZCcpXG4gICwgWGhyUmVjZWl2ZXIgPSByZXF1aXJlKCcuL3JlY2VpdmVyL3hocicpXG4gICwgWEhSQ29yc09iamVjdCA9IHJlcXVpcmUoJy4vc2VuZGVyL3hoci1jb3JzJylcbiAgLCBYSFJMb2NhbE9iamVjdCA9IHJlcXVpcmUoJy4vc2VuZGVyL3hoci1sb2NhbCcpXG4gIDtcblxuZnVuY3Rpb24gWGhyUG9sbGluZ1RyYW5zcG9ydCh0cmFuc1VybCkge1xuICBpZiAoIVhIUkxvY2FsT2JqZWN0LmVuYWJsZWQgJiYgIVhIUkNvcnNPYmplY3QuZW5hYmxlZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignVHJhbnNwb3J0IGNyZWF0ZWQgd2hlbiBkaXNhYmxlZCcpO1xuICB9XG4gIEFqYXhCYXNlZFRyYW5zcG9ydC5jYWxsKHRoaXMsIHRyYW5zVXJsLCAnL3hocicsIFhoclJlY2VpdmVyLCBYSFJDb3JzT2JqZWN0KTtcbn1cblxuaW5oZXJpdHMoWGhyUG9sbGluZ1RyYW5zcG9ydCwgQWpheEJhc2VkVHJhbnNwb3J0KTtcblxuWGhyUG9sbGluZ1RyYW5zcG9ydC5lbmFibGVkID0gZnVuY3Rpb24oaW5mbykge1xuICBpZiAoaW5mby5udWxsT3JpZ2luKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKFhIUkxvY2FsT2JqZWN0LmVuYWJsZWQgJiYgaW5mby5zYW1lT3JpZ2luKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgcmV0dXJuIFhIUkNvcnNPYmplY3QuZW5hYmxlZDtcbn07XG5cblhoclBvbGxpbmdUcmFuc3BvcnQudHJhbnNwb3J0TmFtZSA9ICd4aHItcG9sbGluZyc7XG5YaHJQb2xsaW5nVHJhbnNwb3J0LnJvdW5kVHJpcHMgPSAyOyAvLyBwcmVmbGlnaHQsIGFqYXhcblxubW9kdWxlLmV4cG9ydHMgPSBYaHJQb2xsaW5nVHJhbnNwb3J0O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC94aHItcG9sbGluZy5qc1xuICoqIG1vZHVsZSBpZCA9IDMzXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports){eval("module.exports = '1.0.3';//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi92ZXJzaW9uLmpzPzY3ZGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9ICcxLjAuMyc7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL3ZlcnNpb24uanNcbiAqKiBtb2R1bGUgaWQgPSAzNFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports){eval("module.exports = function(module) {\r\n	if(!module.webpackPolyfill) {\r\n		module.deprecate = function() {};\r\n		module.paths = [];\r\n		// module.parent = undefined by default\r\n		module.children = [];\r\n		module.webpackPolyfill = 1;\r\n	}\r\n	return module;\r\n}\r\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzP2MzYzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xyXG5cdGlmKCFtb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XHJcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcclxuXHRcdG1vZHVsZS5wYXRocyA9IFtdO1xyXG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XHJcblx0XHRtb2R1bGUuY2hpbGRyZW4gPSBbXTtcclxuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xyXG5cdH1cclxuXHRyZXR1cm4gbW9kdWxlO1xyXG59XHJcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzXG4gKiogbW9kdWxlIGlkID0gMzVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval('\'use strict\';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \'default\': obj }; }\n\n__webpack_require__(49);\n\nvar _vendorPhoenix = __webpack_require__(37);\n\nvar _elmMain = __webpack_require__(39);\n\nvar _elmMain2 = _interopRequireDefault(_elmMain);\n\nvar app = _elmMain2[\'default\'].embed(_elmMain2[\'default\'].Main, document.getElementById(\'root\'), { jobs: [] });\nvar socket = new _vendorPhoenix.Socket("/socket", { params: { token: window.userToken } });\nvar channel = socket.channel("rooms:lobby", {});\n\nchannel.on("list", function (_ref) {\n    var list = _ref.list;\n    return app.ports.jobs.send(list);\n});\n\nsocket.connect();\n\nchannel.join().receive("ok", function (resp) {\n    return console.log("Joined successfully", resp);\n}).receive("error", function (resp) {\n    return console.log("Unable to join", resp);\n});//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi93ZWIvc3RhdGljL2pzL2J1bmRsZS5qcz9lNGFlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7b0JBQU8sRUFBcUI7O3lDQUVQLEVBQWtCOzttQ0FDdkIsRUFBZ0I7Ozs7QUFFaEMsSUFBTSxHQUFHLEdBQUcscUJBQUksS0FBSyxDQUFDLHFCQUFJLElBQUksRUFBRSxRQUFRLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDL0UsSUFBTSxNQUFNLEdBQUcsMEJBQVcsU0FBUyxFQUFFLEVBQUMsTUFBTSxFQUFFLEVBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxTQUFTLEVBQUMsRUFBQyxDQUFDLENBQUM7QUFDMUUsSUFBTSxPQUFPLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsRUFBRSxDQUFDLENBQUM7O0FBRWxELE9BQU8sQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLFVBQUMsSUFBUTtRQUFOLElBQUksR0FBTixJQUFRLENBQU4sSUFBSTtXQUFPLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7Q0FBQSxDQUFDLENBQUM7O0FBRTVELE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQzs7QUFFakIsT0FBTyxDQUFDLElBQUksRUFBRSxDQUNULE9BQU8sQ0FBQyxJQUFJLEVBQUUsY0FBSTtXQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLEVBQUUsSUFBSSxDQUFDO0NBQUEsQ0FBQyxDQUMvRCxPQUFPLENBQUMsT0FBTyxFQUFFLGNBQUk7V0FBSSxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFFLElBQUksQ0FBQztDQUFBLENBQUMiLCJmaWxlIjoiMzYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4uL3N0eWxlcy9tYWluLnNjc3MnXG5cbmltcG9ydCB7U29ja2V0fSBmcm9tICcuL3ZlbmRvci9waG9lbml4J1xuaW1wb3J0IEVsbSBmcm9tICcuLi8uLi9lbG0vTWFpbidcblxuY29uc3QgYXBwID0gRWxtLmVtYmVkKEVsbS5NYWluLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpLCB7IGpvYnM6IFtdIH0pO1xuY29uc3Qgc29ja2V0ID0gbmV3IFNvY2tldChcIi9zb2NrZXRcIiwge3BhcmFtczoge3Rva2VuOiB3aW5kb3cudXNlclRva2VufX0pO1xuY29uc3QgY2hhbm5lbCA9IHNvY2tldC5jaGFubmVsKFwicm9vbXM6bG9iYnlcIiwge30pO1xuXG5jaGFubmVsLm9uKFwibGlzdFwiLCAoeyBsaXN0IH0pID0+IGFwcC5wb3J0cy5qb2JzLnNlbmQobGlzdCkpO1xuXG5zb2NrZXQuY29ubmVjdCgpO1xuXG5jaGFubmVsLmpvaW4oKVxuICAgIC5yZWNlaXZlKFwib2tcIiwgcmVzcCA9PiBjb25zb2xlLmxvZyhcIkpvaW5lZCBzdWNjZXNzZnVsbHlcIiwgcmVzcCkpXG4gICAgLnJlY2VpdmUoXCJlcnJvclwiLCByZXNwID0+IGNvbnNvbGUubG9nKFwiVW5hYmxlIHRvIGpvaW5cIiwgcmVzcCkpO1xuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vd2ViL3N0YXRpYy9qcy9idW5kbGUuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports){eval('// Phoenix Channels JavaScript client\n//\n// ## Socket Connection\n//\n// A single connection is established to the server and\n// channels are mulitplexed over the connection.\n// Connect to the server using the `Socket` class:\n//\n//     let socket = new Socket("/ws", {params: {userToken: "123"}})\n//     socket.connect()\n//\n// The `Socket` constructor takes the mount point of the socket,\n// the authentication params, as well as options that can be found in\n// the Socket docs, such as configuring the `LongPoll` transport, and\n// heartbeat.\n//\n// ## Channels\n//\n// Channels are isolated, concurrent processes on the server that\n// subscribe to topics and broker events between the client and server.\n// To join a channel, you must provide the topic, and channel params for\n// authorization. Here\'s an example chat room example where `"new_msg"`\n// events are listened for, messages are pushed to the server, and\n// the channel is joined with ok/error/timeout matches:\n//\n//     let channel = socket.channel("rooms:123", {token: roomToken})\n//     channel.on("new_msg", msg => console.log("Got message", msg) )\n//     $input.onEnter( e => {\n//       channel.push("new_msg", {body: e.target.val}, 10000)\n//        .receive("ok", (msg) => console.log("created message", msg) )\n//        .receive("error", (reasons) => console.log("create failed", reasons) )\n//        .receive("timeout", () => console.log("Networking issue...") )\n//     })\n//     channel.join()\n//       .receive("ok", ({messages}) => console.log("catching up", messages) )\n//       .receive("error", ({reason}) => console.log("failed join", reason) )\n//       .receive("timeout", () => console.log("Networking issue. Still waiting...") )\n//\n//\n// ## Joining\n//\n// Joining a channel with `channel.join(topic, params)`, binds the params to\n// `channel.params`. Subsequent rejoins will send up the modified params for\n// updating authorization params, or passing up last_message_id information.\n// Successful joins receive an "ok" status, while unsuccessful joins\n// receive "error".\n//\n//\n// ## Pushing Messages\n//\n// From the previous example, we can see that pushing messages to the server\n// can be done with `channel.push(eventName, payload)` and we can optionally\n// receive responses from the push. Additionally, we can use\n// `receive("timeout", callback)` to abort waiting for our other `receive` hooks\n//  and take action after some period of waiting.\n//\n//\n// ## Socket Hooks\n//\n// Lifecycle events of the multiplexed connection can be hooked into via\n// `socket.onError()` and `socket.onClose()` events, ie:\n//\n//     socket.onError( () => console.log("there was an error with the connection!") )\n//     socket.onClose( () => console.log("the connection dropped") )\n//\n//\n// ## Channel Hooks\n//\n// For each joined channel, you can bind to `onError` and `onClose` events\n// to monitor the channel lifecycle, ie:\n//\n//     channel.onError( () => console.log("there was an error!") )\n//     channel.onClose( () => console.log("the channel has gone away gracefully") )\n//\n// ### onError hooks\n//\n// `onError` hooks are invoked if the socket connection drops, or the channel\n// crashes on the server. In either case, a channel rejoin is attemtped\n// automatically in an exponential backoff manner.\n//\n// ### onClose hooks\n//\n// `onClose` hooks are invoked only in two cases. 1) the channel explicitly\n// closed on the server, or 2). The client explicitly closed, by calling\n// `channel.leave()`\n//\n\n"use strict";\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar VSN = "1.0.0";\nvar SOCKET_STATES = { connecting: 0, open: 1, closing: 2, closed: 3 };\nvar DEFAULT_TIMEOUT = 10000;\nvar CHANNEL_STATES = {\n    closed: "closed",\n    errored: "errored",\n    joined: "joined",\n    joining: "joining"\n};\nvar CHANNEL_EVENTS = {\n    close: "phx_close",\n    error: "phx_error",\n    join: "phx_join",\n    reply: "phx_reply",\n    leave: "phx_leave"\n};\nvar TRANSPORTS = {\n    longpoll: "longpoll",\n    websocket: "websocket"\n};\n\nvar Push = (function () {\n\n    // Initializes the Push\n    //\n    // channel - The Channel\n    // event - The event, for example `"phx_join"`\n    // payload - The payload, for example `{user_id: 123}`\n    // timeout - The push timeout in milliseconds\n    //\n\n    function Push(channel, event, payload, timeout) {\n        _classCallCheck(this, Push);\n\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload || {};\n        this.receivedResp = null;\n        this.timeout = timeout;\n        this.timeoutTimer = null;\n        this.recHooks = [];\n        this.sent = false;\n    }\n\n    _createClass(Push, [{\n        key: "resend",\n        value: function resend(timeout) {\n            this.timeout = timeout;\n            this.cancelRefEvent();\n            this.ref = null;\n            this.refEvent = null;\n            this.receivedResp = null;\n            this.sent = false;\n            this.send();\n        }\n    }, {\n        key: "send",\n        value: function send() {\n            if (this.hasReceived("timeout")) {\n                return;\n            }\n            this.startTimeout();\n            this.sent = true;\n            this.channel.socket.push({\n                topic: this.channel.topic,\n                event: this.event,\n                payload: this.payload,\n                ref: this.ref\n            });\n        }\n    }, {\n        key: "receive",\n        value: function receive(status, callback) {\n            if (this.hasReceived(status)) {\n                callback(this.receivedResp.response);\n            }\n\n            this.recHooks.push({ status: status, callback: callback });\n            return this;\n        }\n\n        // private\n\n    }, {\n        key: "matchReceive",\n        value: function matchReceive(_ref) {\n            var status = _ref.status;\n            var response = _ref.response;\n            var ref = _ref.ref;\n\n            this.recHooks.filter(function (h) {\n                return h.status === status;\n            }).forEach(function (h) {\n                return h.callback(response);\n            });\n        }\n    }, {\n        key: "cancelRefEvent",\n        value: function cancelRefEvent() {\n            if (!this.refEvent) {\n                return;\n            }\n            this.channel.off(this.refEvent);\n        }\n    }, {\n        key: "cancelTimeout",\n        value: function cancelTimeout() {\n            clearTimeout(this.timeoutTimer);\n            this.timeoutTimer = null;\n        }\n    }, {\n        key: "startTimeout",\n        value: function startTimeout() {\n            var _this = this;\n\n            if (this.timeoutTimer) {\n                return;\n            }\n            this.ref = this.channel.socket.makeRef();\n            this.refEvent = this.channel.replyEventName(this.ref);\n\n            this.channel.on(this.refEvent, function (payload) {\n                _this.cancelRefEvent();\n                _this.cancelTimeout();\n                _this.receivedResp = payload;\n                _this.matchReceive(payload);\n            });\n\n            this.timeoutTimer = setTimeout(function () {\n                _this.trigger("timeout", {});\n            }, this.timeout);\n        }\n    }, {\n        key: "hasReceived",\n        value: function hasReceived(status) {\n            return this.receivedResp && this.receivedResp.status === status;\n        }\n    }, {\n        key: "trigger",\n        value: function trigger(status, response) {\n            this.channel.trigger(this.refEvent, { status: status, response: response });\n        }\n    }]);\n\n    return Push;\n})();\n\nvar Channel = (function () {\n    function Channel(topic, params, socket) {\n        var _this2 = this;\n\n        _classCallCheck(this, Channel);\n\n        this.state = CHANNEL_STATES.closed;\n        this.topic = topic;\n        this.params = params || {};\n        this.socket = socket;\n        this.bindings = [];\n        this.timeout = this.socket.timeout;\n        this.joinedOnce = false;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.pushBuffer = [];\n        this.rejoinTimer = new Timer(function () {\n            return _this2.rejoinUntilConnected();\n        }, this.socket.reconnectAfterMs);\n        this.joinPush.receive("ok", function () {\n            _this2.state = CHANNEL_STATES.joined;\n            _this2.rejoinTimer.reset();\n            _this2.pushBuffer.forEach(function (pushEvent) {\n                return pushEvent.send();\n            });\n            _this2.pushBuffer = [];\n        });\n        this.onClose(function () {\n            _this2.socket.log("channel", "close " + _this2.topic);\n            _this2.state = CHANNEL_STATES.closed;\n            _this2.socket.remove(_this2);\n        });\n        this.onError(function (reason) {\n            _this2.socket.log("channel", "error " + _this2.topic, reason);\n            _this2.state = CHANNEL_STATES.errored;\n            _this2.rejoinTimer.setTimeout();\n        });\n        this.joinPush.receive("timeout", function () {\n            if (_this2.state !== CHANNEL_STATES.joining) {\n                return;\n            }\n\n            _this2.socket.log("channel", "timeout " + _this2.topic, reason);\n            _this2.state = CHANNEL_STATES.errored;\n            _this2.rejoinTimer.setTimeout();\n        });\n        this.on(CHANNEL_EVENTS.reply, function (payload, ref) {\n            _this2.trigger(_this2.replyEventName(ref), payload);\n        });\n    }\n\n    _createClass(Channel, [{\n        key: "rejoinUntilConnected",\n        value: function rejoinUntilConnected() {\n            this.rejoinTimer.setTimeout();\n            if (this.socket.isConnected()) {\n                this.rejoin();\n            }\n        }\n    }, {\n        key: "join",\n        value: function join() {\n            var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n\n            if (this.joinedOnce) {\n                throw "tried to join multiple times. \'join\' can only be called a single time per channel instance";\n            } else {\n                this.joinedOnce = true;\n            }\n            this.rejoin(timeout);\n            return this.joinPush;\n        }\n    }, {\n        key: "onClose",\n        value: function onClose(callback) {\n            this.on(CHANNEL_EVENTS.close, callback);\n        }\n    }, {\n        key: "onError",\n        value: function onError(callback) {\n            this.on(CHANNEL_EVENTS.error, function (reason) {\n                return callback(reason);\n            });\n        }\n    }, {\n        key: "on",\n        value: function on(event, callback) {\n            this.bindings.push({ event: event, callback: callback });\n        }\n    }, {\n        key: "off",\n        value: function off(event) {\n            this.bindings = this.bindings.filter(function (bind) {\n                return bind.event !== event;\n            });\n        }\n    }, {\n        key: "canPush",\n        value: function canPush() {\n            return this.socket.isConnected() && this.state === CHANNEL_STATES.joined;\n        }\n    }, {\n        key: "push",\n        value: function push(event, payload) {\n            var timeout = arguments.length <= 2 || arguments[2] === undefined ? this.timeout : arguments[2];\n\n            if (!this.joinedOnce) {\n                throw "tried to push \'" + event + "\' to \'" + this.topic + "\' before joining. Use channel.join() before pushing events";\n            }\n            var pushEvent = new Push(this, event, payload, timeout);\n            if (this.canPush()) {\n                pushEvent.send();\n            } else {\n                pushEvent.startTimeout();\n                this.pushBuffer.push(pushEvent);\n            }\n\n            return pushEvent;\n        }\n\n        // Leaves the channel\n        //\n        // Unsubscribes from server events, and\n        // instructs channel to terminate on server\n        //\n        // Triggers onClose() hooks\n        //\n        // To receive leave acknowledgements, use the a `receive`\n        // hook to bind to the server ack, ie:\n        //\n        //     channel.leave().receive("ok", () => alert("left!") )\n        //\n    }, {\n        key: "leave",\n        value: function leave() {\n            var _this3 = this;\n\n            var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n\n            var onClose = function onClose() {\n                _this3.socket.log("channel", "leave " + _this3.topic);\n                _this3.trigger(CHANNEL_EVENTS.close, "leave");\n            };\n            var leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n            leavePush.receive("ok", function () {\n                return onClose();\n            }).receive("timeout", function () {\n                return onClose();\n            });\n            leavePush.send();\n            if (!this.canPush()) {\n                leavePush.trigger("ok", {});\n            }\n\n            return leavePush;\n        }\n\n        // Overridable message hook\n        //\n        // Receives all events for specialized message handling\n    }, {\n        key: "onMessage",\n        value: function onMessage(event, payload, ref) {}\n\n        // private\n\n    }, {\n        key: "isMember",\n        value: function isMember(topic) {\n            return this.topic === topic;\n        }\n    }, {\n        key: "sendJoin",\n        value: function sendJoin(timeout) {\n            this.state = CHANNEL_STATES.joining;\n            this.joinPush.resend(timeout);\n        }\n    }, {\n        key: "rejoin",\n        value: function rejoin() {\n            var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n            this.sendJoin(timeout);\n        }\n    }, {\n        key: "trigger",\n        value: function trigger(triggerEvent, payload, ref) {\n            this.onMessage(triggerEvent, payload, ref);\n            this.bindings.filter(function (bind) {\n                return bind.event === triggerEvent;\n            }).map(function (bind) {\n                return bind.callback(payload, ref);\n            });\n        }\n    }, {\n        key: "replyEventName",\n        value: function replyEventName(ref) {\n            return "chan_reply_" + ref;\n        }\n    }]);\n\n    return Channel;\n})();\n\nexports.Channel = Channel;\n\nvar Socket = (function () {\n\n    // Initializes the Socket\n    //\n    // endPoint - The string WebSocket endpoint, ie, "ws://example.com/ws",\n    //                                               "wss://example.com"\n    //                                               "/ws" (inherited host & protocol)\n    // opts - Optional configuration\n    //   transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n    //               Defaults to WebSocket with automatic LongPoll fallback.\n    //   timeout - The default timeout in milliseconds to trigger push timeouts.\n    //             Defaults `DEFAULT_TIMEOUT`\n    //   heartbeatIntervalMs - The millisec interval to send a heartbeat message\n    //   reconnectAfterMs - The optional function that returns the millsec\n    //                      reconnect interval. Defaults to stepped backoff of:\n    //\n    //     function(tries){\n    //       return [1000, 5000, 10000][tries - 1] || 10000\n    //     }\n    //\n    //   logger - The optional function for specialized logging, ie:\n    //     `logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n    //\n    //   longpollerTimeout - The maximum timeout of a long poll AJAX request.\n    //                        Defaults to 20s (double the server long poll timer).\n    //\n    //   params - The optional params to pass when connecting\n    //\n    // For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n    //\n\n    function Socket(endPoint) {\n        var _this4 = this;\n\n        var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n        _classCallCheck(this, Socket);\n\n        this.stateChangeCallbacks = { open: [], close: [], error: [], message: [] };\n        this.channels = [];\n        this.sendBuffer = [];\n        this.ref = 0;\n        this.timeout = opts.timeout || DEFAULT_TIMEOUT;\n        this.transport = opts.transport || window.WebSocket || LongPoll;\n        this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000;\n        this.reconnectAfterMs = opts.reconnectAfterMs || function (tries) {\n            return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n        };\n        this.logger = opts.logger || function () {}; // noop\n        this.longpollerTimeout = opts.longpollerTimeout || 20000;\n        this.params = opts.params || {};\n        this.endPoint = endPoint + "/" + TRANSPORTS.websocket;\n        this.reconnectTimer = new Timer(function () {\n            _this4.disconnect(function () {\n                return _this4.connect();\n            });\n        }, this.reconnectAfterMs);\n    }\n\n    _createClass(Socket, [{\n        key: "protocol",\n        value: function protocol() {\n            return location.protocol.match(/^https/) ? "wss" : "ws";\n        }\n    }, {\n        key: "endPointURL",\n        value: function endPointURL() {\n            var uri = Ajax.appendParams(Ajax.appendParams(this.endPoint, this.params), { vsn: VSN });\n            if (uri.charAt(0) !== "/") {\n                return uri;\n            }\n            if (uri.charAt(1) === "/") {\n                return this.protocol() + ":" + uri;\n            }\n\n            return this.protocol() + "://" + location.host + uri;\n        }\n    }, {\n        key: "disconnect",\n        value: function disconnect(callback, code, reason) {\n            if (this.conn) {\n                this.conn.onclose = function () {}; // noop\n                if (code) {\n                    this.conn.close(code, reason || "");\n                } else {\n                    this.conn.close();\n                }\n                this.conn = null;\n            }\n            callback && callback();\n        }\n\n        // params - The params to send when connecting, for example `{user_id: userToken}`\n    }, {\n        key: "connect",\n        value: function connect(params) {\n            var _this5 = this;\n\n            if (params) {\n                console && console.log("passing params to connect is deprecated. Instead pass :params to the Socket constructor");\n                this.params = params;\n            }\n            if (this.conn) {\n                return;\n            }\n\n            this.conn = new this.transport(this.endPointURL());\n            this.conn.timeout = this.longpollerTimeout;\n            this.conn.onopen = function () {\n                return _this5.onConnOpen();\n            };\n            this.conn.onerror = function (error) {\n                return _this5.onConnError(error);\n            };\n            this.conn.onmessage = function (event) {\n                return _this5.onConnMessage(event);\n            };\n            this.conn.onclose = function (event) {\n                return _this5.onConnClose(event);\n            };\n        }\n\n        // Logs the message. Override `this.logger` for specialized logging. noops by default\n    }, {\n        key: "log",\n        value: function log(kind, msg, data) {\n            this.logger(kind, msg, data);\n        }\n\n        // Registers callbacks for connection state change events\n        //\n        // Examples\n        //\n        //    socket.onError(function(error){ alert("An error occurred") })\n        //\n    }, {\n        key: "onOpen",\n        value: function onOpen(callback) {\n            this.stateChangeCallbacks.open.push(callback);\n        }\n    }, {\n        key: "onClose",\n        value: function onClose(callback) {\n            this.stateChangeCallbacks.close.push(callback);\n        }\n    }, {\n        key: "onError",\n        value: function onError(callback) {\n            this.stateChangeCallbacks.error.push(callback);\n        }\n    }, {\n        key: "onMessage",\n        value: function onMessage(callback) {\n            this.stateChangeCallbacks.message.push(callback);\n        }\n    }, {\n        key: "onConnOpen",\n        value: function onConnOpen() {\n            var _this6 = this;\n\n            this.log("transport", "connected to " + this.endPointURL(), this.transport.prototype);\n            this.flushSendBuffer();\n            this.reconnectTimer.reset();\n            if (!this.conn.skipHeartbeat) {\n                clearInterval(this.heartbeatTimer);\n                this.heartbeatTimer = setInterval(function () {\n                    return _this6.sendHeartbeat();\n                }, this.heartbeatIntervalMs);\n            }\n            this.stateChangeCallbacks.open.forEach(function (callback) {\n                return callback();\n            });\n        }\n    }, {\n        key: "onConnClose",\n        value: function onConnClose(event) {\n            this.log("transport", "close", event);\n            this.triggerChanError();\n            clearInterval(this.heartbeatTimer);\n            this.reconnectTimer.setTimeout();\n            this.stateChangeCallbacks.close.forEach(function (callback) {\n                return callback(event);\n            });\n        }\n    }, {\n        key: "onConnError",\n        value: function onConnError(error) {\n            this.log("transport", error);\n            this.triggerChanError();\n            this.stateChangeCallbacks.error.forEach(function (callback) {\n                return callback(error);\n            });\n        }\n    }, {\n        key: "triggerChanError",\n        value: function triggerChanError() {\n            this.channels.forEach(function (channel) {\n                return channel.trigger(CHANNEL_EVENTS.error);\n            });\n        }\n    }, {\n        key: "connectionState",\n        value: function connectionState() {\n            switch (this.conn && this.conn.readyState) {\n                case SOCKET_STATES.connecting:\n                    return "connecting";\n                case SOCKET_STATES.open:\n                    return "open";\n                case SOCKET_STATES.closing:\n                    return "closing";\n                default:\n                    return "closed";\n            }\n        }\n    }, {\n        key: "isConnected",\n        value: function isConnected() {\n            return this.connectionState() === "open";\n        }\n    }, {\n        key: "remove",\n        value: function remove(channel) {\n            this.channels = this.channels.filter(function (c) {\n                return !c.isMember(channel.topic);\n            });\n        }\n    }, {\n        key: "channel",\n        value: function channel(topic) {\n            var chanParams = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n            var chan = new Channel(topic, chanParams, this);\n            this.channels.push(chan);\n            return chan;\n        }\n    }, {\n        key: "push",\n        value: function push(data) {\n            var _this7 = this;\n\n            var topic = data.topic;\n            var event = data.event;\n            var payload = data.payload;\n            var ref = data.ref;\n\n            var callback = function callback() {\n                return _this7.conn.send(JSON.stringify(data));\n            };\n            this.log("push", topic + " " + event + " (" + ref + ")", payload);\n            if (this.isConnected()) {\n                callback();\n            } else {\n                this.sendBuffer.push(callback);\n            }\n        }\n\n        // Return the next message ref, accounting for overflows\n    }, {\n        key: "makeRef",\n        value: function makeRef() {\n            var newRef = this.ref + 1;\n            if (newRef === this.ref) {\n                this.ref = 0;\n            } else {\n                this.ref = newRef;\n            }\n\n            return this.ref.toString();\n        }\n    }, {\n        key: "sendHeartbeat",\n        value: function sendHeartbeat() {\n            if (!this.isConnected()) {\n                return;\n            }\n            this.push({ topic: "phoenix", event: "heartbeat", payload: {}, ref: this.makeRef() });\n        }\n    }, {\n        key: "flushSendBuffer",\n        value: function flushSendBuffer() {\n            if (this.isConnected() && this.sendBuffer.length > 0) {\n                this.sendBuffer.forEach(function (callback) {\n                    return callback();\n                });\n                this.sendBuffer = [];\n            }\n        }\n    }, {\n        key: "onConnMessage",\n        value: function onConnMessage(rawMessage) {\n            var msg = JSON.parse(rawMessage.data);\n            var topic = msg.topic;\n            var event = msg.event;\n            var payload = msg.payload;\n            var ref = msg.ref;\n\n            this.log("receive", (payload.status || "") + " " + topic + " " + event + " " + (ref && "(" + ref + ")" || ""), payload);\n            this.channels.filter(function (channel) {\n                return channel.isMember(topic);\n            }).forEach(function (channel) {\n                return channel.trigger(event, payload, ref);\n            });\n            this.stateChangeCallbacks.message.forEach(function (callback) {\n                return callback(msg);\n            });\n        }\n    }]);\n\n    return Socket;\n})();\n\nexports.Socket = Socket;\n\nvar LongPoll = (function () {\n    function LongPoll(endPoint) {\n        _classCallCheck(this, LongPoll);\n\n        this.endPoint = null;\n        this.token = null;\n        this.skipHeartbeat = true;\n        this.onopen = function () {}; // noop\n        this.onerror = function () {}; // noop\n        this.onmessage = function () {}; // noop\n        this.onclose = function () {}; // noop\n        this.pollEndpoint = this.normalizeEndpoint(endPoint);\n        this.readyState = SOCKET_STATES.connecting;\n\n        this.poll();\n    }\n\n    _createClass(LongPoll, [{\n        key: "normalizeEndpoint",\n        value: function normalizeEndpoint(endPoint) {\n            return endPoint.replace("ws://", "http://").replace("wss://", "https://").replace(new RegExp("(.*)\\/" + TRANSPORTS.websocket), "$1/" + TRANSPORTS.longpoll);\n        }\n    }, {\n        key: "endpointURL",\n        value: function endpointURL() {\n            return Ajax.appendParams(this.pollEndpoint, { token: this.token });\n        }\n    }, {\n        key: "closeAndRetry",\n        value: function closeAndRetry() {\n            this.close();\n            this.readyState = SOCKET_STATES.connecting;\n        }\n    }, {\n        key: "ontimeout",\n        value: function ontimeout() {\n            this.onerror("timeout");\n            this.closeAndRetry();\n        }\n    }, {\n        key: "poll",\n        value: function poll() {\n            var _this8 = this;\n\n            if (!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)) {\n                return;\n            }\n\n            Ajax.request("GET", this.endpointURL(), "application/json", null, this.timeout, this.ontimeout.bind(this), function (resp) {\n                if (resp) {\n                    var status = resp.status;\n                    var token = resp.token;\n                    var messages = resp.messages;\n\n                    _this8.token = token;\n                } else {\n                    var status = 0;\n                }\n\n                switch (status) {\n                    case 200:\n                        messages.forEach(function (msg) {\n                            return _this8.onmessage({ data: JSON.stringify(msg) });\n                        });\n                        _this8.poll();\n                        break;\n                    case 204:\n                        _this8.poll();\n                        break;\n                    case 410:\n                        _this8.readyState = SOCKET_STATES.open;\n                        _this8.onopen();\n                        _this8.poll();\n                        break;\n                    case 0:\n                    case 500:\n                        _this8.onerror();\n                        _this8.closeAndRetry();\n                        break;\n                    default:\n                        throw "unhandled poll status " + status;\n                }\n            });\n        }\n    }, {\n        key: "send",\n        value: function send(body) {\n            var _this9 = this;\n\n            Ajax.request("POST", this.endpointURL(), "application/json", body, this.timeout, this.onerror.bind(this, "timeout"), function (resp) {\n                if (!resp || resp.status !== 200) {\n                    _this9.onerror(status);\n                    _this9.closeAndRetry();\n                }\n            });\n        }\n    }, {\n        key: "close",\n        value: function close(code, reason) {\n            this.readyState = SOCKET_STATES.closed;\n            this.onclose();\n        }\n    }]);\n\n    return LongPoll;\n})();\n\nexports.LongPoll = LongPoll;\n\nvar Ajax = (function () {\n    function Ajax() {\n        _classCallCheck(this, Ajax);\n    }\n\n    _createClass(Ajax, null, [{\n        key: "request",\n        value: function request(method, endPoint, accept, body, timeout, ontimeout, callback) {\n            if (window.XDomainRequest) {\n                var req = new XDomainRequest(); // IE8, IE9\n                this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback);\n            } else {\n                var req = window.XMLHttpRequest ? new XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari\n                new ActiveXObject("Microsoft.XMLHTTP"); // IE6, IE5\n                this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback);\n            }\n        }\n    }, {\n        key: "xdomainRequest",\n        value: function xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback) {\n            var _this10 = this;\n\n            req.timeout = timeout;\n            req.open(method, endPoint);\n            req.onload = function () {\n                var response = _this10.parseJSON(req.responseText);\n                callback && callback(response);\n            };\n            if (ontimeout) {\n                req.ontimeout = ontimeout;\n            }\n\n            // Work around bug in IE9 that requires an attached onprogress handler\n            req.onprogress = function () {};\n\n            req.send(body);\n        }\n    }, {\n        key: "xhrRequest",\n        value: function xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback) {\n            var _this11 = this;\n\n            req.timeout = timeout;\n            req.open(method, endPoint, true);\n            req.setRequestHeader("Content-Type", accept);\n            req.onerror = function () {\n                callback && callback(null);\n            };\n            req.onreadystatechange = function () {\n                if (req.readyState === _this11.states.complete && callback) {\n                    var response = _this11.parseJSON(req.responseText);\n                    callback(response);\n                }\n            };\n            if (ontimeout) {\n                req.ontimeout = ontimeout;\n            }\n\n            req.send(body);\n        }\n    }, {\n        key: "parseJSON",\n        value: function parseJSON(resp) {\n            return resp && resp !== "" ? JSON.parse(resp) : null;\n        }\n    }, {\n        key: "serialize",\n        value: function serialize(obj, parentKey) {\n            var queryStr = [];\n            for (var key in obj) {\n                if (!obj.hasOwnProperty(key)) {\n                    continue;\n                }\n                var paramKey = parentKey ? parentKey + "[" + key + "]" : key;\n                var paramVal = obj[key];\n                if (typeof paramVal === "object") {\n                    queryStr.push(this.serialize(paramVal, paramKey));\n                } else {\n                    queryStr.push(encodeURIComponent(paramKey) + "=" + encodeURIComponent(paramVal));\n                }\n            }\n            return queryStr.join("&");\n        }\n    }, {\n        key: "appendParams",\n        value: function appendParams(url, params) {\n            if (Object.keys(params).length === 0) {\n                return url;\n            }\n\n            var prefix = url.match(/\\?/) ? "&" : "?";\n            return "" + url + prefix + this.serialize(params);\n        }\n    }]);\n\n    return Ajax;\n})();\n\nexports.Ajax = Ajax;\n\nAjax.states = { complete: 4 };\n\n// Creates a timer that accepts a `timerCalc` function to perform\n// calculated timeout retries, such as exponential backoff.\n//\n// ## Examples\n//\n//    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n//      return [1000, 5000, 10000][tries - 1] || 10000\n//    })\n//    reconnectTimer.setTimeout() // fires after 1000\n//    reconnectTimer.setTimeout() // fires after 5000\n//    reconnectTimer.reset()\n//    reconnectTimer.setTimeout() // fires after 1000\n//\n\nvar Timer = (function () {\n    function Timer(callback, timerCalc) {\n        _classCallCheck(this, Timer);\n\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = null;\n        this.tries = 0;\n    }\n\n    _createClass(Timer, [{\n        key: "reset",\n        value: function reset() {\n            this.tries = 0;\n            clearTimeout(this.timer);\n        }\n\n        // Cancels any previous setTimeout and schedules callback\n    }, {\n        key: "setTimeout",\n        value: (function (_setTimeout) {\n            function setTimeout() {\n                return _setTimeout.apply(this, arguments);\n            }\n\n            setTimeout.toString = function () {\n                return _setTimeout.toString();\n            };\n\n            return setTimeout;\n        })(function () {\n            var _this12 = this;\n\n            clearTimeout(this.timer);\n\n            this.timer = setTimeout(function () {\n                _this12.tries = _this12.tries + 1;\n                _this12.callback();\n            }, this.timerCalc(this.tries + 1));\n        })\n    }]);\n\n    return Timer;\n})();//@ sourceMappingURL=data:application/json;base64,');
},function(module,exports){eval('/*\r\n	MIT License http://www.opensource.org/licenses/mit-license.php\r\n	Author Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n	var list = [];\r\n\r\n	// return the list of modules as css string\r\n	list.toString = function toString() {\r\n		var result = [];\r\n		for(var i = 0; i < this.length; i++) {\r\n			var item = this[i];\r\n			if(item[2]) {\r\n				result.push("@media " + item[2] + "{" + item[1] + "}");\r\n			} else {\r\n				result.push(item[1]);\r\n			}\r\n		}\r\n		return result.join("");\r\n	};\r\n\r\n	// import a list of modules into the list\r\n	list.i = function(modules, mediaQuery) {\r\n		if(typeof modules === "string")\r\n			modules = [[null, modules, ""]];\r\n		var alreadyImportedModules = {};\r\n		for(var i = 0; i < this.length; i++) {\r\n			var id = this[i][0];\r\n			if(typeof id === "number")\r\n				alreadyImportedModules[id] = true;\r\n		}\r\n		for(i = 0; i < modules.length; i++) {\r\n			var item = modules[i];\r\n			// skip already imported module\r\n			// this implementation is not 100% perfect for weird media query combinations\r\n			//  when a module is imported multiple times with different media queries.\r\n			//  I hope this will never occur (Hey this way we have smaller bundles)\r\n			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {\r\n				if(mediaQuery && !item[2]) {\r\n					item[2] = mediaQuery;\r\n				} else if(mediaQuery) {\r\n					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";\r\n				}\r\n				list.push(item);\r\n			}\r\n		}\r\n	};\r\n	return list;\r\n};\r\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzP2RhMDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0Esd0NBQXdDLGdCQUFnQjtBQUN4RCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIzOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcclxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXHJcbiovXHJcbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XHJcblx0dmFyIGxpc3QgPSBbXTtcclxuXHJcblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xyXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcclxuXHRcdHZhciByZXN1bHQgPSBbXTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpdGVtID0gdGhpc1tpXTtcclxuXHRcdFx0aWYoaXRlbVsyXSkge1xyXG5cdFx0XHRcdHJlc3VsdC5wdXNoKFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgaXRlbVsxXSArIFwifVwiKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXN1bHQucHVzaChpdGVtWzFdKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHJlc3VsdC5qb2luKFwiXCIpO1xyXG5cdH07XHJcblxyXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XHJcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xyXG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXHJcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcclxuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xyXG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXHJcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xyXG5cdFx0fVxyXG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XHJcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcclxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcclxuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cclxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcclxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcclxuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XHJcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcclxuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xyXG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9O1xyXG5cdHJldHVybiBsaXN0O1xyXG59O1xyXG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1xuICoqIG1vZHVsZSBpZCA9IDM4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports){eval('var Elm = Elm || { Native: {} };\nElm.Native.Basics = {};\nElm.Native.Basics.make = function(localRuntime) {\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.Basics = localRuntime.Native.Basics || {};\n	if (localRuntime.Native.Basics.values)\n	{\n		return localRuntime.Native.Basics.values;\n	}\n\n	var Utils = Elm.Native.Utils.make(localRuntime);\n\n	function div(a, b)\n	{\n		return (a / b) | 0;\n	}\n	function rem(a, b)\n	{\n		return a % b;\n	}\n	function mod(a, b)\n	{\n		if (b === 0)\n		{\n			throw new Error(\'Cannot perform mod 0. Division by zero error.\');\n		}\n		var r = a % b;\n		var m = a === 0 ? 0 : (b > 0 ? (a >= 0 ? r : r + b) : -mod(-a, -b));\n\n		return m === b ? 0 : m;\n	}\n	function logBase(base, n)\n	{\n		return Math.log(n) / Math.log(base);\n	}\n	function negate(n)\n	{\n		return -n;\n	}\n	function abs(n)\n	{\n		return n < 0 ? -n : n;\n	}\n\n	function min(a, b)\n	{\n		return Utils.cmp(a, b) < 0 ? a : b;\n	}\n	function max(a, b)\n	{\n		return Utils.cmp(a, b) > 0 ? a : b;\n	}\n	function clamp(lo, hi, n)\n	{\n		return Utils.cmp(n, lo) < 0 ? lo : Utils.cmp(n, hi) > 0 ? hi : n;\n	}\n\n	function xor(a, b)\n	{\n		return a !== b;\n	}\n	function not(b)\n	{\n		return !b;\n	}\n	function isInfinite(n)\n	{\n		return n === Infinity || n === -Infinity;\n	}\n\n	function truncate(n)\n	{\n		return n | 0;\n	}\n\n	function degrees(d)\n	{\n		return d * Math.PI / 180;\n	}\n	function turns(t)\n	{\n		return 2 * Math.PI * t;\n	}\n	function fromPolar(point)\n	{\n		var r = point._0;\n		var t = point._1;\n		return Utils.Tuple2(r * Math.cos(t), r * Math.sin(t));\n	}\n	function toPolar(point)\n	{\n		var x = point._0;\n		var y = point._1;\n		return Utils.Tuple2(Math.sqrt(x * x + y * y), Math.atan2(y, x));\n	}\n\n	return localRuntime.Native.Basics.values = {\n		div: F2(div),\n		rem: F2(rem),\n		mod: F2(mod),\n\n		pi: Math.PI,\n		e: Math.E,\n		cos: Math.cos,\n		sin: Math.sin,\n		tan: Math.tan,\n		acos: Math.acos,\n		asin: Math.asin,\n		atan: Math.atan,\n		atan2: F2(Math.atan2),\n\n		degrees: degrees,\n		turns: turns,\n		fromPolar: fromPolar,\n		toPolar: toPolar,\n\n		sqrt: Math.sqrt,\n		logBase: F2(logBase),\n		negate: negate,\n		abs: abs,\n		min: F2(min),\n		max: F2(max),\n		clamp: F3(clamp),\n		compare: Utils.compare,\n\n		xor: F2(xor),\n		not: not,\n\n		truncate: truncate,\n		ceiling: Math.ceil,\n		floor: Math.floor,\n		round: Math.round,\n		toFloat: function(x) { return x; },\n		isNaN: isNaN,\n		isInfinite: isInfinite\n	};\n};\n\nElm.Native.Port = {};\n\nElm.Native.Port.make = function(localRuntime) {\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.Port = localRuntime.Native.Port || {};\n	if (localRuntime.Native.Port.values)\n	{\n		return localRuntime.Native.Port.values;\n	}\n\n	var NS;\n\n	// INBOUND\n\n	function inbound(name, type, converter)\n	{\n		if (!localRuntime.argsTracker[name])\n		{\n			throw new Error(\n				\'Port Error:\\n\' +\n				\'No argument was given for the port named \\\'\' + name + \'\\\' with type:\\n\\n\' +\n				\'    \' + type.split(\'\\n\').join(\'\\n        \') + \'\\n\\n\' +\n				\'You need to provide an initial value!\\n\\n\' +\n				\'Find out more about ports here <http://elm-lang.org/learn/Ports.elm>\'\n			);\n		}\n		var arg = localRuntime.argsTracker[name];\n		arg.used = true;\n\n		return jsToElm(name, type, converter, arg.value);\n	}\n\n\n	function inboundSignal(name, type, converter)\n	{\n		var initialValue = inbound(name, type, converter);\n\n		if (!NS)\n		{\n			NS = Elm.Native.Signal.make(localRuntime);\n		}\n		var signal = NS.input(\'inbound-port-\' + name, initialValue);\n\n		function send(jsValue)\n		{\n			var elmValue = jsToElm(name, type, converter, jsValue);\n			setTimeout(function() {\n				localRuntime.notify(signal.id, elmValue);\n			}, 0);\n		}\n\n		localRuntime.ports[name] = { send: send };\n\n		return signal;\n	}\n\n\n	function jsToElm(name, type, converter, value)\n	{\n		try\n		{\n			return converter(value);\n		}\n		catch(e)\n		{\n			throw new Error(\n				\'Port Error:\\n\' +\n				\'Regarding the port named \\\'\' + name + \'\\\' with type:\\n\\n\' +\n				\'    \' + type.split(\'\\n\').join(\'\\n        \') + \'\\n\\n\' +\n				\'You just sent the value:\\n\\n\' +\n				\'    \' + JSON.stringify(value) + \'\\n\\n\' +\n				\'but it cannot be converted to the necessary type.\\n\' +\n				e.message\n			);\n		}\n	}\n\n\n	// OUTBOUND\n\n	function outbound(name, converter, elmValue)\n	{\n		localRuntime.ports[name] = converter(elmValue);\n	}\n\n\n	function outboundSignal(name, converter, signal)\n	{\n		var subscribers = [];\n\n		function subscribe(handler)\n		{\n			subscribers.push(handler);\n		}\n		function unsubscribe(handler)\n		{\n			subscribers.pop(subscribers.indexOf(handler));\n		}\n\n		function notify(elmValue)\n		{\n			var jsValue = converter(elmValue);\n			var len = subscribers.length;\n			for (var i = 0; i < len; ++i)\n			{\n				subscribers[i](jsValue);\n			}\n		}\n\n		if (!NS)\n		{\n			NS = Elm.Native.Signal.make(localRuntime);\n		}\n		NS.output(\'outbound-port-\' + name, notify, signal);\n\n		localRuntime.ports[name] = {\n			subscribe: subscribe,\n			unsubscribe: unsubscribe\n		};\n\n		return signal;\n	}\n\n\n	return localRuntime.Native.Port.values = {\n		inbound: inbound,\n		outbound: outbound,\n		inboundSignal: inboundSignal,\n		outboundSignal: outboundSignal\n	};\n};\n\nif (!Elm.fullscreen) {\n	(function() {\n		\'use strict\';\n\n		var Display = {\n			FULLSCREEN: 0,\n			COMPONENT: 1,\n			NONE: 2\n		};\n\n		Elm.fullscreen = function(module, args)\n		{\n			var container = document.createElement(\'div\');\n			document.body.appendChild(container);\n			return init(Display.FULLSCREEN, container, module, args || {});\n		};\n\n		Elm.embed = function(module, container, args)\n		{\n			var tag = container.tagName;\n			if (tag !== \'DIV\')\n			{\n				throw new Error(\'Elm.node must be given a DIV, not a \' + tag + \'.\');\n			}\n			return init(Display.COMPONENT, container, module, args || {});\n		};\n\n		Elm.worker = function(module, args)\n		{\n			return init(Display.NONE, {}, module, args || {});\n		};\n\n		function init(display, container, module, args, moduleToReplace)\n		{\n			// defining state needed for an instance of the Elm RTS\n			var inputs = [];\n\n			/* OFFSET\n			 * Elm\'s time traveling debugger lets you pause time. This means\n			 * "now" may be shifted a bit into the past. By wrapping Date.now()\n			 * we can manage this.\n			 */\n			var timer = {\n				programStart: Date.now(),\n				now: function()\n				{\n					return Date.now();\n				}\n			};\n\n			var updateInProgress = false;\n			function notify(id, v)\n			{\n				if (updateInProgress)\n				{\n					throw new Error(\n						\'The notify function has been called synchronously!\\n\' +\n						\'This can lead to frames being dropped.\\n\' +\n						\'Definitely report this to <https://github.com/elm-lang/Elm/issues>\\n\');\n				}\n				updateInProgress = true;\n				var timestep = timer.now();\n				for (var i = inputs.length; i--; )\n				{\n					inputs[i].notify(timestep, id, v);\n				}\n				updateInProgress = false;\n			}\n			function setTimeout(func, delay)\n			{\n				return window.setTimeout(func, delay);\n			}\n\n			var listeners = [];\n			function addListener(relevantInputs, domNode, eventName, func)\n			{\n				domNode.addEventListener(eventName, func);\n				var listener = {\n					relevantInputs: relevantInputs,\n					domNode: domNode,\n					eventName: eventName,\n					func: func\n				};\n				listeners.push(listener);\n			}\n\n			var argsTracker = {};\n			for (var name in args)\n			{\n				argsTracker[name] = {\n					value: args[name],\n					used: false\n				};\n			}\n\n			// create the actual RTS. Any impure modules will attach themselves to this\n			// object. This permits many Elm programs to be embedded per document.\n			var elm = {\n				notify: notify,\n				setTimeout: setTimeout,\n				node: container,\n				addListener: addListener,\n				inputs: inputs,\n				timer: timer,\n				argsTracker: argsTracker,\n				ports: {},\n\n				isFullscreen: function() { return display === Display.FULLSCREEN; },\n				isEmbed: function() { return display === Display.COMPONENT; },\n				isWorker: function() { return display === Display.NONE; }\n			};\n\n			function swap(newModule)\n			{\n				removeListeners(listeners);\n				var div = document.createElement(\'div\');\n				var newElm = init(display, div, newModule, args, elm);\n				inputs = [];\n\n				return newElm;\n			}\n\n			function dispose()\n			{\n				removeListeners(listeners);\n				inputs = [];\n			}\n\n			var Module = {};\n			try\n			{\n				Module = module.make(elm);\n				checkInputs(elm);\n			}\n			catch (error)\n			{\n				if (typeof container.appendChild === "function")\n				{\n					container.appendChild(errorNode(error.message));\n				}\n				else\n				{\n					console.error(error.message);\n				}\n				throw error;\n			}\n\n			if (display !== Display.NONE)\n			{\n				var graphicsNode = initGraphics(elm, Module);\n			}\n\n			var rootNode = { kids: inputs };\n			trimDeadNodes(rootNode);\n			inputs = rootNode.kids;\n			filterListeners(inputs, listeners);\n\n			addReceivers(elm.ports);\n\n			if (typeof moduleToReplace !== \'undefined\')\n			{\n				hotSwap(moduleToReplace, elm);\n\n				// rerender scene if graphics are enabled.\n				if (typeof graphicsNode !== \'undefined\')\n				{\n					graphicsNode.notify(0, true, 0);\n				}\n			}\n\n			return {\n				swap: swap,\n				ports: elm.ports,\n				dispose: dispose\n			};\n		}\n\n		function checkInputs(elm)\n		{\n			var argsTracker = elm.argsTracker;\n			for (var name in argsTracker)\n			{\n				if (!argsTracker[name].used)\n				{\n					throw new Error(\n						"Port Error:\\nYou provided an argument named \'" + name +\n						"\' but there is no corresponding port!\\n\\n" +\n						"Maybe add a port \'" + name + "\' to your Elm module?\\n" +\n						"Maybe remove the \'" + name + "\' argument from your initialization code in JS?"\n					);\n				}\n			}\n		}\n\n		function errorNode(message)\n		{\n			var code = document.createElement(\'code\');\n\n			var lines = message.split(\'\\n\');\n			code.appendChild(document.createTextNode(lines[0]));\n			code.appendChild(document.createElement(\'br\'));\n			code.appendChild(document.createElement(\'br\'));\n			for (var i = 1; i < lines.length; ++i)\n			{\n				code.appendChild(document.createTextNode(\'\\u00A0 \\u00A0 \' + lines[i].replace(/  /g, \'\\u00A0 \')));\n				code.appendChild(document.createElement(\'br\'));\n			}\n			code.appendChild(document.createElement(\'br\'));\n			code.appendChild(document.createTextNode(\'Open the developer console for more details.\'));\n			return code;\n		}\n\n\n		//// FILTER SIGNALS ////\n\n		// TODO: move this code into the signal module and create a function\n		// Signal.initializeGraph that actually instantiates everything.\n\n		function filterListeners(inputs, listeners)\n		{\n			loop:\n			for (var i = listeners.length; i--; )\n			{\n				var listener = listeners[i];\n				for (var j = inputs.length; j--; )\n				{\n					if (listener.relevantInputs.indexOf(inputs[j].id) >= 0)\n					{\n						continue loop;\n					}\n				}\n				listener.domNode.removeEventListener(listener.eventName, listener.func);\n			}\n		}\n\n		function removeListeners(listeners)\n		{\n			for (var i = listeners.length; i--; )\n			{\n				var listener = listeners[i];\n				listener.domNode.removeEventListener(listener.eventName, listener.func);\n			}\n		}\n\n		// add receivers for built-in ports if they are defined\n		function addReceivers(ports)\n		{\n			if (\'title\' in ports)\n			{\n				if (typeof ports.title === \'string\')\n				{\n					document.title = ports.title;\n				}\n				else\n				{\n					ports.title.subscribe(function(v) { document.title = v; });\n				}\n			}\n			if (\'redirect\' in ports)\n			{\n				ports.redirect.subscribe(function(v) {\n					if (v.length > 0)\n					{\n						window.location = v;\n					}\n				});\n			}\n		}\n\n\n		// returns a boolean representing whether the node is alive or not.\n		function trimDeadNodes(node)\n		{\n			if (node.isOutput)\n			{\n				return true;\n			}\n\n			var liveKids = [];\n			for (var i = node.kids.length; i--; )\n			{\n				var kid = node.kids[i];\n				if (trimDeadNodes(kid))\n				{\n					liveKids.push(kid);\n				}\n			}\n			node.kids = liveKids;\n\n			return liveKids.length > 0;\n		}\n\n\n		////  RENDERING  ////\n\n		function initGraphics(elm, Module)\n		{\n			if (!(\'main\' in Module))\n			{\n				throw new Error("\'main\' is missing! What do I display?!");\n			}\n\n			var signalGraph = Module.main;\n\n			// make sure the signal graph is actually a signal & extract the visual model\n			if (!(\'notify\' in signalGraph))\n			{\n				signalGraph = Elm.Signal.make(elm).constant(signalGraph);\n			}\n			var initialScene = signalGraph.value;\n\n			// Figure out what the render functions should be\n			var render;\n			var update;\n			if (initialScene.ctor === \'Element_elm_builtin\')\n			{\n				var Element = Elm.Native.Graphics.Element.make(elm);\n				render = Element.render;\n				update = Element.updateAndReplace;\n			}\n			else\n			{\n				var VirtualDom = Elm.Native.VirtualDom.make(elm);\n				render = VirtualDom.render;\n				update = VirtualDom.updateAndReplace;\n			}\n\n			// Add the initialScene to the DOM\n			var container = elm.node;\n			var node = render(initialScene);\n			while (container.firstChild)\n			{\n				container.removeChild(container.firstChild);\n			}\n			container.appendChild(node);\n\n			var _requestAnimationFrame =\n				typeof requestAnimationFrame !== \'undefined\'\n					? requestAnimationFrame\n					: function(cb) { setTimeout(cb, 1000 / 60); }\n					;\n\n			// domUpdate is called whenever the main Signal changes.\n			//\n			// domUpdate and drawCallback implement a small state machine in order\n			// to schedule only 1 draw per animation frame. This enforces that\n			// once draw has been called, it will not be called again until the\n			// next frame.\n			//\n			// drawCallback is scheduled whenever\n			// 1. The state transitions from PENDING_REQUEST to EXTRA_REQUEST, or\n			// 2. The state transitions from NO_REQUEST to PENDING_REQUEST\n			//\n			// Invariants:\n			// 1. In the NO_REQUEST state, there is never a scheduled drawCallback.\n			// 2. In the PENDING_REQUEST and EXTRA_REQUEST states, there is always exactly 1\n			//    scheduled drawCallback.\n			var NO_REQUEST = 0;\n			var PENDING_REQUEST = 1;\n			var EXTRA_REQUEST = 2;\n			var state = NO_REQUEST;\n			var savedScene = initialScene;\n			var scheduledScene = initialScene;\n\n			function domUpdate(newScene)\n			{\n				scheduledScene = newScene;\n\n				switch (state)\n				{\n					case NO_REQUEST:\n						_requestAnimationFrame(drawCallback);\n						state = PENDING_REQUEST;\n						return;\n					case PENDING_REQUEST:\n						state = PENDING_REQUEST;\n						return;\n					case EXTRA_REQUEST:\n						state = PENDING_REQUEST;\n						return;\n				}\n			}\n\n			function drawCallback()\n			{\n				switch (state)\n				{\n					case NO_REQUEST:\n						// This state should not be possible. How can there be no\n						// request, yet somehow we are actively fulfilling a\n						// request?\n						throw new Error(\n							\'Unexpected draw callback.\\n\' +\n							\'Please report this to <https://github.com/elm-lang/core/issues>.\'\n						);\n\n					case PENDING_REQUEST:\n						// At this point, we do not *know* that another frame is\n						// needed, but we make an extra request to rAF just in\n						// case. It\'s possible to drop a frame if rAF is called\n						// too late, so we just do it preemptively.\n						_requestAnimationFrame(drawCallback);\n						state = EXTRA_REQUEST;\n\n						// There\'s also stuff we definitely need to draw.\n						draw();\n						return;\n\n					case EXTRA_REQUEST:\n						// Turns out the extra request was not needed, so we will\n						// stop calling rAF. No reason to call it all the time if\n						// no one needs it.\n						state = NO_REQUEST;\n						return;\n				}\n			}\n\n			function draw()\n			{\n				update(elm.node.firstChild, savedScene, scheduledScene);\n				if (elm.Native.Window)\n				{\n					elm.Native.Window.values.resizeIfNeeded();\n				}\n				savedScene = scheduledScene;\n			}\n\n			var renderer = Elm.Native.Signal.make(elm).output(\'main\', domUpdate, signalGraph);\n\n			// must check for resize after \'renderer\' is created so\n			// that changes show up.\n			if (elm.Native.Window)\n			{\n				elm.Native.Window.values.resizeIfNeeded();\n			}\n\n			return renderer;\n		}\n\n		//// HOT SWAPPING ////\n\n		// Returns boolean indicating if the swap was successful.\n		// Requires that the two signal graphs have exactly the same\n		// structure.\n		function hotSwap(from, to)\n		{\n			function similar(nodeOld, nodeNew)\n			{\n				if (nodeOld.id !== nodeNew.id)\n				{\n					return false;\n				}\n				if (nodeOld.isOutput)\n				{\n					return nodeNew.isOutput;\n				}\n				return nodeOld.kids.length === nodeNew.kids.length;\n			}\n			function swap(nodeOld, nodeNew)\n			{\n				nodeNew.value = nodeOld.value;\n				return true;\n			}\n			var canSwap = depthFirstTraversals(similar, from.inputs, to.inputs);\n			if (canSwap)\n			{\n				depthFirstTraversals(swap, from.inputs, to.inputs);\n			}\n			from.node.parentNode.replaceChild(to.node, from.node);\n\n			return canSwap;\n		}\n\n		// Returns false if the node operation f ever fails.\n		function depthFirstTraversals(f, queueOld, queueNew)\n		{\n			if (queueOld.length !== queueNew.length)\n			{\n				return false;\n			}\n			queueOld = queueOld.slice(0);\n			queueNew = queueNew.slice(0);\n\n			var seen = [];\n			while (queueOld.length > 0 && queueNew.length > 0)\n			{\n				var nodeOld = queueOld.pop();\n				var nodeNew = queueNew.pop();\n				if (seen.indexOf(nodeOld.id) < 0)\n				{\n					if (!f(nodeOld, nodeNew))\n					{\n						return false;\n					}\n					queueOld = queueOld.concat(nodeOld.kids || []);\n					queueNew = queueNew.concat(nodeNew.kids || []);\n					seen.push(nodeOld.id);\n				}\n			}\n			return true;\n		}\n	}());\n\n	function F2(fun)\n	{\n		function wrapper(a) { return function(b) { return fun(a,b); }; }\n		wrapper.arity = 2;\n		wrapper.func = fun;\n		return wrapper;\n	}\n\n	function F3(fun)\n	{\n		function wrapper(a) {\n			return function(b) { return function(c) { return fun(a, b, c); }; };\n		}\n		wrapper.arity = 3;\n		wrapper.func = fun;\n		return wrapper;\n	}\n\n	function F4(fun)\n	{\n		function wrapper(a) { return function(b) { return function(c) {\n			return function(d) { return fun(a, b, c, d); }; }; };\n		}\n		wrapper.arity = 4;\n		wrapper.func = fun;\n		return wrapper;\n	}\n\n	function F5(fun)\n	{\n		function wrapper(a) { return function(b) { return function(c) {\n			return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n		}\n		wrapper.arity = 5;\n		wrapper.func = fun;\n		return wrapper;\n	}\n\n	function F6(fun)\n	{\n		function wrapper(a) { return function(b) { return function(c) {\n			return function(d) { return function(e) { return function(f) {\n			return fun(a, b, c, d, e, f); }; }; }; }; };\n		}\n		wrapper.arity = 6;\n		wrapper.func = fun;\n		return wrapper;\n	}\n\n	function F7(fun)\n	{\n		function wrapper(a) { return function(b) { return function(c) {\n			return function(d) { return function(e) { return function(f) {\n			return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n		}\n		wrapper.arity = 7;\n		wrapper.func = fun;\n		return wrapper;\n	}\n\n	function F8(fun)\n	{\n		function wrapper(a) { return function(b) { return function(c) {\n			return function(d) { return function(e) { return function(f) {\n			return function(g) { return function(h) {\n			return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n		}\n		wrapper.arity = 8;\n		wrapper.func = fun;\n		return wrapper;\n	}\n\n	function F9(fun)\n	{\n		function wrapper(a) { return function(b) { return function(c) {\n			return function(d) { return function(e) { return function(f) {\n			return function(g) { return function(h) { return function(i) {\n			return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n		}\n		wrapper.arity = 9;\n		wrapper.func = fun;\n		return wrapper;\n	}\n\n	function A2(fun, a, b)\n	{\n		return fun.arity === 2\n			? fun.func(a, b)\n			: fun(a)(b);\n	}\n	function A3(fun, a, b, c)\n	{\n		return fun.arity === 3\n			? fun.func(a, b, c)\n			: fun(a)(b)(c);\n	}\n	function A4(fun, a, b, c, d)\n	{\n		return fun.arity === 4\n			? fun.func(a, b, c, d)\n			: fun(a)(b)(c)(d);\n	}\n	function A5(fun, a, b, c, d, e)\n	{\n		return fun.arity === 5\n			? fun.func(a, b, c, d, e)\n			: fun(a)(b)(c)(d)(e);\n	}\n	function A6(fun, a, b, c, d, e, f)\n	{\n		return fun.arity === 6\n			? fun.func(a, b, c, d, e, f)\n			: fun(a)(b)(c)(d)(e)(f);\n	}\n	function A7(fun, a, b, c, d, e, f, g)\n	{\n		return fun.arity === 7\n			? fun.func(a, b, c, d, e, f, g)\n			: fun(a)(b)(c)(d)(e)(f)(g);\n	}\n	function A8(fun, a, b, c, d, e, f, g, h)\n	{\n		return fun.arity === 8\n			? fun.func(a, b, c, d, e, f, g, h)\n			: fun(a)(b)(c)(d)(e)(f)(g)(h);\n	}\n	function A9(fun, a, b, c, d, e, f, g, h, i)\n	{\n		return fun.arity === 9\n			? fun.func(a, b, c, d, e, f, g, h, i)\n			: fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n	}\n}\n\nElm.Native = Elm.Native || {};\nElm.Native.Utils = {};\nElm.Native.Utils.make = function(localRuntime) {\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.Utils = localRuntime.Native.Utils || {};\n	if (localRuntime.Native.Utils.values)\n	{\n		return localRuntime.Native.Utils.values;\n	}\n\n\n	// COMPARISONS\n\n	function eq(l, r)\n	{\n		var stack = [{\'x\': l, \'y\': r}];\n		while (stack.length > 0)\n		{\n			var front = stack.pop();\n			var x = front.x;\n			var y = front.y;\n			if (x === y)\n			{\n				continue;\n			}\n			if (typeof x === \'object\')\n			{\n				var c = 0;\n				for (var i in x)\n				{\n					++c;\n					if (i in y)\n					{\n						if (i !== \'ctor\')\n						{\n							stack.push({ \'x\': x[i], \'y\': y[i] });\n						}\n					}\n					else\n					{\n						return false;\n					}\n				}\n				if (\'ctor\' in x)\n				{\n					stack.push({\'x\': x.ctor, \'y\': y.ctor});\n				}\n				if (c !== Object.keys(y).length)\n				{\n					return false;\n				}\n			}\n			else if (typeof x === \'function\')\n			{\n				throw new Error(\'Equality error: general function equality is \' +\n								\'undecidable, and therefore, unsupported\');\n			}\n			else\n			{\n				return false;\n			}\n		}\n		return true;\n	}\n\n	// code in Generate/JavaScript.hs depends on the particular\n	// integer values assigned to LT, EQ, and GT\n	var LT = -1, EQ = 0, GT = 1, ord = [\'LT\', \'EQ\', \'GT\'];\n\n	function compare(x, y)\n	{\n		return {\n			ctor: ord[cmp(x, y) + 1]\n		};\n	}\n\n	function cmp(x, y) {\n		var ord;\n		if (typeof x !== \'object\')\n		{\n			return x === y ? EQ : x < y ? LT : GT;\n		}\n		else if (x.isChar)\n		{\n			var a = x.toString();\n			var b = y.toString();\n			return a === b\n				? EQ\n				: a < b\n					? LT\n					: GT;\n		}\n		else if (x.ctor === \'::\' || x.ctor === \'[]\')\n		{\n			while (true)\n			{\n				if (x.ctor === \'[]\' && y.ctor === \'[]\')\n				{\n					return EQ;\n				}\n				if (x.ctor !== y.ctor)\n				{\n					return x.ctor === \'[]\' ? LT : GT;\n				}\n				ord = cmp(x._0, y._0);\n				if (ord !== EQ)\n				{\n					return ord;\n				}\n				x = x._1;\n				y = y._1;\n			}\n		}\n		else if (x.ctor.slice(0, 6) === \'_Tuple\')\n		{\n			var n = x.ctor.slice(6) - 0;\n			var err = \'cannot compare tuples with more than 6 elements.\';\n			if (n === 0) return EQ;\n			if (n >= 1) { ord = cmp(x._0, y._0); if (ord !== EQ) return ord;\n			if (n >= 2) { ord = cmp(x._1, y._1); if (ord !== EQ) return ord;\n			if (n >= 3) { ord = cmp(x._2, y._2); if (ord !== EQ) return ord;\n			if (n >= 4) { ord = cmp(x._3, y._3); if (ord !== EQ) return ord;\n			if (n >= 5) { ord = cmp(x._4, y._4); if (ord !== EQ) return ord;\n			if (n >= 6) { ord = cmp(x._5, y._5); if (ord !== EQ) return ord;\n			if (n >= 7) throw new Error(\'Comparison error: \' + err); } } } } } }\n			return EQ;\n		}\n		else\n		{\n			throw new Error(\'Comparison error: comparison is only defined on ints, \' +\n							\'floats, times, chars, strings, lists of comparable values, \' +\n							\'and tuples of comparable values.\');\n		}\n	}\n\n\n	// TUPLES\n\n	var Tuple0 = {\n		ctor: \'_Tuple0\'\n	};\n\n	function Tuple2(x, y)\n	{\n		return {\n			ctor: \'_Tuple2\',\n			_0: x,\n			_1: y\n		};\n	}\n\n\n	// LITERALS\n\n	function chr(c)\n	{\n		var x = new String(c);\n		x.isChar = true;\n		return x;\n	}\n\n	function txt(str)\n	{\n		var t = new String(str);\n		t.text = true;\n		return t;\n	}\n\n\n	// GUID\n\n	var count = 0;\n	function guid(_)\n	{\n		return count++;\n	}\n\n\n	// RECORDS\n\n	function update(oldRecord, updatedFields)\n	{\n		var newRecord = {};\n		for (var key in oldRecord)\n		{\n			var value = (key in updatedFields) ? updatedFields[key] : oldRecord[key];\n			newRecord[key] = value;\n		}\n		return newRecord;\n	}\n\n\n	// MOUSE COORDINATES\n\n	function getXY(e)\n	{\n		var posx = 0;\n		var posy = 0;\n		if (e.pageX || e.pageY)\n		{\n			posx = e.pageX;\n			posy = e.pageY;\n		}\n		else if (e.clientX || e.clientY)\n		{\n			posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n			posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n		}\n\n		if (localRuntime.isEmbed())\n		{\n			var rect = localRuntime.node.getBoundingClientRect();\n			var relx = rect.left + document.body.scrollLeft + document.documentElement.scrollLeft;\n			var rely = rect.top + document.body.scrollTop + document.documentElement.scrollTop;\n			// TODO: figure out if there is a way to avoid rounding here\n			posx = posx - Math.round(relx) - localRuntime.node.clientLeft;\n			posy = posy - Math.round(rely) - localRuntime.node.clientTop;\n		}\n		return Tuple2(posx, posy);\n	}\n\n\n	//// LIST STUFF ////\n\n	var Nil = { ctor: \'[]\' };\n\n	function Cons(hd, tl)\n	{\n		return {\n			ctor: \'::\',\n			_0: hd,\n			_1: tl\n		};\n	}\n\n	function list(arr)\n	{\n		var out = Nil;\n		for (var i = arr.length; i--; )\n		{\n			out = Cons(arr[i], out);\n		}\n		return out;\n	}\n\n	function range(lo, hi)\n	{\n		var list = Nil;\n		if (lo <= hi)\n		{\n			do\n			{\n				list = Cons(hi, list);\n			}\n			while (hi-- > lo);\n		}\n		return list;\n	}\n\n	function append(xs, ys)\n	{\n		// append Strings\n		if (typeof xs === \'string\')\n		{\n			return xs + ys;\n		}\n\n		// append Text\n		if (xs.ctor.slice(0, 5) === \'Text:\')\n		{\n			return {\n				ctor: \'Text:Append\',\n				_0: xs,\n				_1: ys\n			};\n		}\n\n\n		// append Lists\n		if (xs.ctor === \'[]\')\n		{\n			return ys;\n		}\n		var root = Cons(xs._0, Nil);\n		var curr = root;\n		xs = xs._1;\n		while (xs.ctor !== \'[]\')\n		{\n			curr._1 = Cons(xs._0, Nil);\n			xs = xs._1;\n			curr = curr._1;\n		}\n		curr._1 = ys;\n		return root;\n	}\n\n\n	// CRASHES\n\n	function crash(moduleName, region)\n	{\n		return function(message) {\n			throw new Error(\n				\'Ran into a `Debug.crash` in module `\' + moduleName + \'` \' + regionToString(region) + \'\\n\'\n				+ \'The message provided by the code author is:\\n\\n    \'\n				+ message\n			);\n		};\n	}\n\n	function crashCase(moduleName, region, value)\n	{\n		return function(message) {\n			throw new Error(\n				\'Ran into a `Debug.crash` in module `\' + moduleName + \'`\\n\\n\'\n				+ \'This was caused by the `case` expression \' + regionToString(region) + \'.\\n\'\n				+ \'One of the branches ended with a crash and the following value got through:\\n\\n    \' + toString(value) + \'\\n\\n\'\n				+ \'The message provided by the code author is:\\n\\n    \'\n				+ message\n			);\n		};\n	}\n\n	function regionToString(region)\n	{\n		if (region.start.line == region.end.line)\n		{\n			return \'on line \' + region.start.line;\n		}\n		return \'between lines \' + region.start.line + \' and \' + region.end.line;\n	}\n\n\n	// BAD PORTS\n\n	function badPort(expected, received)\n	{\n		throw new Error(\n			\'Runtime error when sending values through a port.\\n\\n\'\n			+ \'Expecting \' + expected + \' but was given \' + formatValue(received)\n		);\n	}\n\n	function formatValue(value)\n	{\n		// Explicity format undefined values as "undefined"\n		// because JSON.stringify(undefined) unhelpfully returns ""\n		return (value === undefined) ? "undefined" : JSON.stringify(value);\n	}\n\n\n	// TO STRING\n\n	var _Array;\n	var Dict;\n	var List;\n\n	var toString = function(v)\n	{\n		var type = typeof v;\n		if (type === \'function\')\n		{\n			var name = v.func ? v.func.name : v.name;\n			return \'<function\' + (name === \'\' ? \'\' : \': \') + name + \'>\';\n		}\n		else if (type === \'boolean\')\n		{\n			return v ? \'True\' : \'False\';\n		}\n		else if (type === \'number\')\n		{\n			return v + \'\';\n		}\n		else if ((v instanceof String) && v.isChar)\n		{\n			return \'\\\'\' + addSlashes(v, true) + \'\\\'\';\n		}\n		else if (type === \'string\')\n		{\n			return \'"\' + addSlashes(v, false) + \'"\';\n		}\n		else if (type === \'object\' && \'ctor\' in v)\n		{\n			if (v.ctor.substring(0, 6) === \'_Tuple\')\n			{\n				var output = [];\n				for (var k in v)\n				{\n					if (k === \'ctor\') continue;\n					output.push(toString(v[k]));\n				}\n				return \'(\' + output.join(\',\') + \')\';\n			}\n			else if (v.ctor === \'_Array\')\n			{\n				if (!_Array)\n				{\n					_Array = Elm.Array.make(localRuntime);\n				}\n				var list = _Array.toList(v);\n				return \'Array.fromList \' + toString(list);\n			}\n			else if (v.ctor === \'::\')\n			{\n				var output = \'[\' + toString(v._0);\n				v = v._1;\n				while (v.ctor === \'::\')\n				{\n					output += \',\' + toString(v._0);\n					v = v._1;\n				}\n				return output + \']\';\n			}\n			else if (v.ctor === \'[]\')\n			{\n				return \'[]\';\n			}\n			else if (v.ctor === \'RBNode_elm_builtin\' || v.ctor === \'RBEmpty_elm_builtin\' || v.ctor === \'Set_elm_builtin\')\n			{\n				if (!Dict)\n				{\n					Dict = Elm.Dict.make(localRuntime);\n				}\n				var list;\n				var name;\n				if (v.ctor === \'Set_elm_builtin\')\n				{\n					if (!List)\n					{\n						List = Elm.List.make(localRuntime);\n					}\n					name = \'Set\';\n					list = A2(List.map, function(x) {return x._0; }, Dict.toList(v._0));\n				}\n				else\n				{\n					name = \'Dict\';\n					list = Dict.toList(v);\n				}\n				return name + \'.fromList \' + toString(list);\n			}\n			else if (v.ctor.slice(0, 5) === \'Text:\')\n			{\n				return \'<text>\';\n			}\n			else if (v.ctor === \'Element_elm_builtin\')\n			{\n				return \'<element>\'\n			}\n			else if (v.ctor === \'Form_elm_builtin\')\n			{\n				return \'<form>\'\n			}\n			else\n			{\n				var output = \'\';\n				for (var i in v)\n				{\n					if (i === \'ctor\') continue;\n					var str = toString(v[i]);\n					var parenless = str[0] === \'{\' || str[0] === \'<\' || str.indexOf(\' \') < 0;\n					output += \' \' + (parenless ? str : \'(\' + str + \')\');\n				}\n				return v.ctor + output;\n			}\n		}\n		else if (type === \'object\' && \'notify\' in v && \'id\' in v)\n		{\n			return \'<signal>\';\n		}\n		else if (type === \'object\')\n		{\n			var output = [];\n			for (var k in v)\n			{\n				output.push(k + \' = \' + toString(v[k]));\n			}\n			if (output.length === 0)\n			{\n				return \'{}\';\n			}\n			return \'{ \' + output.join(\', \') + \' }\';\n		}\n		return \'<internal structure>\';\n	};\n\n	function addSlashes(str, isChar)\n	{\n		var s = str.replace(/\\\\/g, \'\\\\\\\\\')\n				  .replace(/\\n/g, \'\\\\n\')\n				  .replace(/\\t/g, \'\\\\t\')\n				  .replace(/\\r/g, \'\\\\r\')\n				  .replace(/\\v/g, \'\\\\v\')\n				  .replace(/\\0/g, \'\\\\0\');\n		if (isChar)\n		{\n			return s.replace(/\\\'/g, \'\\\\\\\'\');\n		}\n		else\n		{\n			return s.replace(/\\"/g, \'\\\\"\');\n		}\n	}\n\n\n	return localRuntime.Native.Utils.values = {\n		eq: eq,\n		cmp: cmp,\n		compare: F2(compare),\n		Tuple0: Tuple0,\n		Tuple2: Tuple2,\n		chr: chr,\n		txt: txt,\n		update: update,\n		guid: guid,\n		getXY: getXY,\n\n		Nil: Nil,\n		Cons: Cons,\n		list: list,\n		range: range,\n		append: F2(append),\n\n		crash: crash,\n		crashCase: crashCase,\n		badPort: badPort,\n\n		toString: toString\n	};\n};\n\nElm.Basics = Elm.Basics || {};\nElm.Basics.make = function (_elm) {\n   "use strict";\n   _elm.Basics = _elm.Basics || {};\n   if (_elm.Basics.values) return _elm.Basics.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Native$Basics = Elm.Native.Basics.make(_elm),\n   $Native$Utils = Elm.Native.Utils.make(_elm);\n   var _op = {};\n   var uncurry = F2(function (f,_p0) {\n      var _p1 = _p0;\n      return A2(f,_p1._0,_p1._1);\n   });\n   var curry = F3(function (f,a,b) {\n      return f({ctor: "_Tuple2",_0: a,_1: b});\n   });\n   var flip = F3(function (f,b,a) {    return A2(f,a,b);});\n   var snd = function (_p2) {    var _p3 = _p2;return _p3._1;};\n   var fst = function (_p4) {    var _p5 = _p4;return _p5._0;};\n   var always = F2(function (a,_p6) {    return a;});\n   var identity = function (x) {    return x;};\n   _op["<|"] = F2(function (f,x) {    return f(x);});\n   _op["|>"] = F2(function (x,f) {    return f(x);});\n   _op[">>"] = F3(function (f,g,x) {    return g(f(x));});\n   _op["<<"] = F3(function (g,f,x) {    return g(f(x));});\n   _op["++"] = $Native$Utils.append;\n   var toString = $Native$Utils.toString;\n   var isInfinite = $Native$Basics.isInfinite;\n   var isNaN = $Native$Basics.isNaN;\n   var toFloat = $Native$Basics.toFloat;\n   var ceiling = $Native$Basics.ceiling;\n   var floor = $Native$Basics.floor;\n   var truncate = $Native$Basics.truncate;\n   var round = $Native$Basics.round;\n   var not = $Native$Basics.not;\n   var xor = $Native$Basics.xor;\n   _op["||"] = $Native$Basics.or;\n   _op["&&"] = $Native$Basics.and;\n   var max = $Native$Basics.max;\n   var min = $Native$Basics.min;\n   var GT = {ctor: "GT"};\n   var EQ = {ctor: "EQ"};\n   var LT = {ctor: "LT"};\n   var compare = $Native$Basics.compare;\n   _op[">="] = $Native$Basics.ge;\n   _op["<="] = $Native$Basics.le;\n   _op[">"] = $Native$Basics.gt;\n   _op["<"] = $Native$Basics.lt;\n   _op["/="] = $Native$Basics.neq;\n   _op["=="] = $Native$Basics.eq;\n   var e = $Native$Basics.e;\n   var pi = $Native$Basics.pi;\n   var clamp = $Native$Basics.clamp;\n   var logBase = $Native$Basics.logBase;\n   var abs = $Native$Basics.abs;\n   var negate = $Native$Basics.negate;\n   var sqrt = $Native$Basics.sqrt;\n   var atan2 = $Native$Basics.atan2;\n   var atan = $Native$Basics.atan;\n   var asin = $Native$Basics.asin;\n   var acos = $Native$Basics.acos;\n   var tan = $Native$Basics.tan;\n   var sin = $Native$Basics.sin;\n   var cos = $Native$Basics.cos;\n   _op["^"] = $Native$Basics.exp;\n   _op["%"] = $Native$Basics.mod;\n   var rem = $Native$Basics.rem;\n   _op["//"] = $Native$Basics.div;\n   _op["/"] = $Native$Basics.floatDiv;\n   _op["*"] = $Native$Basics.mul;\n   _op["-"] = $Native$Basics.sub;\n   _op["+"] = $Native$Basics.add;\n   var toPolar = $Native$Basics.toPolar;\n   var fromPolar = $Native$Basics.fromPolar;\n   var turns = $Native$Basics.turns;\n   var degrees = $Native$Basics.degrees;\n   var radians = function (t) {    return t;};\n   return _elm.Basics.values = {_op: _op\n                               ,max: max\n                               ,min: min\n                               ,compare: compare\n                               ,not: not\n                               ,xor: xor\n                               ,rem: rem\n                               ,negate: negate\n                               ,abs: abs\n                               ,sqrt: sqrt\n                               ,clamp: clamp\n                               ,logBase: logBase\n                               ,e: e\n                               ,pi: pi\n                               ,cos: cos\n                               ,sin: sin\n                               ,tan: tan\n                               ,acos: acos\n                               ,asin: asin\n                               ,atan: atan\n                               ,atan2: atan2\n                               ,round: round\n                               ,floor: floor\n                               ,ceiling: ceiling\n                               ,truncate: truncate\n                               ,toFloat: toFloat\n                               ,degrees: degrees\n                               ,radians: radians\n                               ,turns: turns\n                               ,toPolar: toPolar\n                               ,fromPolar: fromPolar\n                               ,isNaN: isNaN\n                               ,isInfinite: isInfinite\n                               ,toString: toString\n                               ,fst: fst\n                               ,snd: snd\n                               ,identity: identity\n                               ,always: always\n                               ,flip: flip\n                               ,curry: curry\n                               ,uncurry: uncurry\n                               ,LT: LT\n                               ,EQ: EQ\n                               ,GT: GT};\n};\nElm.Maybe = Elm.Maybe || {};\nElm.Maybe.make = function (_elm) {\n   "use strict";\n   _elm.Maybe = _elm.Maybe || {};\n   if (_elm.Maybe.values) return _elm.Maybe.values;\n   var _U = Elm.Native.Utils.make(_elm);\n   var _op = {};\n   var withDefault = F2(function ($default,maybe) {\n      var _p0 = maybe;\n      if (_p0.ctor === "Just") {\n            return _p0._0;\n         } else {\n            return $default;\n         }\n   });\n   var Nothing = {ctor: "Nothing"};\n   var oneOf = function (maybes) {\n      oneOf: while (true) {\n         var _p1 = maybes;\n         if (_p1.ctor === "[]") {\n               return Nothing;\n            } else {\n               var _p3 = _p1._0;\n               var _p2 = _p3;\n               if (_p2.ctor === "Nothing") {\n                     var _v3 = _p1._1;\n                     maybes = _v3;\n                     continue oneOf;\n                  } else {\n                     return _p3;\n                  }\n            }\n      }\n   };\n   var andThen = F2(function (maybeValue,callback) {\n      var _p4 = maybeValue;\n      if (_p4.ctor === "Just") {\n            return callback(_p4._0);\n         } else {\n            return Nothing;\n         }\n   });\n   var Just = function (a) {    return {ctor: "Just",_0: a};};\n   var map = F2(function (f,maybe) {\n      var _p5 = maybe;\n      if (_p5.ctor === "Just") {\n            return Just(f(_p5._0));\n         } else {\n            return Nothing;\n         }\n   });\n   var map2 = F3(function (func,ma,mb) {\n      var _p6 = {ctor: "_Tuple2",_0: ma,_1: mb};\n      if (_p6.ctor === "_Tuple2" && _p6._0.ctor === "Just" && _p6._1.ctor === "Just")\n      {\n            return Just(A2(func,_p6._0._0,_p6._1._0));\n         } else {\n            return Nothing;\n         }\n   });\n   var map3 = F4(function (func,ma,mb,mc) {\n      var _p7 = {ctor: "_Tuple3",_0: ma,_1: mb,_2: mc};\n      if (_p7.ctor === "_Tuple3" && _p7._0.ctor === "Just" && _p7._1.ctor === "Just" && _p7._2.ctor === "Just")\n      {\n            return Just(A3(func,_p7._0._0,_p7._1._0,_p7._2._0));\n         } else {\n            return Nothing;\n         }\n   });\n   var map4 = F5(function (func,ma,mb,mc,md) {\n      var _p8 = {ctor: "_Tuple4",_0: ma,_1: mb,_2: mc,_3: md};\n      if (_p8.ctor === "_Tuple4" && _p8._0.ctor === "Just" && _p8._1.ctor === "Just" && _p8._2.ctor === "Just" && _p8._3.ctor === "Just")\n      {\n            return Just(A4(func,\n            _p8._0._0,\n            _p8._1._0,\n            _p8._2._0,\n            _p8._3._0));\n         } else {\n            return Nothing;\n         }\n   });\n   var map5 = F6(function (func,ma,mb,mc,md,me) {\n      var _p9 = {ctor: "_Tuple5"\n                ,_0: ma\n                ,_1: mb\n                ,_2: mc\n                ,_3: md\n                ,_4: me};\n      if (_p9.ctor === "_Tuple5" && _p9._0.ctor === "Just" && _p9._1.ctor === "Just" && _p9._2.ctor === "Just" && _p9._3.ctor === "Just" && _p9._4.ctor === "Just")\n      {\n            return Just(A5(func,\n            _p9._0._0,\n            _p9._1._0,\n            _p9._2._0,\n            _p9._3._0,\n            _p9._4._0));\n         } else {\n            return Nothing;\n         }\n   });\n   return _elm.Maybe.values = {_op: _op\n                              ,andThen: andThen\n                              ,map: map\n                              ,map2: map2\n                              ,map3: map3\n                              ,map4: map4\n                              ,map5: map5\n                              ,withDefault: withDefault\n                              ,oneOf: oneOf\n                              ,Just: Just\n                              ,Nothing: Nothing};\n};\nElm.Native.List = {};\nElm.Native.List.make = function(localRuntime) {\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.List = localRuntime.Native.List || {};\n	if (localRuntime.Native.List.values)\n	{\n		return localRuntime.Native.List.values;\n	}\n	if (\'values\' in Elm.Native.List)\n	{\n		return localRuntime.Native.List.values = Elm.Native.List.values;\n	}\n\n	var Utils = Elm.Native.Utils.make(localRuntime);\n\n	var Nil = Utils.Nil;\n	var Cons = Utils.Cons;\n\n	var fromArray = Utils.list;\n\n	function toArray(xs)\n	{\n		var out = [];\n		while (xs.ctor !== \'[]\')\n		{\n			out.push(xs._0);\n			xs = xs._1;\n		}\n		return out;\n	}\n\n	// f defined similarly for both foldl and foldr (NB: different from Haskell)\n	// ie, foldl : (a -> b -> b) -> b -> [a] -> b\n	function foldl(f, b, xs)\n	{\n		var acc = b;\n		while (xs.ctor !== \'[]\')\n		{\n			acc = A2(f, xs._0, acc);\n			xs = xs._1;\n		}\n		return acc;\n	}\n\n	function foldr(f, b, xs)\n	{\n		var arr = toArray(xs);\n		var acc = b;\n		for (var i = arr.length; i--; )\n		{\n			acc = A2(f, arr[i], acc);\n		}\n		return acc;\n	}\n\n	function map2(f, xs, ys)\n	{\n		var arr = [];\n		while (xs.ctor !== \'[]\' && ys.ctor !== \'[]\')\n		{\n			arr.push(A2(f, xs._0, ys._0));\n			xs = xs._1;\n			ys = ys._1;\n		}\n		return fromArray(arr);\n	}\n\n	function map3(f, xs, ys, zs)\n	{\n		var arr = [];\n		while (xs.ctor !== \'[]\' && ys.ctor !== \'[]\' && zs.ctor !== \'[]\')\n		{\n			arr.push(A3(f, xs._0, ys._0, zs._0));\n			xs = xs._1;\n			ys = ys._1;\n			zs = zs._1;\n		}\n		return fromArray(arr);\n	}\n\n	function map4(f, ws, xs, ys, zs)\n	{\n		var arr = [];\n		while (   ws.ctor !== \'[]\'\n			   && xs.ctor !== \'[]\'\n			   && ys.ctor !== \'[]\'\n			   && zs.ctor !== \'[]\')\n		{\n			arr.push(A4(f, ws._0, xs._0, ys._0, zs._0));\n			ws = ws._1;\n			xs = xs._1;\n			ys = ys._1;\n			zs = zs._1;\n		}\n		return fromArray(arr);\n	}\n\n	function map5(f, vs, ws, xs, ys, zs)\n	{\n		var arr = [];\n		while (   vs.ctor !== \'[]\'\n			   && ws.ctor !== \'[]\'\n			   && xs.ctor !== \'[]\'\n			   && ys.ctor !== \'[]\'\n			   && zs.ctor !== \'[]\')\n		{\n			arr.push(A5(f, vs._0, ws._0, xs._0, ys._0, zs._0));\n			vs = vs._1;\n			ws = ws._1;\n			xs = xs._1;\n			ys = ys._1;\n			zs = zs._1;\n		}\n		return fromArray(arr);\n	}\n\n	function sortBy(f, xs)\n	{\n		return fromArray(toArray(xs).sort(function(a, b) {\n			return Utils.cmp(f(a), f(b));\n		}));\n	}\n\n	function sortWith(f, xs)\n	{\n		return fromArray(toArray(xs).sort(function(a, b) {\n			var ord = f(a)(b).ctor;\n			return ord === \'EQ\' ? 0 : ord === \'LT\' ? -1 : 1;\n		}));\n	}\n\n	function take(n, xs)\n	{\n		var arr = [];\n		while (xs.ctor !== \'[]\' && n > 0)\n		{\n			arr.push(xs._0);\n			xs = xs._1;\n			--n;\n		}\n		return fromArray(arr);\n	}\n\n\n	Elm.Native.List.values = {\n		Nil: Nil,\n		Cons: Cons,\n		cons: F2(Cons),\n		toArray: toArray,\n		fromArray: fromArray,\n\n		foldl: F3(foldl),\n		foldr: F3(foldr),\n\n		map2: F3(map2),\n		map3: F4(map3),\n		map4: F5(map4),\n		map5: F6(map5),\n		sortBy: F2(sortBy),\n		sortWith: F2(sortWith),\n		take: F2(take)\n	};\n	return localRuntime.Native.List.values = Elm.Native.List.values;\n};\n\nElm.List = Elm.List || {};\nElm.List.make = function (_elm) {\n   "use strict";\n   _elm.List = _elm.List || {};\n   if (_elm.List.values) return _elm.List.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$List = Elm.Native.List.make(_elm);\n   var _op = {};\n   var sortWith = $Native$List.sortWith;\n   var sortBy = $Native$List.sortBy;\n   var sort = function (xs) {\n      return A2(sortBy,$Basics.identity,xs);\n   };\n   var drop = F2(function (n,list) {\n      drop: while (true) if (_U.cmp(n,0) < 1) return list; else {\n            var _p0 = list;\n            if (_p0.ctor === "[]") {\n                  return list;\n               } else {\n                  var _v1 = n - 1,_v2 = _p0._1;\n                  n = _v1;\n                  list = _v2;\n                  continue drop;\n               }\n         }\n   });\n   var take = $Native$List.take;\n   var map5 = $Native$List.map5;\n   var map4 = $Native$List.map4;\n   var map3 = $Native$List.map3;\n   var map2 = $Native$List.map2;\n   var any = F2(function (isOkay,list) {\n      any: while (true) {\n         var _p1 = list;\n         if (_p1.ctor === "[]") {\n               return false;\n            } else {\n               if (isOkay(_p1._0)) return true; else {\n                     var _v4 = isOkay,_v5 = _p1._1;\n                     isOkay = _v4;\n                     list = _v5;\n                     continue any;\n                  }\n            }\n      }\n   });\n   var all = F2(function (isOkay,list) {\n      return $Basics.not(A2(any,\n      function (_p2) {\n         return $Basics.not(isOkay(_p2));\n      },\n      list));\n   });\n   var foldr = $Native$List.foldr;\n   var foldl = $Native$List.foldl;\n   var length = function (xs) {\n      return A3(foldl,\n      F2(function (_p3,i) {    return i + 1;}),\n      0,\n      xs);\n   };\n   var sum = function (numbers) {\n      return A3(foldl,\n      F2(function (x,y) {    return x + y;}),\n      0,\n      numbers);\n   };\n   var product = function (numbers) {\n      return A3(foldl,\n      F2(function (x,y) {    return x * y;}),\n      1,\n      numbers);\n   };\n   var maximum = function (list) {\n      var _p4 = list;\n      if (_p4.ctor === "::") {\n            return $Maybe.Just(A3(foldl,$Basics.max,_p4._0,_p4._1));\n         } else {\n            return $Maybe.Nothing;\n         }\n   };\n   var minimum = function (list) {\n      var _p5 = list;\n      if (_p5.ctor === "::") {\n            return $Maybe.Just(A3(foldl,$Basics.min,_p5._0,_p5._1));\n         } else {\n            return $Maybe.Nothing;\n         }\n   };\n   var indexedMap = F2(function (f,xs) {\n      return A3(map2,f,_U.range(0,length(xs) - 1),xs);\n   });\n   var member = F2(function (x,xs) {\n      return A2(any,function (a) {    return _U.eq(a,x);},xs);\n   });\n   var isEmpty = function (xs) {\n      var _p6 = xs;\n      if (_p6.ctor === "[]") {\n            return true;\n         } else {\n            return false;\n         }\n   };\n   var tail = function (list) {\n      var _p7 = list;\n      if (_p7.ctor === "::") {\n            return $Maybe.Just(_p7._1);\n         } else {\n            return $Maybe.Nothing;\n         }\n   };\n   var head = function (list) {\n      var _p8 = list;\n      if (_p8.ctor === "::") {\n            return $Maybe.Just(_p8._0);\n         } else {\n            return $Maybe.Nothing;\n         }\n   };\n   _op["::"] = $Native$List.cons;\n   var map = F2(function (f,xs) {\n      return A3(foldr,\n      F2(function (x,acc) {    return A2(_op["::"],f(x),acc);}),\n      _U.list([]),\n      xs);\n   });\n   var filter = F2(function (pred,xs) {\n      var conditionalCons = F2(function (x,xs$) {\n         return pred(x) ? A2(_op["::"],x,xs$) : xs$;\n      });\n      return A3(foldr,conditionalCons,_U.list([]),xs);\n   });\n   var maybeCons = F3(function (f,mx,xs) {\n      var _p9 = f(mx);\n      if (_p9.ctor === "Just") {\n            return A2(_op["::"],_p9._0,xs);\n         } else {\n            return xs;\n         }\n   });\n   var filterMap = F2(function (f,xs) {\n      return A3(foldr,maybeCons(f),_U.list([]),xs);\n   });\n   var reverse = function (list) {\n      return A3(foldl,\n      F2(function (x,y) {    return A2(_op["::"],x,y);}),\n      _U.list([]),\n      list);\n   };\n   var scanl = F3(function (f,b,xs) {\n      var scan1 = F2(function (x,accAcc) {\n         var _p10 = accAcc;\n         if (_p10.ctor === "::") {\n               return A2(_op["::"],A2(f,x,_p10._0),accAcc);\n            } else {\n               return _U.list([]);\n            }\n      });\n      return reverse(A3(foldl,scan1,_U.list([b]),xs));\n   });\n   var append = F2(function (xs,ys) {\n      var _p11 = ys;\n      if (_p11.ctor === "[]") {\n            return xs;\n         } else {\n            return A3(foldr,\n            F2(function (x,y) {    return A2(_op["::"],x,y);}),\n            ys,\n            xs);\n         }\n   });\n   var concat = function (lists) {\n      return A3(foldr,append,_U.list([]),lists);\n   };\n   var concatMap = F2(function (f,list) {\n      return concat(A2(map,f,list));\n   });\n   var partition = F2(function (pred,list) {\n      var step = F2(function (x,_p12) {\n         var _p13 = _p12;\n         var _p15 = _p13._0;\n         var _p14 = _p13._1;\n         return pred(x) ? {ctor: "_Tuple2"\n                          ,_0: A2(_op["::"],x,_p15)\n                          ,_1: _p14} : {ctor: "_Tuple2"\n                                       ,_0: _p15\n                                       ,_1: A2(_op["::"],x,_p14)};\n      });\n      return A3(foldr,\n      step,\n      {ctor: "_Tuple2",_0: _U.list([]),_1: _U.list([])},\n      list);\n   });\n   var unzip = function (pairs) {\n      var step = F2(function (_p17,_p16) {\n         var _p18 = _p17;\n         var _p19 = _p16;\n         return {ctor: "_Tuple2"\n                ,_0: A2(_op["::"],_p18._0,_p19._0)\n                ,_1: A2(_op["::"],_p18._1,_p19._1)};\n      });\n      return A3(foldr,\n      step,\n      {ctor: "_Tuple2",_0: _U.list([]),_1: _U.list([])},\n      pairs);\n   };\n   var intersperse = F2(function (sep,xs) {\n      var _p20 = xs;\n      if (_p20.ctor === "[]") {\n            return _U.list([]);\n         } else {\n            var step = F2(function (x,rest) {\n               return A2(_op["::"],sep,A2(_op["::"],x,rest));\n            });\n            var spersed = A3(foldr,step,_U.list([]),_p20._1);\n            return A2(_op["::"],_p20._0,spersed);\n         }\n   });\n   var repeatHelp = F3(function (result,n,value) {\n      repeatHelp: while (true) if (_U.cmp(n,0) < 1) return result;\n      else {\n            var _v18 = A2(_op["::"],value,result),\n            _v19 = n - 1,\n            _v20 = value;\n            result = _v18;\n            n = _v19;\n            value = _v20;\n            continue repeatHelp;\n         }\n   });\n   var repeat = F2(function (n,value) {\n      return A3(repeatHelp,_U.list([]),n,value);\n   });\n   return _elm.List.values = {_op: _op\n                             ,isEmpty: isEmpty\n                             ,length: length\n                             ,reverse: reverse\n                             ,member: member\n                             ,head: head\n                             ,tail: tail\n                             ,filter: filter\n                             ,take: take\n                             ,drop: drop\n                             ,repeat: repeat\n                             ,append: append\n                             ,concat: concat\n                             ,intersperse: intersperse\n                             ,partition: partition\n                             ,unzip: unzip\n                             ,map: map\n                             ,map2: map2\n                             ,map3: map3\n                             ,map4: map4\n                             ,map5: map5\n                             ,filterMap: filterMap\n                             ,concatMap: concatMap\n                             ,indexedMap: indexedMap\n                             ,foldr: foldr\n                             ,foldl: foldl\n                             ,sum: sum\n                             ,product: product\n                             ,maximum: maximum\n                             ,minimum: minimum\n                             ,all: all\n                             ,any: any\n                             ,scanl: scanl\n                             ,sort: sort\n                             ,sortBy: sortBy\n                             ,sortWith: sortWith};\n};\nElm.Native.Transform2D = {};\nElm.Native.Transform2D.make = function(localRuntime) {\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.Transform2D = localRuntime.Native.Transform2D || {};\n	if (localRuntime.Native.Transform2D.values)\n	{\n		return localRuntime.Native.Transform2D.values;\n	}\n\n	var A;\n	if (typeof Float32Array === \'undefined\')\n	{\n		A = function(arr)\n		{\n			this.length = arr.length;\n			this[0] = arr[0];\n			this[1] = arr[1];\n			this[2] = arr[2];\n			this[3] = arr[3];\n			this[4] = arr[4];\n			this[5] = arr[5];\n		};\n	}\n	else\n	{\n		A = Float32Array;\n	}\n\n	// layout of matrix in an array is\n	//\n	//   | m11 m12 dx |\n	//   | m21 m22 dy |\n	//   |  0   0   1 |\n	//\n	//  new A([ m11, m12, dx, m21, m22, dy ])\n\n	var identity = new A([1, 0, 0, 0, 1, 0]);\n	function matrix(m11, m12, m21, m22, dx, dy)\n	{\n		return new A([m11, m12, dx, m21, m22, dy]);\n	}\n\n	function rotation(t)\n	{\n		var c = Math.cos(t);\n		var s = Math.sin(t);\n		return new A([c, -s, 0, s, c, 0]);\n	}\n\n	function rotate(t, m)\n	{\n		var c = Math.cos(t);\n		var s = Math.sin(t);\n		var m11 = m[0], m12 = m[1], m21 = m[3], m22 = m[4];\n		return new A([m11 * c + m12 * s, -m11 * s + m12 * c, m[2],\n					  m21 * c + m22 * s, -m21 * s + m22 * c, m[5]]);\n	}\n	/*\n	function move(xy,m) {\n		var x = xy._0;\n		var y = xy._1;\n		var m11 = m[0], m12 = m[1], m21 = m[3], m22 = m[4];\n		return new A([m11, m12, m11*x + m12*y + m[2],\n					  m21, m22, m21*x + m22*y + m[5]]);\n	}\n	function scale(s,m) { return new A([m[0]*s, m[1]*s, m[2], m[3]*s, m[4]*s, m[5]]); }\n	function scaleX(x,m) { return new A([m[0]*x, m[1], m[2], m[3]*x, m[4], m[5]]); }\n	function scaleY(y,m) { return new A([m[0], m[1]*y, m[2], m[3], m[4]*y, m[5]]); }\n	function reflectX(m) { return new A([-m[0], m[1], m[2], -m[3], m[4], m[5]]); }\n	function reflectY(m) { return new A([m[0], -m[1], m[2], m[3], -m[4], m[5]]); }\n\n	function transform(m11, m21, m12, m22, mdx, mdy, n) {\n		var n11 = n[0], n12 = n[1], n21 = n[3], n22 = n[4], ndx = n[2], ndy = n[5];\n		return new A([m11*n11 + m12*n21,\n					  m11*n12 + m12*n22,\n					  m11*ndx + m12*ndy + mdx,\n					  m21*n11 + m22*n21,\n					  m21*n12 + m22*n22,\n					  m21*ndx + m22*ndy + mdy]);\n	}\n	*/\n	function multiply(m, n)\n	{\n		var m11 = m[0], m12 = m[1], m21 = m[3], m22 = m[4], mdx = m[2], mdy = m[5];\n		var n11 = n[0], n12 = n[1], n21 = n[3], n22 = n[4], ndx = n[2], ndy = n[5];\n		return new A([m11 * n11 + m12 * n21,\n					  m11 * n12 + m12 * n22,\n					  m11 * ndx + m12 * ndy + mdx,\n					  m21 * n11 + m22 * n21,\n					  m21 * n12 + m22 * n22,\n					  m21 * ndx + m22 * ndy + mdy]);\n	}\n\n	return localRuntime.Native.Transform2D.values = {\n		identity: identity,\n		matrix: F6(matrix),\n		rotation: rotation,\n		multiply: F2(multiply)\n		/*\n		transform: F7(transform),\n		rotate: F2(rotate),\n		move: F2(move),\n		scale: F2(scale),\n		scaleX: F2(scaleX),\n		scaleY: F2(scaleY),\n		reflectX: reflectX,\n		reflectY: reflectY\n		*/\n	};\n};\n\nElm.Transform2D = Elm.Transform2D || {};\nElm.Transform2D.make = function (_elm) {\n   "use strict";\n   _elm.Transform2D = _elm.Transform2D || {};\n   if (_elm.Transform2D.values) return _elm.Transform2D.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Native$Transform2D = Elm.Native.Transform2D.make(_elm);\n   var _op = {};\n   var multiply = $Native$Transform2D.multiply;\n   var rotation = $Native$Transform2D.rotation;\n   var matrix = $Native$Transform2D.matrix;\n   var translation = F2(function (x,y) {\n      return A6(matrix,1,0,0,1,x,y);\n   });\n   var scale = function (s) {    return A6(matrix,s,0,0,s,0,0);};\n   var scaleX = function (x) {    return A6(matrix,x,0,0,1,0,0);};\n   var scaleY = function (y) {    return A6(matrix,1,0,0,y,0,0);};\n   var identity = $Native$Transform2D.identity;\n   var Transform2D = {ctor: "Transform2D"};\n   return _elm.Transform2D.values = {_op: _op\n                                    ,identity: identity\n                                    ,matrix: matrix\n                                    ,multiply: multiply\n                                    ,rotation: rotation\n                                    ,translation: translation\n                                    ,scale: scale\n                                    ,scaleX: scaleX\n                                    ,scaleY: scaleY};\n};\n\n// setup\nElm.Native = Elm.Native || {};\nElm.Native.Graphics = Elm.Native.Graphics || {};\nElm.Native.Graphics.Collage = Elm.Native.Graphics.Collage || {};\n\n// definition\nElm.Native.Graphics.Collage.make = function(localRuntime) {\n	\'use strict\';\n\n	// attempt to short-circuit\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.Graphics = localRuntime.Native.Graphics || {};\n	localRuntime.Native.Graphics.Collage = localRuntime.Native.Graphics.Collage || {};\n	if (\'values\' in localRuntime.Native.Graphics.Collage)\n	{\n		return localRuntime.Native.Graphics.Collage.values;\n	}\n\n	// okay, we cannot short-ciruit, so now we define everything\n	var Color = Elm.Native.Color.make(localRuntime);\n	var List = Elm.Native.List.make(localRuntime);\n	var NativeElement = Elm.Native.Graphics.Element.make(localRuntime);\n	var Transform = Elm.Transform2D.make(localRuntime);\n	var Utils = Elm.Native.Utils.make(localRuntime);\n\n	function setStrokeStyle(ctx, style)\n	{\n		ctx.lineWidth = style.width;\n\n		var cap = style.cap.ctor;\n		ctx.lineCap = cap === \'Flat\'\n			? \'butt\'\n			: cap === \'Round\'\n				? \'round\'\n				: \'square\';\n\n		var join = style.join.ctor;\n		ctx.lineJoin = join === \'Smooth\'\n			? \'round\'\n			: join === \'Sharp\'\n				? \'miter\'\n				: \'bevel\';\n\n		ctx.miterLimit = style.join._0 || 10;\n		ctx.strokeStyle = Color.toCss(style.color);\n	}\n\n	function setFillStyle(redo, ctx, style)\n	{\n		var sty = style.ctor;\n		ctx.fillStyle = sty === \'Solid\'\n			? Color.toCss(style._0)\n			: sty === \'Texture\'\n				? texture(redo, ctx, style._0)\n				: gradient(ctx, style._0);\n	}\n\n	function trace(ctx, path)\n	{\n		var points = List.toArray(path);\n		var i = points.length - 1;\n		if (i <= 0)\n		{\n			return;\n		}\n		ctx.moveTo(points[i]._0, points[i]._1);\n		while (i--)\n		{\n			ctx.lineTo(points[i]._0, points[i]._1);\n		}\n		if (path.closed)\n		{\n			i = points.length - 1;\n			ctx.lineTo(points[i]._0, points[i]._1);\n		}\n	}\n\n	function line(ctx, style, path)\n	{\n		if (style.dashing.ctor === \'[]\')\n		{\n			trace(ctx, path);\n		}\n		else\n		{\n			customLineHelp(ctx, style, path);\n		}\n		ctx.scale(1, -1);\n		ctx.stroke();\n	}\n\n	function customLineHelp(ctx, style, path)\n	{\n		var points = List.toArray(path);\n		if (path.closed)\n		{\n			points.push(points[0]);\n		}\n		var pattern = List.toArray(style.dashing);\n		var i = points.length - 1;\n		if (i <= 0)\n		{\n			return;\n		}\n		var x0 = points[i]._0, y0 = points[i]._1;\n		var x1 = 0, y1 = 0, dx = 0, dy = 0, remaining = 0;\n		var pindex = 0, plen = pattern.length;\n		var draw = true, segmentLength = pattern[0];\n		ctx.moveTo(x0, y0);\n		while (i--)\n		{\n			x1 = points[i]._0;\n			y1 = points[i]._1;\n			dx = x1 - x0;\n			dy = y1 - y0;\n			remaining = Math.sqrt(dx * dx + dy * dy);\n			while (segmentLength <= remaining)\n			{\n				x0 += dx * segmentLength / remaining;\n				y0 += dy * segmentLength / remaining;\n				ctx[draw ? \'lineTo\' : \'moveTo\'](x0, y0);\n				// update starting position\n				dx = x1 - x0;\n				dy = y1 - y0;\n				remaining = Math.sqrt(dx * dx + dy * dy);\n				// update pattern\n				draw = !draw;\n				pindex = (pindex + 1) % plen;\n				segmentLength = pattern[pindex];\n			}\n			if (remaining > 0)\n			{\n				ctx[draw ? \'lineTo\' : \'moveTo\'](x1, y1);\n				segmentLength -= remaining;\n			}\n			x0 = x1;\n			y0 = y1;\n		}\n	}\n\n	function drawLine(ctx, style, path)\n	{\n		setStrokeStyle(ctx, style);\n		return line(ctx, style, path);\n	}\n\n	function texture(redo, ctx, src)\n	{\n		var img = new Image();\n		img.src = src;\n		img.onload = redo;\n		return ctx.createPattern(img, \'repeat\');\n	}\n\n	function gradient(ctx, grad)\n	{\n		var g;\n		var stops = [];\n		if (grad.ctor === \'Linear\')\n		{\n			var p0 = grad._0, p1 = grad._1;\n			g = ctx.createLinearGradient(p0._0, -p0._1, p1._0, -p1._1);\n			stops = List.toArray(grad._2);\n		}\n		else\n		{\n			var p0 = grad._0, p2 = grad._2;\n			g = ctx.createRadialGradient(p0._0, -p0._1, grad._1, p2._0, -p2._1, grad._3);\n			stops = List.toArray(grad._4);\n		}\n		var len = stops.length;\n		for (var i = 0; i < len; ++i)\n		{\n			var stop = stops[i];\n			g.addColorStop(stop._0, Color.toCss(stop._1));\n		}\n		return g;\n	}\n\n	function drawShape(redo, ctx, style, path)\n	{\n		trace(ctx, path);\n		setFillStyle(redo, ctx, style);\n		ctx.scale(1, -1);\n		ctx.fill();\n	}\n\n\n	// TEXT RENDERING\n\n	function fillText(redo, ctx, text)\n	{\n		drawText(ctx, text, ctx.fillText);\n	}\n\n	function strokeText(redo, ctx, style, text)\n	{\n		setStrokeStyle(ctx, style);\n		// Use native canvas API for dashes only for text for now\n		// Degrades to non-dashed on IE 9 + 10\n		if (style.dashing.ctor !== \'[]\' && ctx.setLineDash)\n		{\n			var pattern = List.toArray(style.dashing);\n			ctx.setLineDash(pattern);\n		}\n		drawText(ctx, text, ctx.strokeText);\n	}\n\n	function drawText(ctx, text, canvasDrawFn)\n	{\n		var textChunks = chunkText(defaultContext, text);\n\n		var totalWidth = 0;\n		var maxHeight = 0;\n		var numChunks = textChunks.length;\n\n		ctx.scale(1,-1);\n\n		for (var i = numChunks; i--; )\n		{\n			var chunk = textChunks[i];\n			ctx.font = chunk.font;\n			var metrics = ctx.measureText(chunk.text);\n			chunk.width = metrics.width;\n			totalWidth += chunk.width;\n			if (chunk.height > maxHeight)\n			{\n				maxHeight = chunk.height;\n			}\n		}\n\n		var x = -totalWidth / 2.0;\n		for (var i = 0; i < numChunks; ++i)\n		{\n			var chunk = textChunks[i];\n			ctx.font = chunk.font;\n			ctx.fillStyle = chunk.color;\n			canvasDrawFn.call(ctx, chunk.text, x, maxHeight / 2);\n			x += chunk.width;\n		}\n	}\n\n	function toFont(props)\n	{\n		return [\n			props[\'font-style\'],\n			props[\'font-variant\'],\n			props[\'font-weight\'],\n			props[\'font-size\'],\n			props[\'font-family\']\n		].join(\' \');\n	}\n\n\n	// Convert the object returned by the text module\n	// into something we can use for styling canvas text\n	function chunkText(context, text)\n	{\n		var tag = text.ctor;\n		if (tag === \'Text:Append\')\n		{\n			var leftChunks = chunkText(context, text._0);\n			var rightChunks = chunkText(context, text._1);\n			return leftChunks.concat(rightChunks);\n		}\n		if (tag === \'Text:Text\')\n		{\n			return [{\n				text: text._0,\n				color: context.color,\n				height: context[\'font-size\'].slice(0, -2) | 0,\n				font: toFont(context)\n			}];\n		}\n		if (tag === \'Text:Meta\')\n		{\n			var newContext = freshContext(text._0, context);\n			return chunkText(newContext, text._1);\n		}\n	}\n\n	function freshContext(props, ctx)\n	{\n		return {\n			\'font-style\': props[\'font-style\'] || ctx[\'font-style\'],\n			\'font-variant\': props[\'font-variant\'] || ctx[\'font-variant\'],\n			\'font-weight\': props[\'font-weight\'] || ctx[\'font-weight\'],\n			\'font-size\': props[\'font-size\'] || ctx[\'font-size\'],\n			\'font-family\': props[\'font-family\'] || ctx[\'font-family\'],\n			\'color\': props[\'color\'] || ctx[\'color\']\n		};\n	}\n\n	var defaultContext = {\n		\'font-style\': \'normal\',\n		\'font-variant\': \'normal\',\n		\'font-weight\': \'normal\',\n		\'font-size\': \'12px\',\n		\'font-family\': \'sans-serif\',\n		\'color\': \'black\'\n	};\n\n\n	// IMAGES\n\n	function drawImage(redo, ctx, form)\n	{\n		var img = new Image();\n		img.onload = redo;\n		img.src = form._3;\n		var w = form._0,\n			h = form._1,\n			pos = form._2,\n			srcX = pos._0,\n			srcY = pos._1,\n			srcW = w,\n			srcH = h,\n			destX = -w / 2,\n			destY = -h / 2,\n			destW = w,\n			destH = h;\n\n		ctx.scale(1, -1);\n		ctx.drawImage(img, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n	}\n\n	function renderForm(redo, ctx, form)\n	{\n		ctx.save();\n\n		var x = form.x,\n			y = form.y,\n			theta = form.theta,\n			scale = form.scale;\n\n		if (x !== 0 || y !== 0)\n		{\n			ctx.translate(x, y);\n		}\n		if (theta !== 0)\n		{\n			ctx.rotate(theta % (Math.PI * 2));\n		}\n		if (scale !== 1)\n		{\n			ctx.scale(scale, scale);\n		}\n		if (form.alpha !== 1)\n		{\n			ctx.globalAlpha = ctx.globalAlpha * form.alpha;\n		}\n\n		ctx.beginPath();\n		var f = form.form;\n		switch (f.ctor)\n		{\n			case \'FPath\':\n				drawLine(ctx, f._0, f._1);\n				break;\n\n			case \'FImage\':\n				drawImage(redo, ctx, f);\n				break;\n\n			case \'FShape\':\n				if (f._0.ctor === \'Line\')\n				{\n					f._1.closed = true;\n					drawLine(ctx, f._0._0, f._1);\n				}\n				else\n				{\n					drawShape(redo, ctx, f._0._0, f._1);\n				}\n				break;\n\n			case \'FText\':\n				fillText(redo, ctx, f._0);\n				break;\n\n			case \'FOutlinedText\':\n				strokeText(redo, ctx, f._0, f._1);\n				break;\n		}\n		ctx.restore();\n	}\n\n	function formToMatrix(form)\n	{\n	   var scale = form.scale;\n	   var matrix = A6( Transform.matrix, scale, 0, 0, scale, form.x, form.y );\n\n	   var theta = form.theta;\n	   if (theta !== 0)\n	   {\n		   matrix = A2( Transform.multiply, matrix, Transform.rotation(theta) );\n	   }\n\n	   return matrix;\n	}\n\n	function str(n)\n	{\n		if (n < 0.00001 && n > -0.00001)\n		{\n			return 0;\n		}\n		return n;\n	}\n\n	function makeTransform(w, h, form, matrices)\n	{\n		var props = form.form._0._0.props;\n		var m = A6( Transform.matrix, 1, 0, 0, -1,\n					(w - props.width ) / 2,\n					(h - props.height) / 2 );\n		var len = matrices.length;\n		for (var i = 0; i < len; ++i)\n		{\n			m = A2( Transform.multiply, m, matrices[i] );\n		}\n		m = A2( Transform.multiply, m, formToMatrix(form) );\n\n		return \'matrix(\' +\n			str( m[0]) + \', \' + str( m[3]) + \', \' +\n			str(-m[1]) + \', \' + str(-m[4]) + \', \' +\n			str( m[2]) + \', \' + str( m[5]) + \')\';\n	}\n\n	function stepperHelp(list)\n	{\n		var arr = List.toArray(list);\n		var i = 0;\n		function peekNext()\n		{\n			return i < arr.length ? arr[i]._0.form.ctor : \'\';\n		}\n		// assumes that there is a next element\n		function next()\n		{\n			var out = arr[i]._0;\n			++i;\n			return out;\n		}\n		return {\n			peekNext: peekNext,\n			next: next\n		};\n	}\n\n	function formStepper(forms)\n	{\n		var ps = [stepperHelp(forms)];\n		var matrices = [];\n		var alphas = [];\n		function peekNext()\n		{\n			var len = ps.length;\n			var formType = \'\';\n			for (var i = 0; i < len; ++i )\n			{\n				if (formType = ps[i].peekNext()) return formType;\n			}\n			return \'\';\n		}\n		// assumes that there is a next element\n		function next(ctx)\n		{\n			while (!ps[0].peekNext())\n			{\n				ps.shift();\n				matrices.pop();\n				alphas.shift();\n				if (ctx)\n				{\n					ctx.restore();\n				}\n			}\n			var out = ps[0].next();\n			var f = out.form;\n			if (f.ctor === \'FGroup\')\n			{\n				ps.unshift(stepperHelp(f._1));\n				var m = A2(Transform.multiply, f._0, formToMatrix(out));\n				ctx.save();\n				ctx.transform(m[0], m[3], m[1], m[4], m[2], m[5]);\n				matrices.push(m);\n\n				var alpha = (alphas[0] || 1) * out.alpha;\n				alphas.unshift(alpha);\n				ctx.globalAlpha = alpha;\n			}\n			return out;\n		}\n		function transforms()\n		{\n			return matrices;\n		}\n		function alpha()\n		{\n			return alphas[0] || 1;\n		}\n		return {\n			peekNext: peekNext,\n			next: next,\n			transforms: transforms,\n			alpha: alpha\n		};\n	}\n\n	function makeCanvas(w, h)\n	{\n		var canvas = NativeElement.createNode(\'canvas\');\n		canvas.style.width  = w + \'px\';\n		canvas.style.height = h + \'px\';\n		canvas.style.display = \'block\';\n		canvas.style.position = \'absolute\';\n		var ratio = window.devicePixelRatio || 1;\n		canvas.width  = w * ratio;\n		canvas.height = h * ratio;\n		return canvas;\n	}\n\n	function render(model)\n	{\n		var div = NativeElement.createNode(\'div\');\n		div.style.overflow = \'hidden\';\n		div.style.position = \'relative\';\n		update(div, model, model);\n		return div;\n	}\n\n	function nodeStepper(w, h, div)\n	{\n		var kids = div.childNodes;\n		var i = 0;\n		var ratio = window.devicePixelRatio || 1;\n\n		function transform(transforms, ctx)\n		{\n			ctx.translate( w / 2 * ratio, h / 2 * ratio );\n			ctx.scale( ratio, -ratio );\n			var len = transforms.length;\n			for (var i = 0; i < len; ++i)\n			{\n				var m = transforms[i];\n				ctx.save();\n				ctx.transform(m[0], m[3], m[1], m[4], m[2], m[5]);\n			}\n			return ctx;\n		}\n		function nextContext(transforms)\n		{\n			while (i < kids.length)\n			{\n				var node = kids[i];\n				if (node.getContext)\n				{\n					node.width = w * ratio;\n					node.height = h * ratio;\n					node.style.width = w + \'px\';\n					node.style.height = h + \'px\';\n					++i;\n					return transform(transforms, node.getContext(\'2d\'));\n				}\n				div.removeChild(node);\n			}\n			var canvas = makeCanvas(w, h);\n			div.appendChild(canvas);\n			// we have added a new node, so we must step our position\n			++i;\n			return transform(transforms, canvas.getContext(\'2d\'));\n		}\n		function addElement(matrices, alpha, form)\n		{\n			var kid = kids[i];\n			var elem = form.form._0;\n\n			var node = (!kid || kid.getContext)\n				? NativeElement.render(elem)\n				: NativeElement.update(kid, kid.oldElement, elem);\n\n			node.style.position = \'absolute\';\n			node.style.opacity = alpha * form.alpha * elem._0.props.opacity;\n			NativeElement.addTransform(node.style, makeTransform(w, h, form, matrices));\n			node.oldElement = elem;\n			++i;\n			if (!kid)\n			{\n				div.appendChild(node);\n			}\n			else\n			{\n				div.insertBefore(node, kid);\n			}\n		}\n		function clearRest()\n		{\n			while (i < kids.length)\n			{\n				div.removeChild(kids[i]);\n			}\n		}\n		return {\n			nextContext: nextContext,\n			addElement: addElement,\n			clearRest: clearRest\n		};\n	}\n\n\n	function update(div, _, model)\n	{\n		var w = model.w;\n		var h = model.h;\n\n		var forms = formStepper(model.forms);\n		var nodes = nodeStepper(w, h, div);\n		var ctx = null;\n		var formType = \'\';\n\n		while (formType = forms.peekNext())\n		{\n			// make sure we have context if we need it\n			if (ctx === null && formType !== \'FElement\')\n			{\n				ctx = nodes.nextContext(forms.transforms());\n				ctx.globalAlpha = forms.alpha();\n			}\n\n			var form = forms.next(ctx);\n			// if it is FGroup, all updates are made within formStepper when next is called.\n			if (formType === \'FElement\')\n			{\n				// update or insert an element, get a new context\n				nodes.addElement(forms.transforms(), forms.alpha(), form);\n				ctx = null;\n			}\n			else if (formType !== \'FGroup\')\n			{\n				renderForm(function() { update(div, model, model); }, ctx, form);\n			}\n		}\n		nodes.clearRest();\n		return div;\n	}\n\n\n	function collage(w, h, forms)\n	{\n		return A3(NativeElement.newElement, w, h, {\n			ctor: \'Custom\',\n			type: \'Collage\',\n			render: render,\n			update: update,\n			model: {w: w, h: h, forms: forms}\n		});\n	}\n\n	return localRuntime.Native.Graphics.Collage.values = {\n		collage: F3(collage)\n	};\n};\n\nElm.Native.Color = {};\nElm.Native.Color.make = function(localRuntime) {\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.Color = localRuntime.Native.Color || {};\n	if (localRuntime.Native.Color.values)\n	{\n		return localRuntime.Native.Color.values;\n	}\n\n	function toCss(c)\n	{\n		var format = \'\';\n		var colors = \'\';\n		if (c.ctor === \'RGBA\')\n		{\n			format = \'rgb\';\n			colors = c._0 + \', \' + c._1 + \', \' + c._2;\n		}\n		else\n		{\n			format = \'hsl\';\n			colors = (c._0 * 180 / Math.PI) + \', \' +\n					 (c._1 * 100) + \'%, \' +\n					 (c._2 * 100) + \'%\';\n		}\n		if (c._3 === 1)\n		{\n			return format + \'(\' + colors + \')\';\n		}\n		else\n		{\n			return format + \'a(\' + colors + \', \' + c._3 + \')\';\n		}\n	}\n\n	return localRuntime.Native.Color.values = {\n		toCss: toCss\n	};\n};\n\nElm.Color = Elm.Color || {};\nElm.Color.make = function (_elm) {\n   "use strict";\n   _elm.Color = _elm.Color || {};\n   if (_elm.Color.values) return _elm.Color.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm);\n   var _op = {};\n   var Radial = F5(function (a,b,c,d,e) {\n      return {ctor: "Radial",_0: a,_1: b,_2: c,_3: d,_4: e};\n   });\n   var radial = Radial;\n   var Linear = F3(function (a,b,c) {\n      return {ctor: "Linear",_0: a,_1: b,_2: c};\n   });\n   var linear = Linear;\n   var fmod = F2(function (f,n) {\n      var integer = $Basics.floor(f);\n      return $Basics.toFloat(A2($Basics._op["%"],\n      integer,\n      n)) + f - $Basics.toFloat(integer);\n   });\n   var rgbToHsl = F3(function (red,green,blue) {\n      var b = $Basics.toFloat(blue) / 255;\n      var g = $Basics.toFloat(green) / 255;\n      var r = $Basics.toFloat(red) / 255;\n      var cMax = A2($Basics.max,A2($Basics.max,r,g),b);\n      var cMin = A2($Basics.min,A2($Basics.min,r,g),b);\n      var c = cMax - cMin;\n      var lightness = (cMax + cMin) / 2;\n      var saturation = _U.eq(lightness,\n      0) ? 0 : c / (1 - $Basics.abs(2 * lightness - 1));\n      var hue = $Basics.degrees(60) * (_U.eq(cMax,r) ? A2(fmod,\n      (g - b) / c,\n      6) : _U.eq(cMax,g) ? (b - r) / c + 2 : (r - g) / c + 4);\n      return {ctor: "_Tuple3",_0: hue,_1: saturation,_2: lightness};\n   });\n   var hslToRgb = F3(function (hue,saturation,lightness) {\n      var hue$ = hue / $Basics.degrees(60);\n      var chroma = (1 - $Basics.abs(2 * lightness - 1)) * saturation;\n      var x = chroma * (1 - $Basics.abs(A2(fmod,hue$,2) - 1));\n      var _p0 = _U.cmp(hue$,0) < 0 ? {ctor: "_Tuple3"\n                                     ,_0: 0\n                                     ,_1: 0\n                                     ,_2: 0} : _U.cmp(hue$,1) < 0 ? {ctor: "_Tuple3"\n                                                                    ,_0: chroma\n                                                                    ,_1: x\n                                                                    ,_2: 0} : _U.cmp(hue$,2) < 0 ? {ctor: "_Tuple3"\n                                                                                                   ,_0: x\n                                                                                                   ,_1: chroma\n                                                                                                   ,_2: 0} : _U.cmp(hue$,3) < 0 ? {ctor: "_Tuple3"\n                                                                                                                                  ,_0: 0\n                                                                                                                                  ,_1: chroma\n                                                                                                                                  ,_2: x} : _U.cmp(hue$,\n      4) < 0 ? {ctor: "_Tuple3",_0: 0,_1: x,_2: chroma} : _U.cmp(hue$,\n      5) < 0 ? {ctor: "_Tuple3",_0: x,_1: 0,_2: chroma} : _U.cmp(hue$,\n      6) < 0 ? {ctor: "_Tuple3"\n               ,_0: chroma\n               ,_1: 0\n               ,_2: x} : {ctor: "_Tuple3",_0: 0,_1: 0,_2: 0};\n      var r = _p0._0;\n      var g = _p0._1;\n      var b = _p0._2;\n      var m = lightness - chroma / 2;\n      return {ctor: "_Tuple3",_0: r + m,_1: g + m,_2: b + m};\n   });\n   var toRgb = function (color) {\n      var _p1 = color;\n      if (_p1.ctor === "RGBA") {\n            return {red: _p1._0\n                   ,green: _p1._1\n                   ,blue: _p1._2\n                   ,alpha: _p1._3};\n         } else {\n            var _p2 = A3(hslToRgb,_p1._0,_p1._1,_p1._2);\n            var r = _p2._0;\n            var g = _p2._1;\n            var b = _p2._2;\n            return {red: $Basics.round(255 * r)\n                   ,green: $Basics.round(255 * g)\n                   ,blue: $Basics.round(255 * b)\n                   ,alpha: _p1._3};\n         }\n   };\n   var toHsl = function (color) {\n      var _p3 = color;\n      if (_p3.ctor === "HSLA") {\n            return {hue: _p3._0\n                   ,saturation: _p3._1\n                   ,lightness: _p3._2\n                   ,alpha: _p3._3};\n         } else {\n            var _p4 = A3(rgbToHsl,_p3._0,_p3._1,_p3._2);\n            var h = _p4._0;\n            var s = _p4._1;\n            var l = _p4._2;\n            return {hue: h,saturation: s,lightness: l,alpha: _p3._3};\n         }\n   };\n   var HSLA = F4(function (a,b,c,d) {\n      return {ctor: "HSLA",_0: a,_1: b,_2: c,_3: d};\n   });\n   var hsla = F4(function (hue,saturation,lightness,alpha) {\n      return A4(HSLA,\n      hue - $Basics.turns($Basics.toFloat($Basics.floor(hue / (2 * $Basics.pi)))),\n      saturation,\n      lightness,\n      alpha);\n   });\n   var hsl = F3(function (hue,saturation,lightness) {\n      return A4(hsla,hue,saturation,lightness,1);\n   });\n   var complement = function (color) {\n      var _p5 = color;\n      if (_p5.ctor === "HSLA") {\n            return A4(hsla,\n            _p5._0 + $Basics.degrees(180),\n            _p5._1,\n            _p5._2,\n            _p5._3);\n         } else {\n            var _p6 = A3(rgbToHsl,_p5._0,_p5._1,_p5._2);\n            var h = _p6._0;\n            var s = _p6._1;\n            var l = _p6._2;\n            return A4(hsla,h + $Basics.degrees(180),s,l,_p5._3);\n         }\n   };\n   var grayscale = function (p) {    return A4(HSLA,0,0,1 - p,1);};\n   var greyscale = function (p) {    return A4(HSLA,0,0,1 - p,1);};\n   var RGBA = F4(function (a,b,c,d) {\n      return {ctor: "RGBA",_0: a,_1: b,_2: c,_3: d};\n   });\n   var rgba = RGBA;\n   var rgb = F3(function (r,g,b) {    return A4(RGBA,r,g,b,1);});\n   var lightRed = A4(RGBA,239,41,41,1);\n   var red = A4(RGBA,204,0,0,1);\n   var darkRed = A4(RGBA,164,0,0,1);\n   var lightOrange = A4(RGBA,252,175,62,1);\n   var orange = A4(RGBA,245,121,0,1);\n   var darkOrange = A4(RGBA,206,92,0,1);\n   var lightYellow = A4(RGBA,255,233,79,1);\n   var yellow = A4(RGBA,237,212,0,1);\n   var darkYellow = A4(RGBA,196,160,0,1);\n   var lightGreen = A4(RGBA,138,226,52,1);\n   var green = A4(RGBA,115,210,22,1);\n   var darkGreen = A4(RGBA,78,154,6,1);\n   var lightBlue = A4(RGBA,114,159,207,1);\n   var blue = A4(RGBA,52,101,164,1);\n   var darkBlue = A4(RGBA,32,74,135,1);\n   var lightPurple = A4(RGBA,173,127,168,1);\n   var purple = A4(RGBA,117,80,123,1);\n   var darkPurple = A4(RGBA,92,53,102,1);\n   var lightBrown = A4(RGBA,233,185,110,1);\n   var brown = A4(RGBA,193,125,17,1);\n   var darkBrown = A4(RGBA,143,89,2,1);\n   var black = A4(RGBA,0,0,0,1);\n   var white = A4(RGBA,255,255,255,1);\n   var lightGrey = A4(RGBA,238,238,236,1);\n   var grey = A4(RGBA,211,215,207,1);\n   var darkGrey = A4(RGBA,186,189,182,1);\n   var lightGray = A4(RGBA,238,238,236,1);\n   var gray = A4(RGBA,211,215,207,1);\n   var darkGray = A4(RGBA,186,189,182,1);\n   var lightCharcoal = A4(RGBA,136,138,133,1);\n   var charcoal = A4(RGBA,85,87,83,1);\n   var darkCharcoal = A4(RGBA,46,52,54,1);\n   return _elm.Color.values = {_op: _op\n                              ,rgb: rgb\n                              ,rgba: rgba\n                              ,hsl: hsl\n                              ,hsla: hsla\n                              ,greyscale: greyscale\n                              ,grayscale: grayscale\n                              ,complement: complement\n                              ,linear: linear\n                              ,radial: radial\n                              ,toRgb: toRgb\n                              ,toHsl: toHsl\n                              ,red: red\n                              ,orange: orange\n                              ,yellow: yellow\n                              ,green: green\n                              ,blue: blue\n                              ,purple: purple\n                              ,brown: brown\n                              ,lightRed: lightRed\n                              ,lightOrange: lightOrange\n                              ,lightYellow: lightYellow\n                              ,lightGreen: lightGreen\n                              ,lightBlue: lightBlue\n                              ,lightPurple: lightPurple\n                              ,lightBrown: lightBrown\n                              ,darkRed: darkRed\n                              ,darkOrange: darkOrange\n                              ,darkYellow: darkYellow\n                              ,darkGreen: darkGreen\n                              ,darkBlue: darkBlue\n                              ,darkPurple: darkPurple\n                              ,darkBrown: darkBrown\n                              ,white: white\n                              ,lightGrey: lightGrey\n                              ,grey: grey\n                              ,darkGrey: darkGrey\n                              ,lightCharcoal: lightCharcoal\n                              ,charcoal: charcoal\n                              ,darkCharcoal: darkCharcoal\n                              ,black: black\n                              ,lightGray: lightGray\n                              ,gray: gray\n                              ,darkGray: darkGray};\n};\n\n// setup\nElm.Native = Elm.Native || {};\nElm.Native.Graphics = Elm.Native.Graphics || {};\nElm.Native.Graphics.Element = Elm.Native.Graphics.Element || {};\n\n// definition\nElm.Native.Graphics.Element.make = function(localRuntime) {\n	\'use strict\';\n\n	// attempt to short-circuit\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.Graphics = localRuntime.Native.Graphics || {};\n	localRuntime.Native.Graphics.Element = localRuntime.Native.Graphics.Element || {};\n	if (\'values\' in localRuntime.Native.Graphics.Element)\n	{\n		return localRuntime.Native.Graphics.Element.values;\n	}\n\n	var Color = Elm.Native.Color.make(localRuntime);\n	var List = Elm.Native.List.make(localRuntime);\n	var Maybe = Elm.Maybe.make(localRuntime);\n	var Text = Elm.Native.Text.make(localRuntime);\n	var Utils = Elm.Native.Utils.make(localRuntime);\n\n\n	// CREATION\n\n	var createNode =\n		typeof document === \'undefined\'\n			?\n				function(_)\n				{\n					return {\n						style: {},\n						appendChild: function() {}\n					};\n				}\n			:\n				function(elementType)\n				{\n					var node = document.createElement(elementType);\n					node.style.padding = \'0\';\n					node.style.margin = \'0\';\n					return node;\n				}\n			;\n\n\n	function newElement(width, height, elementPrim)\n	{\n		return {\n			ctor: \'Element_elm_builtin\',\n			_0: {\n				element: elementPrim,\n				props: {\n					id: Utils.guid(),\n					width: width,\n					height: height,\n					opacity: 1,\n					color: Maybe.Nothing,\n					href: \'\',\n					tag: \'\',\n					hover: Utils.Tuple0,\n					click: Utils.Tuple0\n				}\n			}\n		};\n	}\n\n\n	// PROPERTIES\n\n	function setProps(elem, node)\n	{\n		var props = elem.props;\n\n		var element = elem.element;\n		var width = props.width - (element.adjustWidth || 0);\n		var height = props.height - (element.adjustHeight || 0);\n		node.style.width  = (width | 0) + \'px\';\n		node.style.height = (height | 0) + \'px\';\n\n		if (props.opacity !== 1)\n		{\n			node.style.opacity = props.opacity;\n		}\n\n		if (props.color.ctor === \'Just\')\n		{\n			node.style.backgroundColor = Color.toCss(props.color._0);\n		}\n\n		if (props.tag !== \'\')\n		{\n			node.id = props.tag;\n		}\n\n		if (props.hover.ctor !== \'_Tuple0\')\n		{\n			addHover(node, props.hover);\n		}\n\n		if (props.click.ctor !== \'_Tuple0\')\n		{\n			addClick(node, props.click);\n		}\n\n		if (props.href !== \'\')\n		{\n			var anchor = createNode(\'a\');\n			anchor.href = props.href;\n			anchor.style.display = \'block\';\n			anchor.style.pointerEvents = \'auto\';\n			anchor.appendChild(node);\n			node = anchor;\n		}\n\n		return node;\n	}\n\n	function addClick(e, handler)\n	{\n		e.style.pointerEvents = \'auto\';\n		e.elm_click_handler = handler;\n		function trigger(ev)\n		{\n			e.elm_click_handler(Utils.Tuple0);\n			ev.stopPropagation();\n		}\n		e.elm_click_trigger = trigger;\n		e.addEventListener(\'click\', trigger);\n	}\n\n	function removeClick(e, handler)\n	{\n		if (e.elm_click_trigger)\n		{\n			e.removeEventListener(\'click\', e.elm_click_trigger);\n			e.elm_click_trigger = null;\n			e.elm_click_handler = null;\n		}\n	}\n\n	function addHover(e, handler)\n	{\n		e.style.pointerEvents = \'auto\';\n		e.elm_hover_handler = handler;\n		e.elm_hover_count = 0;\n\n		function over(evt)\n		{\n			if (e.elm_hover_count++ > 0) return;\n			e.elm_hover_handler(true);\n			evt.stopPropagation();\n		}\n		function out(evt)\n		{\n			if (e.contains(evt.toElement || evt.relatedTarget)) return;\n			e.elm_hover_count = 0;\n			e.elm_hover_handler(false);\n			evt.stopPropagation();\n		}\n		e.elm_hover_over = over;\n		e.elm_hover_out = out;\n		e.addEventListener(\'mouseover\', over);\n		e.addEventListener(\'mouseout\', out);\n	}\n\n	function removeHover(e)\n	{\n		e.elm_hover_handler = null;\n		if (e.elm_hover_over)\n		{\n			e.removeEventListener(\'mouseover\', e.elm_hover_over);\n			e.elm_hover_over = null;\n		}\n		if (e.elm_hover_out)\n		{\n			e.removeEventListener(\'mouseout\', e.elm_hover_out);\n			e.elm_hover_out = null;\n		}\n	}\n\n\n	// IMAGES\n\n	function image(props, img)\n	{\n		switch (img._0.ctor)\n		{\n			case \'Plain\':\n				return plainImage(img._3);\n\n			case \'Fitted\':\n				return fittedImage(props.width, props.height, img._3);\n\n			case \'Cropped\':\n				return croppedImage(img, props.width, props.height, img._3);\n\n			case \'Tiled\':\n				return tiledImage(img._3);\n		}\n	}\n\n	function plainImage(src)\n	{\n		var img = createNode(\'img\');\n		img.src = src;\n		img.name = src;\n		img.style.display = \'block\';\n		return img;\n	}\n\n	function tiledImage(src)\n	{\n		var div = createNode(\'div\');\n		div.style.backgroundImage = \'url(\' + src + \')\';\n		return div;\n	}\n\n	function fittedImage(w, h, src)\n	{\n		var div = createNode(\'div\');\n		div.style.background = \'url(\' + src + \') no-repeat center\';\n		div.style.webkitBackgroundSize = \'cover\';\n		div.style.MozBackgroundSize = \'cover\';\n		div.style.OBackgroundSize = \'cover\';\n		div.style.backgroundSize = \'cover\';\n		return div;\n	}\n\n	function croppedImage(elem, w, h, src)\n	{\n		var pos = elem._0._0;\n		var e = createNode(\'div\');\n		e.style.overflow = \'hidden\';\n\n		var img = createNode(\'img\');\n		img.onload = function() {\n			var sw = w / elem._1, sh = h / elem._2;\n			img.style.width = ((this.width * sw) | 0) + \'px\';\n			img.style.height = ((this.height * sh) | 0) + \'px\';\n			img.style.marginLeft = ((- pos._0 * sw) | 0) + \'px\';\n			img.style.marginTop = ((- pos._1 * sh) | 0) + \'px\';\n		};\n		img.src = src;\n		img.name = src;\n		e.appendChild(img);\n		return e;\n	}\n\n\n	// FLOW\n\n	function goOut(node)\n	{\n		node.style.position = \'absolute\';\n		return node;\n	}\n	function goDown(node)\n	{\n		return node;\n	}\n	function goRight(node)\n	{\n		node.style.styleFloat = \'left\';\n		node.style.cssFloat = \'left\';\n		return node;\n	}\n\n	var directionTable = {\n		DUp: goDown,\n		DDown: goDown,\n		DLeft: goRight,\n		DRight: goRight,\n		DIn: goOut,\n		DOut: goOut\n	};\n	function needsReversal(dir)\n	{\n		return dir === \'DUp\' || dir === \'DLeft\' || dir === \'DIn\';\n	}\n\n	function flow(dir, elist)\n	{\n		var array = List.toArray(elist);\n		var container = createNode(\'div\');\n		var goDir = directionTable[dir];\n		if (goDir === goOut)\n		{\n			container.style.pointerEvents = \'none\';\n		}\n		if (needsReversal(dir))\n		{\n			array.reverse();\n		}\n		var len = array.length;\n		for (var i = 0; i < len; ++i)\n		{\n			container.appendChild(goDir(render(array[i])));\n		}\n		return container;\n	}\n\n\n	// CONTAINER\n\n	function toPos(pos)\n	{\n		return pos.ctor === \'Absolute\'\n			? pos._0 + \'px\'\n			: (pos._0 * 100) + \'%\';\n	}\n\n	// must clear right, left, top, bottom, and transform\n	// before calling this function\n	function setPos(pos, wrappedElement, e)\n	{\n		var elem = wrappedElement._0;\n		var element = elem.element;\n		var props = elem.props;\n		var w = props.width + (element.adjustWidth ? element.adjustWidth : 0);\n		var h = props.height + (element.adjustHeight ? element.adjustHeight : 0);\n\n		e.style.position = \'absolute\';\n		e.style.margin = \'auto\';\n		var transform = \'\';\n\n		switch (pos.horizontal.ctor)\n		{\n			case \'P\':\n				e.style.right = toPos(pos.x);\n				e.style.removeProperty(\'left\');\n				break;\n\n			case \'Z\':\n				transform = \'translateX(\' + ((-w / 2) | 0) + \'px) \';\n\n			case \'N\':\n				e.style.left = toPos(pos.x);\n				e.style.removeProperty(\'right\');\n				break;\n		}\n		switch (pos.vertical.ctor)\n		{\n			case \'N\':\n				e.style.bottom = toPos(pos.y);\n				e.style.removeProperty(\'top\');\n				break;\n\n			case \'Z\':\n				transform += \'translateY(\' + ((-h / 2) | 0) + \'px)\';\n\n			case \'P\':\n				e.style.top = toPos(pos.y);\n				e.style.removeProperty(\'bottom\');\n				break;\n		}\n		if (transform !== \'\')\n		{\n			addTransform(e.style, transform);\n		}\n		return e;\n	}\n\n	function addTransform(style, transform)\n	{\n		style.transform       = transform;\n		style.msTransform     = transform;\n		style.MozTransform    = transform;\n		style.webkitTransform = transform;\n		style.OTransform      = transform;\n	}\n\n	function container(pos, elem)\n	{\n		var e = render(elem);\n		setPos(pos, elem, e);\n		var div = createNode(\'div\');\n		div.style.position = \'relative\';\n		div.style.overflow = \'hidden\';\n		div.appendChild(e);\n		return div;\n	}\n\n\n	function rawHtml(elem)\n	{\n		var html = elem.html;\n		var align = elem.align;\n\n		var div = createNode(\'div\');\n		div.innerHTML = html;\n		div.style.visibility = \'hidden\';\n		if (align)\n		{\n			div.style.textAlign = align;\n		}\n		div.style.visibility = \'visible\';\n		div.style.pointerEvents = \'auto\';\n		return div;\n	}\n\n\n	// RENDER\n\n	function render(wrappedElement)\n	{\n		var elem = wrappedElement._0;\n		return setProps(elem, makeElement(elem));\n	}\n\n	function makeElement(e)\n	{\n		var elem = e.element;\n		switch (elem.ctor)\n		{\n			case \'Image\':\n				return image(e.props, elem);\n\n			case \'Flow\':\n				return flow(elem._0.ctor, elem._1);\n\n			case \'Container\':\n				return container(elem._0, elem._1);\n\n			case \'Spacer\':\n				return createNode(\'div\');\n\n			case \'RawHtml\':\n				return rawHtml(elem);\n\n			case \'Custom\':\n				return elem.render(elem.model);\n		}\n	}\n\n	function updateAndReplace(node, curr, next)\n	{\n		var newNode = update(node, curr, next);\n		if (newNode !== node)\n		{\n			node.parentNode.replaceChild(newNode, node);\n		}\n		return newNode;\n	}\n\n\n	// UPDATE\n\n	function update(node, wrappedCurrent, wrappedNext)\n	{\n		var curr = wrappedCurrent._0;\n		var next = wrappedNext._0;\n		var rootNode = node;\n		if (node.tagName === \'A\')\n		{\n			node = node.firstChild;\n		}\n		if (curr.props.id === next.props.id)\n		{\n			updateProps(node, curr, next);\n			return rootNode;\n		}\n		if (curr.element.ctor !== next.element.ctor)\n		{\n			return render(wrappedNext);\n		}\n		var nextE = next.element;\n		var currE = curr.element;\n		switch (nextE.ctor)\n		{\n			case \'Spacer\':\n				updateProps(node, curr, next);\n				return rootNode;\n\n			case \'RawHtml\':\n				if(currE.html.valueOf() !== nextE.html.valueOf())\n				{\n					node.innerHTML = nextE.html;\n				}\n				updateProps(node, curr, next);\n				return rootNode;\n\n			case \'Image\':\n				if (nextE._0.ctor === \'Plain\')\n				{\n					if (nextE._3 !== currE._3)\n					{\n						node.src = nextE._3;\n					}\n				}\n				else if (!Utils.eq(nextE, currE)\n					|| next.props.width !== curr.props.width\n					|| next.props.height !== curr.props.height)\n				{\n					return render(wrappedNext);\n				}\n				updateProps(node, curr, next);\n				return rootNode;\n\n			case \'Flow\':\n				var arr = List.toArray(nextE._1);\n				for (var i = arr.length; i--; )\n				{\n					arr[i] = arr[i]._0.element.ctor;\n				}\n				if (nextE._0.ctor !== currE._0.ctor)\n				{\n					return render(wrappedNext);\n				}\n				var nexts = List.toArray(nextE._1);\n				var kids = node.childNodes;\n				if (nexts.length !== kids.length)\n				{\n					return render(wrappedNext);\n				}\n				var currs = List.toArray(currE._1);\n				var dir = nextE._0.ctor;\n				var goDir = directionTable[dir];\n				var toReverse = needsReversal(dir);\n				var len = kids.length;\n				for (var i = len; i--; )\n				{\n					var subNode = kids[toReverse ? len - i - 1 : i];\n					goDir(updateAndReplace(subNode, currs[i], nexts[i]));\n				}\n				updateProps(node, curr, next);\n				return rootNode;\n\n			case \'Container\':\n				var subNode = node.firstChild;\n				var newSubNode = updateAndReplace(subNode, currE._1, nextE._1);\n				setPos(nextE._0, nextE._1, newSubNode);\n				updateProps(node, curr, next);\n				return rootNode;\n\n			case \'Custom\':\n				if (currE.type === nextE.type)\n				{\n					var updatedNode = nextE.update(node, currE.model, nextE.model);\n					updateProps(updatedNode, curr, next);\n					return updatedNode;\n				}\n				return render(wrappedNext);\n		}\n	}\n\n	function updateProps(node, curr, next)\n	{\n		var nextProps = next.props;\n		var currProps = curr.props;\n\n		var element = next.element;\n		var width = nextProps.width - (element.adjustWidth || 0);\n		var height = nextProps.height - (element.adjustHeight || 0);\n		if (width !== currProps.width)\n		{\n			node.style.width = (width | 0) + \'px\';\n		}\n		if (height !== currProps.height)\n		{\n			node.style.height = (height | 0) + \'px\';\n		}\n\n		if (nextProps.opacity !== currProps.opacity)\n		{\n			node.style.opacity = nextProps.opacity;\n		}\n\n		var nextColor = nextProps.color.ctor === \'Just\'\n			? Color.toCss(nextProps.color._0)\n			: \'\';\n		if (node.style.backgroundColor !== nextColor)\n		{\n			node.style.backgroundColor = nextColor;\n		}\n\n		if (nextProps.tag !== currProps.tag)\n		{\n			node.id = nextProps.tag;\n		}\n\n		if (nextProps.href !== currProps.href)\n		{\n			if (currProps.href === \'\')\n			{\n				// add a surrounding href\n				var anchor = createNode(\'a\');\n				anchor.href = nextProps.href;\n				anchor.style.display = \'block\';\n				anchor.style.pointerEvents = \'auto\';\n\n				node.parentNode.replaceChild(anchor, node);\n				anchor.appendChild(node);\n			}\n			else if (nextProps.href === \'\')\n			{\n				// remove the surrounding href\n				var anchor = node.parentNode;\n				anchor.parentNode.replaceChild(node, anchor);\n			}\n			else\n			{\n				// just update the link\n				node.parentNode.href = nextProps.href;\n			}\n		}\n\n		// update click and hover handlers\n		var removed = false;\n\n		// update hover handlers\n		if (currProps.hover.ctor === \'_Tuple0\')\n		{\n			if (nextProps.hover.ctor !== \'_Tuple0\')\n			{\n				addHover(node, nextProps.hover);\n			}\n		}\n		else\n		{\n			if (nextProps.hover.ctor === \'_Tuple0\')\n			{\n				removed = true;\n				removeHover(node);\n			}\n			else\n			{\n				node.elm_hover_handler = nextProps.hover;\n			}\n		}\n\n		// update click handlers\n		if (currProps.click.ctor === \'_Tuple0\')\n		{\n			if (nextProps.click.ctor !== \'_Tuple0\')\n			{\n				addClick(node, nextProps.click);\n			}\n		}\n		else\n		{\n			if (nextProps.click.ctor === \'_Tuple0\')\n			{\n				removed = true;\n				removeClick(node);\n			}\n			else\n			{\n				node.elm_click_handler = nextProps.click;\n			}\n		}\n\n		// stop capturing clicks if\n		if (removed\n			&& nextProps.hover.ctor === \'_Tuple0\'\n			&& nextProps.click.ctor === \'_Tuple0\')\n		{\n			node.style.pointerEvents = \'none\';\n		}\n	}\n\n\n	// TEXT\n\n	function block(align)\n	{\n		return function(text)\n		{\n			var raw = {\n				ctor: \'RawHtml\',\n				html: Text.renderHtml(text),\n				align: align\n			};\n			var pos = htmlHeight(0, raw);\n			return newElement(pos._0, pos._1, raw);\n		};\n	}\n\n	function markdown(text)\n	{\n		var raw = {\n			ctor: \'RawHtml\',\n			html: text,\n			align: null\n		};\n		var pos = htmlHeight(0, raw);\n		return newElement(pos._0, pos._1, raw);\n	}\n\n	var htmlHeight =\n		typeof document !== \'undefined\'\n			? realHtmlHeight\n			: function(a, b) { return Utils.Tuple2(0, 0); };\n\n	function realHtmlHeight(width, rawHtml)\n	{\n		// create dummy node\n		var temp = document.createElement(\'div\');\n		temp.innerHTML = rawHtml.html;\n		if (width > 0)\n		{\n			temp.style.width = width + \'px\';\n		}\n		temp.style.visibility = \'hidden\';\n		temp.style.styleFloat = \'left\';\n		temp.style.cssFloat = \'left\';\n\n		document.body.appendChild(temp);\n\n		// get dimensions\n		var style = window.getComputedStyle(temp, null);\n		var w = Math.ceil(style.getPropertyValue(\'width\').slice(0, -2) - 0);\n		var h = Math.ceil(style.getPropertyValue(\'height\').slice(0, -2) - 0);\n		document.body.removeChild(temp);\n		return Utils.Tuple2(w, h);\n	}\n\n\n	return localRuntime.Native.Graphics.Element.values = {\n		render: render,\n		update: update,\n		updateAndReplace: updateAndReplace,\n\n		createNode: createNode,\n		newElement: F3(newElement),\n		addTransform: addTransform,\n		htmlHeight: F2(htmlHeight),\n		guid: Utils.guid,\n\n		block: block,\n		markdown: markdown\n	};\n};\n\nElm.Native.Text = {};\nElm.Native.Text.make = function(localRuntime) {\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.Text = localRuntime.Native.Text || {};\n	if (localRuntime.Native.Text.values)\n	{\n		return localRuntime.Native.Text.values;\n	}\n\n	var toCss = Elm.Native.Color.make(localRuntime).toCss;\n	var List = Elm.Native.List.make(localRuntime);\n\n\n	// CONSTRUCTORS\n\n	function fromString(str)\n	{\n		return {\n			ctor: \'Text:Text\',\n			_0: str\n		};\n	}\n\n	function append(a, b)\n	{\n		return {\n			ctor: \'Text:Append\',\n			_0: a,\n			_1: b\n		};\n	}\n\n	function addMeta(field, value, text)\n	{\n		var newProps = {};\n		var newText = {\n			ctor: \'Text:Meta\',\n			_0: newProps,\n			_1: text\n		};\n\n		if (text.ctor === \'Text:Meta\')\n		{\n			newText._1 = text._1;\n			var props = text._0;\n			for (var i = metaKeys.length; i--; )\n			{\n				var key = metaKeys[i];\n				var val = props[key];\n				if (val)\n				{\n					newProps[key] = val;\n				}\n			}\n		}\n		newProps[field] = value;\n		return newText;\n	}\n\n	var metaKeys = [\n		\'font-size\',\n		\'font-family\',\n		\'font-style\',\n		\'font-weight\',\n		\'href\',\n		\'text-decoration\',\n		\'color\'\n	];\n\n\n	// conversions from Elm values to CSS\n\n	function toTypefaces(list)\n	{\n		var typefaces = List.toArray(list);\n		for (var i = typefaces.length; i--; )\n		{\n			var typeface = typefaces[i];\n			if (typeface.indexOf(\' \') > -1)\n			{\n				typefaces[i] = "\'" + typeface + "\'";\n			}\n		}\n		return typefaces.join(\',\');\n	}\n\n	function toLine(line)\n	{\n		var ctor = line.ctor;\n		return ctor === \'Under\'\n			? \'underline\'\n			: ctor === \'Over\'\n				? \'overline\'\n				: \'line-through\';\n	}\n\n	// setting styles of Text\n\n	function style(style, text)\n	{\n		var newText = addMeta(\'color\', toCss(style.color), text);\n		var props = newText._0;\n\n		if (style.typeface.ctor !== \'[]\')\n		{\n			props[\'font-family\'] = toTypefaces(style.typeface);\n		}\n		if (style.height.ctor !== \'Nothing\')\n		{\n			props[\'font-size\'] = style.height._0 + \'px\';\n		}\n		if (style.bold)\n		{\n			props[\'font-weight\'] = \'bold\';\n		}\n		if (style.italic)\n		{\n			props[\'font-style\'] = \'italic\';\n		}\n		if (style.line.ctor !== \'Nothing\')\n		{\n			props[\'text-decoration\'] = toLine(style.line._0);\n		}\n		return newText;\n	}\n\n	function height(px, text)\n	{\n		return addMeta(\'font-size\', px + \'px\', text);\n	}\n\n	function typeface(names, text)\n	{\n		return addMeta(\'font-family\', toTypefaces(names), text);\n	}\n\n	function monospace(text)\n	{\n		return addMeta(\'font-family\', \'monospace\', text);\n	}\n\n	function italic(text)\n	{\n		return addMeta(\'font-style\', \'italic\', text);\n	}\n\n	function bold(text)\n	{\n		return addMeta(\'font-weight\', \'bold\', text);\n	}\n\n	function link(href, text)\n	{\n		return addMeta(\'href\', href, text);\n	}\n\n	function line(line, text)\n	{\n		return addMeta(\'text-decoration\', toLine(line), text);\n	}\n\n	function color(color, text)\n	{\n		return addMeta(\'color\', toCss(color), text);\n	}\n\n\n	// RENDER\n\n	function renderHtml(text)\n	{\n		var tag = text.ctor;\n		if (tag === \'Text:Append\')\n		{\n			return renderHtml(text._0) + renderHtml(text._1);\n		}\n		if (tag === \'Text:Text\')\n		{\n			return properEscape(text._0);\n		}\n		if (tag === \'Text:Meta\')\n		{\n			return renderMeta(text._0, renderHtml(text._1));\n		}\n	}\n\n	function renderMeta(metas, string)\n	{\n		var href = metas.href;\n		if (href)\n		{\n			string = \'<a href="\' + href + \'">\' + string + \'</a>\';\n		}\n		var styles = \'\';\n		for (var key in metas)\n		{\n			if (key === \'href\')\n			{\n				continue;\n			}\n			styles += key + \':\' + metas[key] + \';\';\n		}\n		if (styles)\n		{\n			string = \'<span style="\' + styles + \'">\' + string + \'</span>\';\n		}\n		return string;\n	}\n\n	function properEscape(str)\n	{\n		if (str.length === 0)\n		{\n			return str;\n		}\n		str = str //.replace(/&/g,  \'&#38;\')\n			.replace(/"/g,  \'&#34;\')\n			.replace(/\'/g,  \'&#39;\')\n			.replace(/</g,  \'&#60;\')\n			.replace(/>/g,  \'&#62;\');\n		var arr = str.split(\'\\n\');\n		for (var i = arr.length; i--; )\n		{\n			arr[i] = makeSpaces(arr[i]);\n		}\n		return arr.join(\'<br/>\');\n	}\n\n	function makeSpaces(s)\n	{\n		if (s.length === 0)\n		{\n			return s;\n		}\n		var arr = s.split(\'\');\n		if (arr[0] === \' \')\n		{\n			arr[0] = \'&nbsp;\';\n		}\n		for (var i = arr.length; --i; )\n		{\n			if (arr[i][0] === \' \' && arr[i - 1] === \' \')\n			{\n				arr[i - 1] = arr[i - 1] + arr[i];\n				arr[i] = \'\';\n			}\n		}\n		for (var i = arr.length; i--; )\n		{\n			if (arr[i].length > 1 && arr[i][0] === \' \')\n			{\n				var spaces = arr[i].split(\'\');\n				for (var j = spaces.length - 2; j >= 0; j -= 2)\n				{\n					spaces[j] = \'&nbsp;\';\n				}\n				arr[i] = spaces.join(\'\');\n			}\n		}\n		arr = arr.join(\'\');\n		if (arr[arr.length - 1] === \' \')\n		{\n			return arr.slice(0, -1) + \'&nbsp;\';\n		}\n		return arr;\n	}\n\n\n	return localRuntime.Native.Text.values = {\n		fromString: fromString,\n		append: F2(append),\n\n		height: F2(height),\n		italic: italic,\n		bold: bold,\n		line: F2(line),\n		monospace: monospace,\n		typeface: F2(typeface),\n		color: F2(color),\n		link: F2(link),\n		style: F2(style),\n\n		toTypefaces: toTypefaces,\n		toLine: toLine,\n		renderHtml: renderHtml\n	};\n};\n\nElm.Text = Elm.Text || {};\nElm.Text.make = function (_elm) {\n   "use strict";\n   _elm.Text = _elm.Text || {};\n   if (_elm.Text.values) return _elm.Text.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Color = Elm.Color.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Text = Elm.Native.Text.make(_elm);\n   var _op = {};\n   var line = $Native$Text.line;\n   var italic = $Native$Text.italic;\n   var bold = $Native$Text.bold;\n   var color = $Native$Text.color;\n   var height = $Native$Text.height;\n   var link = $Native$Text.link;\n   var monospace = $Native$Text.monospace;\n   var typeface = $Native$Text.typeface;\n   var style = $Native$Text.style;\n   var append = $Native$Text.append;\n   var fromString = $Native$Text.fromString;\n   var empty = fromString("");\n   var concat = function (texts) {\n      return A3($List.foldr,append,empty,texts);\n   };\n   var join = F2(function (seperator,texts) {\n      return concat(A2($List.intersperse,seperator,texts));\n   });\n   var defaultStyle = {typeface: _U.list([])\n                      ,height: $Maybe.Nothing\n                      ,color: $Color.black\n                      ,bold: false\n                      ,italic: false\n                      ,line: $Maybe.Nothing};\n   var Style = F6(function (a,b,c,d,e,f) {\n      return {typeface: a\n             ,height: b\n             ,color: c\n             ,bold: d\n             ,italic: e\n             ,line: f};\n   });\n   var Through = {ctor: "Through"};\n   var Over = {ctor: "Over"};\n   var Under = {ctor: "Under"};\n   var Text = {ctor: "Text"};\n   return _elm.Text.values = {_op: _op\n                             ,fromString: fromString\n                             ,empty: empty\n                             ,append: append\n                             ,concat: concat\n                             ,join: join\n                             ,link: link\n                             ,style: style\n                             ,defaultStyle: defaultStyle\n                             ,typeface: typeface\n                             ,monospace: monospace\n                             ,height: height\n                             ,color: color\n                             ,bold: bold\n                             ,italic: italic\n                             ,line: line\n                             ,Style: Style\n                             ,Under: Under\n                             ,Over: Over\n                             ,Through: Through};\n};\nElm.Graphics = Elm.Graphics || {};\nElm.Graphics.Element = Elm.Graphics.Element || {};\nElm.Graphics.Element.make = function (_elm) {\n   "use strict";\n   _elm.Graphics = _elm.Graphics || {};\n   _elm.Graphics.Element = _elm.Graphics.Element || {};\n   if (_elm.Graphics.Element.values)\n   return _elm.Graphics.Element.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Color = Elm.Color.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Graphics$Element = Elm.Native.Graphics.Element.make(_elm),\n   $Text = Elm.Text.make(_elm);\n   var _op = {};\n   var DOut = {ctor: "DOut"};\n   var outward = DOut;\n   var DIn = {ctor: "DIn"};\n   var inward = DIn;\n   var DRight = {ctor: "DRight"};\n   var right = DRight;\n   var DLeft = {ctor: "DLeft"};\n   var left = DLeft;\n   var DDown = {ctor: "DDown"};\n   var down = DDown;\n   var DUp = {ctor: "DUp"};\n   var up = DUp;\n   var RawPosition = F4(function (a,b,c,d) {\n      return {horizontal: a,vertical: b,x: c,y: d};\n   });\n   var Position = function (a) {\n      return {ctor: "Position",_0: a};\n   };\n   var Relative = function (a) {\n      return {ctor: "Relative",_0: a};\n   };\n   var relative = Relative;\n   var Absolute = function (a) {\n      return {ctor: "Absolute",_0: a};\n   };\n   var absolute = Absolute;\n   var N = {ctor: "N"};\n   var bottomLeft = Position({horizontal: N\n                             ,vertical: N\n                             ,x: Absolute(0)\n                             ,y: Absolute(0)});\n   var bottomLeftAt = F2(function (x,y) {\n      return Position({horizontal: N,vertical: N,x: x,y: y});\n   });\n   var Z = {ctor: "Z"};\n   var middle = Position({horizontal: Z\n                         ,vertical: Z\n                         ,x: Relative(0.5)\n                         ,y: Relative(0.5)});\n   var midLeft = Position({horizontal: N\n                          ,vertical: Z\n                          ,x: Absolute(0)\n                          ,y: Relative(0.5)});\n   var midBottom = Position({horizontal: Z\n                            ,vertical: N\n                            ,x: Relative(0.5)\n                            ,y: Absolute(0)});\n   var middleAt = F2(function (x,y) {\n      return Position({horizontal: Z,vertical: Z,x: x,y: y});\n   });\n   var midLeftAt = F2(function (x,y) {\n      return Position({horizontal: N,vertical: Z,x: x,y: y});\n   });\n   var midBottomAt = F2(function (x,y) {\n      return Position({horizontal: Z,vertical: N,x: x,y: y});\n   });\n   var P = {ctor: "P"};\n   var topLeft = Position({horizontal: N\n                          ,vertical: P\n                          ,x: Absolute(0)\n                          ,y: Absolute(0)});\n   var topRight = Position({horizontal: P\n                           ,vertical: P\n                           ,x: Absolute(0)\n                           ,y: Absolute(0)});\n   var bottomRight = Position({horizontal: P\n                              ,vertical: N\n                              ,x: Absolute(0)\n                              ,y: Absolute(0)});\n   var midRight = Position({horizontal: P\n                           ,vertical: Z\n                           ,x: Absolute(0)\n                           ,y: Relative(0.5)});\n   var midTop = Position({horizontal: Z\n                         ,vertical: P\n                         ,x: Relative(0.5)\n                         ,y: Absolute(0)});\n   var topLeftAt = F2(function (x,y) {\n      return Position({horizontal: N,vertical: P,x: x,y: y});\n   });\n   var topRightAt = F2(function (x,y) {\n      return Position({horizontal: P,vertical: P,x: x,y: y});\n   });\n   var bottomRightAt = F2(function (x,y) {\n      return Position({horizontal: P,vertical: N,x: x,y: y});\n   });\n   var midRightAt = F2(function (x,y) {\n      return Position({horizontal: P,vertical: Z,x: x,y: y});\n   });\n   var midTopAt = F2(function (x,y) {\n      return Position({horizontal: Z,vertical: P,x: x,y: y});\n   });\n   var justified = $Native$Graphics$Element.block("justify");\n   var centered = $Native$Graphics$Element.block("center");\n   var rightAligned = $Native$Graphics$Element.block("right");\n   var leftAligned = $Native$Graphics$Element.block("left");\n   var show = function (value) {\n      return leftAligned($Text.monospace($Text.fromString($Basics.toString(value))));\n   };\n   var Tiled = {ctor: "Tiled"};\n   var Cropped = function (a) {\n      return {ctor: "Cropped",_0: a};\n   };\n   var Fitted = {ctor: "Fitted"};\n   var Plain = {ctor: "Plain"};\n   var Custom = {ctor: "Custom"};\n   var RawHtml = {ctor: "RawHtml"};\n   var Spacer = {ctor: "Spacer"};\n   var Flow = F2(function (a,b) {\n      return {ctor: "Flow",_0: a,_1: b};\n   });\n   var Container = F2(function (a,b) {\n      return {ctor: "Container",_0: a,_1: b};\n   });\n   var Image = F4(function (a,b,c,d) {\n      return {ctor: "Image",_0: a,_1: b,_2: c,_3: d};\n   });\n   var newElement = $Native$Graphics$Element.newElement;\n   var image = F3(function (w,h,src) {\n      return A3(newElement,w,h,A4(Image,Plain,w,h,src));\n   });\n   var fittedImage = F3(function (w,h,src) {\n      return A3(newElement,w,h,A4(Image,Fitted,w,h,src));\n   });\n   var croppedImage = F4(function (pos,w,h,src) {\n      return A3(newElement,w,h,A4(Image,Cropped(pos),w,h,src));\n   });\n   var tiledImage = F3(function (w,h,src) {\n      return A3(newElement,w,h,A4(Image,Tiled,w,h,src));\n   });\n   var container = F4(function (w,h,_p0,e) {\n      var _p1 = _p0;\n      return A3(newElement,w,h,A2(Container,_p1._0,e));\n   });\n   var spacer = F2(function (w,h) {\n      return A3(newElement,w,h,Spacer);\n   });\n   var sizeOf = function (_p2) {\n      var _p3 = _p2;\n      var _p4 = _p3._0;\n      return {ctor: "_Tuple2"\n             ,_0: _p4.props.width\n             ,_1: _p4.props.height};\n   };\n   var heightOf = function (_p5) {\n      var _p6 = _p5;\n      return _p6._0.props.height;\n   };\n   var widthOf = function (_p7) {\n      var _p8 = _p7;\n      return _p8._0.props.width;\n   };\n   var above = F2(function (hi,lo) {\n      return A3(newElement,\n      A2($Basics.max,widthOf(hi),widthOf(lo)),\n      heightOf(hi) + heightOf(lo),\n      A2(Flow,DDown,_U.list([hi,lo])));\n   });\n   var below = F2(function (lo,hi) {\n      return A3(newElement,\n      A2($Basics.max,widthOf(hi),widthOf(lo)),\n      heightOf(hi) + heightOf(lo),\n      A2(Flow,DDown,_U.list([hi,lo])));\n   });\n   var beside = F2(function (lft,rht) {\n      return A3(newElement,\n      widthOf(lft) + widthOf(rht),\n      A2($Basics.max,heightOf(lft),heightOf(rht)),\n      A2(Flow,right,_U.list([lft,rht])));\n   });\n   var layers = function (es) {\n      var hs = A2($List.map,heightOf,es);\n      var ws = A2($List.map,widthOf,es);\n      return A3(newElement,\n      A2($Maybe.withDefault,0,$List.maximum(ws)),\n      A2($Maybe.withDefault,0,$List.maximum(hs)),\n      A2(Flow,DOut,es));\n   };\n   var empty = A2(spacer,0,0);\n   var flow = F2(function (dir,es) {\n      var newFlow = F2(function (w,h) {\n         return A3(newElement,w,h,A2(Flow,dir,es));\n      });\n      var maxOrZero = function (list) {\n         return A2($Maybe.withDefault,0,$List.maximum(list));\n      };\n      var hs = A2($List.map,heightOf,es);\n      var ws = A2($List.map,widthOf,es);\n      if (_U.eq(es,_U.list([]))) return empty; else {\n            var _p9 = dir;\n            switch (_p9.ctor)\n            {case "DUp": return A2(newFlow,maxOrZero(ws),$List.sum(hs));\n               case "DDown": return A2(newFlow,maxOrZero(ws),$List.sum(hs));\n               case "DLeft": return A2(newFlow,$List.sum(ws),maxOrZero(hs));\n               case "DRight": return A2(newFlow,$List.sum(ws),maxOrZero(hs));\n               case "DIn": return A2(newFlow,maxOrZero(ws),maxOrZero(hs));\n               default: return A2(newFlow,maxOrZero(ws),maxOrZero(hs));}\n         }\n   });\n   var Properties = F9(function (a,b,c,d,e,f,g,h,i) {\n      return {id: a\n             ,width: b\n             ,height: c\n             ,opacity: d\n             ,color: e\n             ,href: f\n             ,tag: g\n             ,hover: h\n             ,click: i};\n   });\n   var Element_elm_builtin = function (a) {\n      return {ctor: "Element_elm_builtin",_0: a};\n   };\n   var width = F2(function (newWidth,_p10) {\n      var _p11 = _p10;\n      var _p14 = _p11._0.props;\n      var _p13 = _p11._0.element;\n      var newHeight = function () {\n         var _p12 = _p13;\n         switch (_p12.ctor)\n         {case "Image":\n            return $Basics.round($Basics.toFloat(_p12._2) / $Basics.toFloat(_p12._1) * $Basics.toFloat(newWidth));\n            case "RawHtml":\n            return $Basics.snd(A2($Native$Graphics$Element.htmlHeight,\n              newWidth,\n              _p13));\n            default: return _p14.height;}\n      }();\n      return Element_elm_builtin({element: _p13\n                                 ,props: _U.update(_p14,{width: newWidth,height: newHeight})});\n   });\n   var height = F2(function (newHeight,_p15) {\n      var _p16 = _p15;\n      return Element_elm_builtin({element: _p16._0.element\n                                 ,props: _U.update(_p16._0.props,{height: newHeight})});\n   });\n   var size = F3(function (w,h,e) {\n      return A2(height,h,A2(width,w,e));\n   });\n   var opacity = F2(function (givenOpacity,_p17) {\n      var _p18 = _p17;\n      return Element_elm_builtin({element: _p18._0.element\n                                 ,props: _U.update(_p18._0.props,{opacity: givenOpacity})});\n   });\n   var color = F2(function (clr,_p19) {\n      var _p20 = _p19;\n      return Element_elm_builtin({element: _p20._0.element\n                                 ,props: _U.update(_p20._0.props,{color: $Maybe.Just(clr)})});\n   });\n   var tag = F2(function (name,_p21) {\n      var _p22 = _p21;\n      return Element_elm_builtin({element: _p22._0.element\n                                 ,props: _U.update(_p22._0.props,{tag: name})});\n   });\n   var link = F2(function (href,_p23) {\n      var _p24 = _p23;\n      return Element_elm_builtin({element: _p24._0.element\n                                 ,props: _U.update(_p24._0.props,{href: href})});\n   });\n   return _elm.Graphics.Element.values = {_op: _op\n                                         ,image: image\n                                         ,fittedImage: fittedImage\n                                         ,croppedImage: croppedImage\n                                         ,tiledImage: tiledImage\n                                         ,leftAligned: leftAligned\n                                         ,rightAligned: rightAligned\n                                         ,centered: centered\n                                         ,justified: justified\n                                         ,show: show\n                                         ,width: width\n                                         ,height: height\n                                         ,size: size\n                                         ,color: color\n                                         ,opacity: opacity\n                                         ,link: link\n                                         ,tag: tag\n                                         ,widthOf: widthOf\n                                         ,heightOf: heightOf\n                                         ,sizeOf: sizeOf\n                                         ,flow: flow\n                                         ,up: up\n                                         ,down: down\n                                         ,left: left\n                                         ,right: right\n                                         ,inward: inward\n                                         ,outward: outward\n                                         ,layers: layers\n                                         ,above: above\n                                         ,below: below\n                                         ,beside: beside\n                                         ,empty: empty\n                                         ,spacer: spacer\n                                         ,container: container\n                                         ,middle: middle\n                                         ,midTop: midTop\n                                         ,midBottom: midBottom\n                                         ,midLeft: midLeft\n                                         ,midRight: midRight\n                                         ,topLeft: topLeft\n                                         ,topRight: topRight\n                                         ,bottomLeft: bottomLeft\n                                         ,bottomRight: bottomRight\n                                         ,absolute: absolute\n                                         ,relative: relative\n                                         ,middleAt: middleAt\n                                         ,midTopAt: midTopAt\n                                         ,midBottomAt: midBottomAt\n                                         ,midLeftAt: midLeftAt\n                                         ,midRightAt: midRightAt\n                                         ,topLeftAt: topLeftAt\n                                         ,topRightAt: topRightAt\n                                         ,bottomLeftAt: bottomLeftAt\n                                         ,bottomRightAt: bottomRightAt};\n};\nElm.Graphics = Elm.Graphics || {};\nElm.Graphics.Collage = Elm.Graphics.Collage || {};\nElm.Graphics.Collage.make = function (_elm) {\n   "use strict";\n   _elm.Graphics = _elm.Graphics || {};\n   _elm.Graphics.Collage = _elm.Graphics.Collage || {};\n   if (_elm.Graphics.Collage.values)\n   return _elm.Graphics.Collage.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Color = Elm.Color.make(_elm),\n   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Native$Graphics$Collage = Elm.Native.Graphics.Collage.make(_elm),\n   $Text = Elm.Text.make(_elm),\n   $Transform2D = Elm.Transform2D.make(_elm);\n   var _op = {};\n   var Shape = function (a) {    return {ctor: "Shape",_0: a};};\n   var polygon = function (points) {    return Shape(points);};\n   var rect = F2(function (w,h) {\n      var hh = h / 2;\n      var hw = w / 2;\n      return Shape(_U.list([{ctor: "_Tuple2",_0: 0 - hw,_1: 0 - hh}\n                           ,{ctor: "_Tuple2",_0: 0 - hw,_1: hh}\n                           ,{ctor: "_Tuple2",_0: hw,_1: hh}\n                           ,{ctor: "_Tuple2",_0: hw,_1: 0 - hh}]));\n   });\n   var square = function (n) {    return A2(rect,n,n);};\n   var oval = F2(function (w,h) {\n      var hh = h / 2;\n      var hw = w / 2;\n      var n = 50;\n      var t = 2 * $Basics.pi / n;\n      var f = function (i) {\n         return {ctor: "_Tuple2"\n                ,_0: hw * $Basics.cos(t * i)\n                ,_1: hh * $Basics.sin(t * i)};\n      };\n      return Shape(A2($List.map,f,_U.range(0,n - 1)));\n   });\n   var circle = function (r) {    return A2(oval,2 * r,2 * r);};\n   var ngon = F2(function (n,r) {\n      var m = $Basics.toFloat(n);\n      var t = 2 * $Basics.pi / m;\n      var f = function (i) {\n         return {ctor: "_Tuple2"\n                ,_0: r * $Basics.cos(t * i)\n                ,_1: r * $Basics.sin(t * i)};\n      };\n      return Shape(A2($List.map,f,_U.range(0,m - 1)));\n   });\n   var Path = function (a) {    return {ctor: "Path",_0: a};};\n   var path = function (ps) {    return Path(ps);};\n   var segment = F2(function (p1,p2) {\n      return Path(_U.list([p1,p2]));\n   });\n   var collage = $Native$Graphics$Collage.collage;\n   var Fill = function (a) {    return {ctor: "Fill",_0: a};};\n   var Line = function (a) {    return {ctor: "Line",_0: a};};\n   var FGroup = F2(function (a,b) {\n      return {ctor: "FGroup",_0: a,_1: b};\n   });\n   var FElement = function (a) {\n      return {ctor: "FElement",_0: a};\n   };\n   var FImage = F4(function (a,b,c,d) {\n      return {ctor: "FImage",_0: a,_1: b,_2: c,_3: d};\n   });\n   var FText = function (a) {    return {ctor: "FText",_0: a};};\n   var FOutlinedText = F2(function (a,b) {\n      return {ctor: "FOutlinedText",_0: a,_1: b};\n   });\n   var FShape = F2(function (a,b) {\n      return {ctor: "FShape",_0: a,_1: b};\n   });\n   var FPath = F2(function (a,b) {\n      return {ctor: "FPath",_0: a,_1: b};\n   });\n   var LineStyle = F6(function (a,b,c,d,e,f) {\n      return {color: a\n             ,width: b\n             ,cap: c\n             ,join: d\n             ,dashing: e\n             ,dashOffset: f};\n   });\n   var Clipped = {ctor: "Clipped"};\n   var Sharp = function (a) {    return {ctor: "Sharp",_0: a};};\n   var Smooth = {ctor: "Smooth"};\n   var Padded = {ctor: "Padded"};\n   var Round = {ctor: "Round"};\n   var Flat = {ctor: "Flat"};\n   var defaultLine = {color: $Color.black\n                     ,width: 1\n                     ,cap: Flat\n                     ,join: Sharp(10)\n                     ,dashing: _U.list([])\n                     ,dashOffset: 0};\n   var solid = function (clr) {\n      return _U.update(defaultLine,{color: clr});\n   };\n   var dashed = function (clr) {\n      return _U.update(defaultLine,\n      {color: clr,dashing: _U.list([8,4])});\n   };\n   var dotted = function (clr) {\n      return _U.update(defaultLine,\n      {color: clr,dashing: _U.list([3,3])});\n   };\n   var Grad = function (a) {    return {ctor: "Grad",_0: a};};\n   var Texture = function (a) {\n      return {ctor: "Texture",_0: a};\n   };\n   var Solid = function (a) {    return {ctor: "Solid",_0: a};};\n   var Form_elm_builtin = function (a) {\n      return {ctor: "Form_elm_builtin",_0: a};\n   };\n   var form = function (f) {\n      return Form_elm_builtin({theta: 0\n                              ,scale: 1\n                              ,x: 0\n                              ,y: 0\n                              ,alpha: 1\n                              ,form: f});\n   };\n   var fill = F2(function (style,_p0) {\n      var _p1 = _p0;\n      return form(A2(FShape,Fill(style),_p1._0));\n   });\n   var filled = F2(function (color,shape) {\n      return A2(fill,Solid(color),shape);\n   });\n   var textured = F2(function (src,shape) {\n      return A2(fill,Texture(src),shape);\n   });\n   var gradient = F2(function (grad,shape) {\n      return A2(fill,Grad(grad),shape);\n   });\n   var outlined = F2(function (style,_p2) {\n      var _p3 = _p2;\n      return form(A2(FShape,Line(style),_p3._0));\n   });\n   var traced = F2(function (style,_p4) {\n      var _p5 = _p4;\n      return form(A2(FPath,style,_p5._0));\n   });\n   var sprite = F4(function (w,h,pos,src) {\n      return form(A4(FImage,w,h,pos,src));\n   });\n   var toForm = function (e) {    return form(FElement(e));};\n   var group = function (fs) {\n      return form(A2(FGroup,$Transform2D.identity,fs));\n   };\n   var groupTransform = F2(function (matrix,fs) {\n      return form(A2(FGroup,matrix,fs));\n   });\n   var text = function (t) {    return form(FText(t));};\n   var outlinedText = F2(function (ls,t) {\n      return form(A2(FOutlinedText,ls,t));\n   });\n   var move = F2(function (_p7,_p6) {\n      var _p8 = _p7;\n      var _p9 = _p6;\n      var _p10 = _p9._0;\n      return Form_elm_builtin(_U.update(_p10,\n      {x: _p10.x + _p8._0,y: _p10.y + _p8._1}));\n   });\n   var moveX = F2(function (x,_p11) {\n      var _p12 = _p11;\n      var _p13 = _p12._0;\n      return Form_elm_builtin(_U.update(_p13,{x: _p13.x + x}));\n   });\n   var moveY = F2(function (y,_p14) {\n      var _p15 = _p14;\n      var _p16 = _p15._0;\n      return Form_elm_builtin(_U.update(_p16,{y: _p16.y + y}));\n   });\n   var scale = F2(function (s,_p17) {\n      var _p18 = _p17;\n      var _p19 = _p18._0;\n      return Form_elm_builtin(_U.update(_p19,\n      {scale: _p19.scale * s}));\n   });\n   var rotate = F2(function (t,_p20) {\n      var _p21 = _p20;\n      var _p22 = _p21._0;\n      return Form_elm_builtin(_U.update(_p22,\n      {theta: _p22.theta + t}));\n   });\n   var alpha = F2(function (a,_p23) {\n      var _p24 = _p23;\n      return Form_elm_builtin(_U.update(_p24._0,{alpha: a}));\n   });\n   return _elm.Graphics.Collage.values = {_op: _op\n                                         ,collage: collage\n                                         ,toForm: toForm\n                                         ,filled: filled\n                                         ,textured: textured\n                                         ,gradient: gradient\n                                         ,outlined: outlined\n                                         ,traced: traced\n                                         ,text: text\n                                         ,outlinedText: outlinedText\n                                         ,move: move\n                                         ,moveX: moveX\n                                         ,moveY: moveY\n                                         ,scale: scale\n                                         ,rotate: rotate\n                                         ,alpha: alpha\n                                         ,group: group\n                                         ,groupTransform: groupTransform\n                                         ,rect: rect\n                                         ,oval: oval\n                                         ,square: square\n                                         ,circle: circle\n                                         ,ngon: ngon\n                                         ,polygon: polygon\n                                         ,segment: segment\n                                         ,path: path\n                                         ,solid: solid\n                                         ,dashed: dashed\n                                         ,dotted: dotted\n                                         ,defaultLine: defaultLine\n                                         ,LineStyle: LineStyle\n                                         ,Flat: Flat\n                                         ,Round: Round\n                                         ,Padded: Padded\n                                         ,Smooth: Smooth\n                                         ,Sharp: Sharp\n                                         ,Clipped: Clipped};\n};\nElm.Native.Debug = {};\nElm.Native.Debug.make = function(localRuntime) {\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.Debug = localRuntime.Native.Debug || {};\n	if (localRuntime.Native.Debug.values)\n	{\n		return localRuntime.Native.Debug.values;\n	}\n\n	var toString = Elm.Native.Utils.make(localRuntime).toString;\n\n	function log(tag, value)\n	{\n		var msg = tag + \': \' + toString(value);\n		var process = process || {};\n		if (process.stdout)\n		{\n			process.stdout.write(msg);\n		}\n		else\n		{\n			console.log(msg);\n		}\n		return value;\n	}\n\n	function crash(message)\n	{\n		throw new Error(message);\n	}\n\n	function tracePath(tag, form)\n	{\n		if (localRuntime.debug)\n		{\n			return localRuntime.debug.trace(tag, form);\n		}\n		return form;\n	}\n\n	function watch(tag, value)\n	{\n		if (localRuntime.debug)\n		{\n			localRuntime.debug.watch(tag, value);\n		}\n		return value;\n	}\n\n	function watchSummary(tag, summarize, value)\n	{\n		if (localRuntime.debug)\n		{\n			localRuntime.debug.watch(tag, summarize(value));\n		}\n		return value;\n	}\n\n	return localRuntime.Native.Debug.values = {\n		crash: crash,\n		tracePath: F2(tracePath),\n		log: F2(log),\n		watch: F2(watch),\n		watchSummary: F3(watchSummary)\n	};\n};\n\nElm.Debug = Elm.Debug || {};\nElm.Debug.make = function (_elm) {\n   "use strict";\n   _elm.Debug = _elm.Debug || {};\n   if (_elm.Debug.values) return _elm.Debug.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),\n   $Native$Debug = Elm.Native.Debug.make(_elm);\n   var _op = {};\n   var trace = $Native$Debug.tracePath;\n   var watchSummary = $Native$Debug.watchSummary;\n   var watch = $Native$Debug.watch;\n   var crash = $Native$Debug.crash;\n   var log = $Native$Debug.log;\n   return _elm.Debug.values = {_op: _op\n                              ,log: log\n                              ,crash: crash\n                              ,watch: watch\n                              ,watchSummary: watchSummary\n                              ,trace: trace};\n};\nElm.Result = Elm.Result || {};\nElm.Result.make = function (_elm) {\n   "use strict";\n   _elm.Result = _elm.Result || {};\n   if (_elm.Result.values) return _elm.Result.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm);\n   var _op = {};\n   var toMaybe = function (result) {\n      var _p0 = result;\n      if (_p0.ctor === "Ok") {\n            return $Maybe.Just(_p0._0);\n         } else {\n            return $Maybe.Nothing;\n         }\n   };\n   var withDefault = F2(function (def,result) {\n      var _p1 = result;\n      if (_p1.ctor === "Ok") {\n            return _p1._0;\n         } else {\n            return def;\n         }\n   });\n   var Err = function (a) {    return {ctor: "Err",_0: a};};\n   var andThen = F2(function (result,callback) {\n      var _p2 = result;\n      if (_p2.ctor === "Ok") {\n            return callback(_p2._0);\n         } else {\n            return Err(_p2._0);\n         }\n   });\n   var Ok = function (a) {    return {ctor: "Ok",_0: a};};\n   var map = F2(function (func,ra) {\n      var _p3 = ra;\n      if (_p3.ctor === "Ok") {\n            return Ok(func(_p3._0));\n         } else {\n            return Err(_p3._0);\n         }\n   });\n   var map2 = F3(function (func,ra,rb) {\n      var _p4 = {ctor: "_Tuple2",_0: ra,_1: rb};\n      if (_p4._0.ctor === "Ok") {\n            if (_p4._1.ctor === "Ok") {\n                  return Ok(A2(func,_p4._0._0,_p4._1._0));\n               } else {\n                  return Err(_p4._1._0);\n               }\n         } else {\n            return Err(_p4._0._0);\n         }\n   });\n   var map3 = F4(function (func,ra,rb,rc) {\n      var _p5 = {ctor: "_Tuple3",_0: ra,_1: rb,_2: rc};\n      if (_p5._0.ctor === "Ok") {\n            if (_p5._1.ctor === "Ok") {\n                  if (_p5._2.ctor === "Ok") {\n                        return Ok(A3(func,_p5._0._0,_p5._1._0,_p5._2._0));\n                     } else {\n                        return Err(_p5._2._0);\n                     }\n               } else {\n                  return Err(_p5._1._0);\n               }\n         } else {\n            return Err(_p5._0._0);\n         }\n   });\n   var map4 = F5(function (func,ra,rb,rc,rd) {\n      var _p6 = {ctor: "_Tuple4",_0: ra,_1: rb,_2: rc,_3: rd};\n      if (_p6._0.ctor === "Ok") {\n            if (_p6._1.ctor === "Ok") {\n                  if (_p6._2.ctor === "Ok") {\n                        if (_p6._3.ctor === "Ok") {\n                              return Ok(A4(func,_p6._0._0,_p6._1._0,_p6._2._0,_p6._3._0));\n                           } else {\n                              return Err(_p6._3._0);\n                           }\n                     } else {\n                        return Err(_p6._2._0);\n                     }\n               } else {\n                  return Err(_p6._1._0);\n               }\n         } else {\n            return Err(_p6._0._0);\n         }\n   });\n   var map5 = F6(function (func,ra,rb,rc,rd,re) {\n      var _p7 = {ctor: "_Tuple5"\n                ,_0: ra\n                ,_1: rb\n                ,_2: rc\n                ,_3: rd\n                ,_4: re};\n      if (_p7._0.ctor === "Ok") {\n            if (_p7._1.ctor === "Ok") {\n                  if (_p7._2.ctor === "Ok") {\n                        if (_p7._3.ctor === "Ok") {\n                              if (_p7._4.ctor === "Ok") {\n                                    return Ok(A5(func,\n                                    _p7._0._0,\n                                    _p7._1._0,\n                                    _p7._2._0,\n                                    _p7._3._0,\n                                    _p7._4._0));\n                                 } else {\n                                    return Err(_p7._4._0);\n                                 }\n                           } else {\n                              return Err(_p7._3._0);\n                           }\n                     } else {\n                        return Err(_p7._2._0);\n                     }\n               } else {\n                  return Err(_p7._1._0);\n               }\n         } else {\n            return Err(_p7._0._0);\n         }\n   });\n   var formatError = F2(function (f,result) {\n      var _p8 = result;\n      if (_p8.ctor === "Ok") {\n            return Ok(_p8._0);\n         } else {\n            return Err(f(_p8._0));\n         }\n   });\n   var fromMaybe = F2(function (err,maybe) {\n      var _p9 = maybe;\n      if (_p9.ctor === "Just") {\n            return Ok(_p9._0);\n         } else {\n            return Err(err);\n         }\n   });\n   return _elm.Result.values = {_op: _op\n                               ,withDefault: withDefault\n                               ,map: map\n                               ,map2: map2\n                               ,map3: map3\n                               ,map4: map4\n                               ,map5: map5\n                               ,andThen: andThen\n                               ,toMaybe: toMaybe\n                               ,fromMaybe: fromMaybe\n                               ,formatError: formatError\n                               ,Ok: Ok\n                               ,Err: Err};\n};\nElm.Native.Signal = {};\n\nElm.Native.Signal.make = function(localRuntime) {\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.Signal = localRuntime.Native.Signal || {};\n	if (localRuntime.Native.Signal.values)\n	{\n		return localRuntime.Native.Signal.values;\n	}\n\n\n	var Task = Elm.Native.Task.make(localRuntime);\n	var Utils = Elm.Native.Utils.make(localRuntime);\n\n\n	function broadcastToKids(node, timestamp, update)\n	{\n		var kids = node.kids;\n		for (var i = kids.length; i--; )\n		{\n			kids[i].notify(timestamp, update, node.id);\n		}\n	}\n\n\n	// INPUT\n\n	function input(name, base)\n	{\n		var node = {\n			id: Utils.guid(),\n			name: \'input-\' + name,\n			value: base,\n			parents: [],\n			kids: []\n		};\n\n		node.notify = function(timestamp, targetId, value) {\n			var update = targetId === node.id;\n			if (update)\n			{\n				node.value = value;\n			}\n			broadcastToKids(node, timestamp, update);\n			return update;\n		};\n\n		localRuntime.inputs.push(node);\n\n		return node;\n	}\n\n	function constant(value)\n	{\n		return input(\'constant\', value);\n	}\n\n\n	// MAILBOX\n\n	function mailbox(base)\n	{\n		var signal = input(\'mailbox\', base);\n\n		function send(value) {\n			return Task.asyncFunction(function(callback) {\n				localRuntime.setTimeout(function() {\n					localRuntime.notify(signal.id, value);\n				}, 0);\n				callback(Task.succeed(Utils.Tuple0));\n			});\n		}\n\n		return {\n			signal: signal,\n			address: {\n				ctor: \'Address\',\n				_0: send\n			}\n		};\n	}\n\n	function sendMessage(message)\n	{\n		Task.perform(message._0);\n	}\n\n\n	// OUTPUT\n\n	function output(name, handler, parent)\n	{\n		var node = {\n			id: Utils.guid(),\n			name: \'output-\' + name,\n			parents: [parent],\n			isOutput: true\n		};\n\n		node.notify = function(timestamp, parentUpdate, parentID)\n		{\n			if (parentUpdate)\n			{\n				handler(parent.value);\n			}\n		};\n\n		parent.kids.push(node);\n\n		return node;\n	}\n\n\n	// MAP\n\n	function mapMany(refreshValue, args)\n	{\n		var node = {\n			id: Utils.guid(),\n			name: \'map\' + args.length,\n			value: refreshValue(),\n			parents: args,\n			kids: []\n		};\n\n		var numberOfParents = args.length;\n		var count = 0;\n		var update = false;\n\n		node.notify = function(timestamp, parentUpdate, parentID)\n		{\n			++count;\n\n			update = update || parentUpdate;\n\n			if (count === numberOfParents)\n			{\n				if (update)\n				{\n					node.value = refreshValue();\n				}\n				broadcastToKids(node, timestamp, update);\n				update = false;\n				count = 0;\n			}\n		};\n\n		for (var i = numberOfParents; i--; )\n		{\n			args[i].kids.push(node);\n		}\n\n		return node;\n	}\n\n\n	function map(func, a)\n	{\n		function refreshValue()\n		{\n			return func(a.value);\n		}\n		return mapMany(refreshValue, [a]);\n	}\n\n\n	function map2(func, a, b)\n	{\n		function refreshValue()\n		{\n			return A2( func, a.value, b.value );\n		}\n		return mapMany(refreshValue, [a, b]);\n	}\n\n\n	function map3(func, a, b, c)\n	{\n		function refreshValue()\n		{\n			return A3( func, a.value, b.value, c.value );\n		}\n		return mapMany(refreshValue, [a, b, c]);\n	}\n\n\n	function map4(func, a, b, c, d)\n	{\n		function refreshValue()\n		{\n			return A4( func, a.value, b.value, c.value, d.value );\n		}\n		return mapMany(refreshValue, [a, b, c, d]);\n	}\n\n\n	function map5(func, a, b, c, d, e)\n	{\n		function refreshValue()\n		{\n			return A5( func, a.value, b.value, c.value, d.value, e.value );\n		}\n		return mapMany(refreshValue, [a, b, c, d, e]);\n	}\n\n\n	// FOLD\n\n	function foldp(update, state, signal)\n	{\n		var node = {\n			id: Utils.guid(),\n			name: \'foldp\',\n			parents: [signal],\n			kids: [],\n			value: state\n		};\n\n		node.notify = function(timestamp, parentUpdate, parentID)\n		{\n			if (parentUpdate)\n			{\n				node.value = A2( update, signal.value, node.value );\n			}\n			broadcastToKids(node, timestamp, parentUpdate);\n		};\n\n		signal.kids.push(node);\n\n		return node;\n	}\n\n\n	// TIME\n\n	function timestamp(signal)\n	{\n		var node = {\n			id: Utils.guid(),\n			name: \'timestamp\',\n			value: Utils.Tuple2(localRuntime.timer.programStart, signal.value),\n			parents: [signal],\n			kids: []\n		};\n\n		node.notify = function(timestamp, parentUpdate, parentID)\n		{\n			if (parentUpdate)\n			{\n				node.value = Utils.Tuple2(timestamp, signal.value);\n			}\n			broadcastToKids(node, timestamp, parentUpdate);\n		};\n\n		signal.kids.push(node);\n\n		return node;\n	}\n\n\n	function delay(time, signal)\n	{\n		var delayed = input(\'delay-input-\' + time, signal.value);\n\n		function handler(value)\n		{\n			setTimeout(function() {\n				localRuntime.notify(delayed.id, value);\n			}, time);\n		}\n\n		output(\'delay-output-\' + time, handler, signal);\n\n		return delayed;\n	}\n\n\n	// MERGING\n\n	function genericMerge(tieBreaker, leftStream, rightStream)\n	{\n		var node = {\n			id: Utils.guid(),\n			name: \'merge\',\n			value: A2(tieBreaker, leftStream.value, rightStream.value),\n			parents: [leftStream, rightStream],\n			kids: []\n		};\n\n		var left = { touched: false, update: false, value: null };\n		var right = { touched: false, update: false, value: null };\n\n		node.notify = function(timestamp, parentUpdate, parentID)\n		{\n			if (parentID === leftStream.id)\n			{\n				left.touched = true;\n				left.update = parentUpdate;\n				left.value = leftStream.value;\n			}\n			if (parentID === rightStream.id)\n			{\n				right.touched = true;\n				right.update = parentUpdate;\n				right.value = rightStream.value;\n			}\n\n			if (left.touched && right.touched)\n			{\n				var update = false;\n				if (left.update && right.update)\n				{\n					node.value = A2(tieBreaker, left.value, right.value);\n					update = true;\n				}\n				else if (left.update)\n				{\n					node.value = left.value;\n					update = true;\n				}\n				else if (right.update)\n				{\n					node.value = right.value;\n					update = true;\n				}\n				left.touched = false;\n				right.touched = false;\n\n				broadcastToKids(node, timestamp, update);\n			}\n		};\n\n		leftStream.kids.push(node);\n		rightStream.kids.push(node);\n\n		return node;\n	}\n\n\n	// FILTERING\n\n	function filterMap(toMaybe, base, signal)\n	{\n		var maybe = toMaybe(signal.value);\n		var node = {\n			id: Utils.guid(),\n			name: \'filterMap\',\n			value: maybe.ctor === \'Nothing\' ? base : maybe._0,\n			parents: [signal],\n			kids: []\n		};\n\n		node.notify = function(timestamp, parentUpdate, parentID)\n		{\n			var update = false;\n			if (parentUpdate)\n			{\n				var maybe = toMaybe(signal.value);\n				if (maybe.ctor === \'Just\')\n				{\n					update = true;\n					node.value = maybe._0;\n				}\n			}\n			broadcastToKids(node, timestamp, update);\n		};\n\n		signal.kids.push(node);\n\n		return node;\n	}\n\n\n	// SAMPLING\n\n	function sampleOn(ticker, signal)\n	{\n		var node = {\n			id: Utils.guid(),\n			name: \'sampleOn\',\n			value: signal.value,\n			parents: [ticker, signal],\n			kids: []\n		};\n\n		var signalTouch = false;\n		var tickerTouch = false;\n		var tickerUpdate = false;\n\n		node.notify = function(timestamp, parentUpdate, parentID)\n		{\n			if (parentID === ticker.id)\n			{\n				tickerTouch = true;\n				tickerUpdate = parentUpdate;\n			}\n			if (parentID === signal.id)\n			{\n				signalTouch = true;\n			}\n\n			if (tickerTouch && signalTouch)\n			{\n				if (tickerUpdate)\n				{\n					node.value = signal.value;\n				}\n				tickerTouch = false;\n				signalTouch = false;\n\n				broadcastToKids(node, timestamp, tickerUpdate);\n			}\n		};\n\n		ticker.kids.push(node);\n		signal.kids.push(node);\n\n		return node;\n	}\n\n\n	// DROP REPEATS\n\n	function dropRepeats(signal)\n	{\n		var node = {\n			id: Utils.guid(),\n			name: \'dropRepeats\',\n			value: signal.value,\n			parents: [signal],\n			kids: []\n		};\n\n		node.notify = function(timestamp, parentUpdate, parentID)\n		{\n			var update = false;\n			if (parentUpdate && !Utils.eq(node.value, signal.value))\n			{\n				node.value = signal.value;\n				update = true;\n			}\n			broadcastToKids(node, timestamp, update);\n		};\n\n		signal.kids.push(node);\n\n		return node;\n	}\n\n\n	return localRuntime.Native.Signal.values = {\n		input: input,\n		constant: constant,\n		mailbox: mailbox,\n		sendMessage: sendMessage,\n		output: output,\n		map: F2(map),\n		map2: F3(map2),\n		map3: F4(map3),\n		map4: F5(map4),\n		map5: F6(map5),\n		foldp: F3(foldp),\n		genericMerge: F3(genericMerge),\n		filterMap: F3(filterMap),\n		sampleOn: F2(sampleOn),\n		dropRepeats: dropRepeats,\n		timestamp: timestamp,\n		delay: F2(delay)\n	};\n};\n\nElm.Native.Task = {};\n\nElm.Native.Task.make = function(localRuntime) {\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.Task = localRuntime.Native.Task || {};\n	if (localRuntime.Native.Task.values)\n	{\n		return localRuntime.Native.Task.values;\n	}\n\n	var Result = Elm.Result.make(localRuntime);\n	var Signal;\n	var Utils = Elm.Native.Utils.make(localRuntime);\n\n\n	// CONSTRUCTORS\n\n	function succeed(value)\n	{\n		return {\n			tag: \'Succeed\',\n			value: value\n		};\n	}\n\n	function fail(error)\n	{\n		return {\n			tag: \'Fail\',\n			value: error\n		};\n	}\n\n	function asyncFunction(func)\n	{\n		return {\n			tag: \'Async\',\n			asyncFunction: func\n		};\n	}\n\n	function andThen(task, callback)\n	{\n		return {\n			tag: \'AndThen\',\n			task: task,\n			callback: callback\n		};\n	}\n\n	function catch_(task, callback)\n	{\n		return {\n			tag: \'Catch\',\n			task: task,\n			callback: callback\n		};\n	}\n\n\n	// RUNNER\n\n	function perform(task) {\n		runTask({ task: task }, function() {});\n	}\n\n	function performSignal(name, signal)\n	{\n		var workQueue = [];\n\n		function onComplete()\n		{\n			workQueue.shift();\n\n			if (workQueue.length > 0)\n			{\n				var task = workQueue[0];\n\n				setTimeout(function() {\n					runTask(task, onComplete);\n				}, 0);\n			}\n		}\n\n		function register(task)\n		{\n			var root = { task: task };\n			workQueue.push(root);\n			if (workQueue.length === 1)\n			{\n				runTask(root, onComplete);\n			}\n		}\n\n		if (!Signal)\n		{\n			Signal = Elm.Native.Signal.make(localRuntime);\n		}\n		Signal.output(\'perform-tasks-\' + name, register, signal);\n\n		register(signal.value);\n\n		return signal;\n	}\n\n	function mark(status, task)\n	{\n		return { status: status, task: task };\n	}\n\n	function runTask(root, onComplete)\n	{\n		var result = mark(\'runnable\', root.task);\n		while (result.status === \'runnable\')\n		{\n			result = stepTask(onComplete, root, result.task);\n		}\n\n		if (result.status === \'done\')\n		{\n			root.task = result.task;\n			onComplete();\n		}\n\n		if (result.status === \'blocked\')\n		{\n			root.task = result.task;\n		}\n	}\n\n	function stepTask(onComplete, root, task)\n	{\n		var tag = task.tag;\n\n		if (tag === \'Succeed\' || tag === \'Fail\')\n		{\n			return mark(\'done\', task);\n		}\n\n		if (tag === \'Async\')\n		{\n			var placeHolder = {};\n			var couldBeSync = true;\n			var wasSync = false;\n\n			task.asyncFunction(function(result) {\n				placeHolder.tag = result.tag;\n				placeHolder.value = result.value;\n				if (couldBeSync)\n				{\n					wasSync = true;\n				}\n				else\n				{\n					runTask(root, onComplete);\n				}\n			});\n			couldBeSync = false;\n			return mark(wasSync ? \'done\' : \'blocked\', placeHolder);\n		}\n\n		if (tag === \'AndThen\' || tag === \'Catch\')\n		{\n			var result = mark(\'runnable\', task.task);\n			while (result.status === \'runnable\')\n			{\n				result = stepTask(onComplete, root, result.task);\n			}\n\n			if (result.status === \'done\')\n			{\n				var activeTask = result.task;\n				var activeTag = activeTask.tag;\n\n				var succeedChain = activeTag === \'Succeed\' && tag === \'AndThen\';\n				var failChain = activeTag === \'Fail\' && tag === \'Catch\';\n\n				return (succeedChain || failChain)\n					? mark(\'runnable\', task.callback(activeTask.value))\n					: mark(\'runnable\', activeTask);\n			}\n			if (result.status === \'blocked\')\n			{\n				return mark(\'blocked\', {\n					tag: tag,\n					task: result.task,\n					callback: task.callback\n				});\n			}\n		}\n	}\n\n\n	// THREADS\n\n	function sleep(time) {\n		return asyncFunction(function(callback) {\n			setTimeout(function() {\n				callback(succeed(Utils.Tuple0));\n			}, time);\n		});\n	}\n\n	function spawn(task) {\n		return asyncFunction(function(callback) {\n			var id = setTimeout(function() {\n				perform(task);\n			}, 0);\n			callback(succeed(id));\n		});\n	}\n\n\n	return localRuntime.Native.Task.values = {\n		succeed: succeed,\n		fail: fail,\n		asyncFunction: asyncFunction,\n		andThen: F2(andThen),\n		catch_: F2(catch_),\n		perform: perform,\n		performSignal: performSignal,\n		spawn: spawn,\n		sleep: sleep\n	};\n};\n\nElm.Task = Elm.Task || {};\nElm.Task.make = function (_elm) {\n   "use strict";\n   _elm.Task = _elm.Task || {};\n   if (_elm.Task.values) return _elm.Task.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Task = Elm.Native.Task.make(_elm),\n   $Result = Elm.Result.make(_elm);\n   var _op = {};\n   var sleep = $Native$Task.sleep;\n   var spawn = $Native$Task.spawn;\n   var ThreadID = function (a) {\n      return {ctor: "ThreadID",_0: a};\n   };\n   var onError = $Native$Task.catch_;\n   var andThen = $Native$Task.andThen;\n   var fail = $Native$Task.fail;\n   var mapError = F2(function (f,task) {\n      return A2(onError,\n      task,\n      function (err) {\n         return fail(f(err));\n      });\n   });\n   var succeed = $Native$Task.succeed;\n   var map = F2(function (func,taskA) {\n      return A2(andThen,\n      taskA,\n      function (a) {\n         return succeed(func(a));\n      });\n   });\n   var map2 = F3(function (func,taskA,taskB) {\n      return A2(andThen,\n      taskA,\n      function (a) {\n         return A2(andThen,\n         taskB,\n         function (b) {\n            return succeed(A2(func,a,b));\n         });\n      });\n   });\n   var map3 = F4(function (func,taskA,taskB,taskC) {\n      return A2(andThen,\n      taskA,\n      function (a) {\n         return A2(andThen,\n         taskB,\n         function (b) {\n            return A2(andThen,\n            taskC,\n            function (c) {\n               return succeed(A3(func,a,b,c));\n            });\n         });\n      });\n   });\n   var map4 = F5(function (func,taskA,taskB,taskC,taskD) {\n      return A2(andThen,\n      taskA,\n      function (a) {\n         return A2(andThen,\n         taskB,\n         function (b) {\n            return A2(andThen,\n            taskC,\n            function (c) {\n               return A2(andThen,\n               taskD,\n               function (d) {\n                  return succeed(A4(func,a,b,c,d));\n               });\n            });\n         });\n      });\n   });\n   var map5 = F6(function (func,taskA,taskB,taskC,taskD,taskE) {\n      return A2(andThen,\n      taskA,\n      function (a) {\n         return A2(andThen,\n         taskB,\n         function (b) {\n            return A2(andThen,\n            taskC,\n            function (c) {\n               return A2(andThen,\n               taskD,\n               function (d) {\n                  return A2(andThen,\n                  taskE,\n                  function (e) {\n                     return succeed(A5(func,a,b,c,d,e));\n                  });\n               });\n            });\n         });\n      });\n   });\n   var andMap = F2(function (taskFunc,taskValue) {\n      return A2(andThen,\n      taskFunc,\n      function (func) {\n         return A2(andThen,\n         taskValue,\n         function (value) {\n            return succeed(func(value));\n         });\n      });\n   });\n   var sequence = function (tasks) {\n      var _p0 = tasks;\n      if (_p0.ctor === "[]") {\n            return succeed(_U.list([]));\n         } else {\n            return A3(map2,\n            F2(function (x,y) {    return A2($List._op["::"],x,y);}),\n            _p0._0,\n            sequence(_p0._1));\n         }\n   };\n   var toMaybe = function (task) {\n      return A2(onError,\n      A2(map,$Maybe.Just,task),\n      function (_p1) {\n         return succeed($Maybe.Nothing);\n      });\n   };\n   var fromMaybe = F2(function ($default,maybe) {\n      var _p2 = maybe;\n      if (_p2.ctor === "Just") {\n            return succeed(_p2._0);\n         } else {\n            return fail($default);\n         }\n   });\n   var toResult = function (task) {\n      return A2(onError,\n      A2(map,$Result.Ok,task),\n      function (msg) {\n         return succeed($Result.Err(msg));\n      });\n   };\n   var fromResult = function (result) {\n      var _p3 = result;\n      if (_p3.ctor === "Ok") {\n            return succeed(_p3._0);\n         } else {\n            return fail(_p3._0);\n         }\n   };\n   var Task = {ctor: "Task"};\n   return _elm.Task.values = {_op: _op\n                             ,succeed: succeed\n                             ,fail: fail\n                             ,map: map\n                             ,map2: map2\n                             ,map3: map3\n                             ,map4: map4\n                             ,map5: map5\n                             ,andMap: andMap\n                             ,sequence: sequence\n                             ,andThen: andThen\n                             ,onError: onError\n                             ,mapError: mapError\n                             ,toMaybe: toMaybe\n                             ,fromMaybe: fromMaybe\n                             ,toResult: toResult\n                             ,fromResult: fromResult\n                             ,spawn: spawn\n                             ,sleep: sleep};\n};\nElm.Signal = Elm.Signal || {};\nElm.Signal.make = function (_elm) {\n   "use strict";\n   _elm.Signal = _elm.Signal || {};\n   if (_elm.Signal.values) return _elm.Signal.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Signal = Elm.Native.Signal.make(_elm),\n   $Task = Elm.Task.make(_elm);\n   var _op = {};\n   var send = F2(function (_p0,value) {\n      var _p1 = _p0;\n      return A2($Task.onError,\n      _p1._0(value),\n      function (_p2) {\n         return $Task.succeed({ctor: "_Tuple0"});\n      });\n   });\n   var Message = function (a) {\n      return {ctor: "Message",_0: a};\n   };\n   var message = F2(function (_p3,value) {\n      var _p4 = _p3;\n      return Message(_p4._0(value));\n   });\n   var mailbox = $Native$Signal.mailbox;\n   var Address = function (a) {\n      return {ctor: "Address",_0: a};\n   };\n   var forwardTo = F2(function (_p5,f) {\n      var _p6 = _p5;\n      return Address(function (x) {    return _p6._0(f(x));});\n   });\n   var Mailbox = F2(function (a,b) {\n      return {address: a,signal: b};\n   });\n   var sampleOn = $Native$Signal.sampleOn;\n   var dropRepeats = $Native$Signal.dropRepeats;\n   var filterMap = $Native$Signal.filterMap;\n   var filter = F3(function (isOk,base,signal) {\n      return A3(filterMap,\n      function (value) {\n         return isOk(value) ? $Maybe.Just(value) : $Maybe.Nothing;\n      },\n      base,\n      signal);\n   });\n   var merge = F2(function (left,right) {\n      return A3($Native$Signal.genericMerge,\n      $Basics.always,\n      left,\n      right);\n   });\n   var mergeMany = function (signalList) {\n      var _p7 = $List.reverse(signalList);\n      if (_p7.ctor === "[]") {\n            return _U.crashCase("Signal",\n            {start: {line: 184,column: 3},end: {line: 189,column: 40}},\n            _p7)("mergeMany was given an empty list!");\n         } else {\n            return A3($List.foldl,merge,_p7._0,_p7._1);\n         }\n   };\n   var foldp = $Native$Signal.foldp;\n   var map5 = $Native$Signal.map5;\n   var map4 = $Native$Signal.map4;\n   var map3 = $Native$Signal.map3;\n   var map2 = $Native$Signal.map2;\n   var map = $Native$Signal.map;\n   var constant = $Native$Signal.constant;\n   var Signal = {ctor: "Signal"};\n   return _elm.Signal.values = {_op: _op\n                               ,merge: merge\n                               ,mergeMany: mergeMany\n                               ,map: map\n                               ,map2: map2\n                               ,map3: map3\n                               ,map4: map4\n                               ,map5: map5\n                               ,constant: constant\n                               ,dropRepeats: dropRepeats\n                               ,filter: filter\n                               ,filterMap: filterMap\n                               ,sampleOn: sampleOn\n                               ,foldp: foldp\n                               ,mailbox: mailbox\n                               ,send: send\n                               ,message: message\n                               ,forwardTo: forwardTo\n                               ,Mailbox: Mailbox};\n};\nElm.Native.Time = {};\n\nElm.Native.Time.make = function(localRuntime)\n{\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.Time = localRuntime.Native.Time || {};\n	if (localRuntime.Native.Time.values)\n	{\n		return localRuntime.Native.Time.values;\n	}\n\n	var NS = Elm.Native.Signal.make(localRuntime);\n	var Maybe = Elm.Maybe.make(localRuntime);\n\n\n	// FRAMES PER SECOND\n\n	function fpsWhen(desiredFPS, isOn)\n	{\n		var msPerFrame = 1000 / desiredFPS;\n		var ticker = NS.input(\'fps-\' + desiredFPS, null);\n\n		function notifyTicker()\n		{\n			localRuntime.notify(ticker.id, null);\n		}\n\n		function firstArg(x, y)\n		{\n			return x;\n		}\n\n		// input fires either when isOn changes, or when ticker fires.\n		// Its value is a tuple with the current timestamp, and the state of isOn\n		var input = NS.timestamp(A3(NS.map2, F2(firstArg), NS.dropRepeats(isOn), ticker));\n\n		var initialState = {\n			isOn: false,\n			time: localRuntime.timer.programStart,\n			delta: 0\n		};\n\n		var timeoutId;\n\n		function update(input, state)\n		{\n			var currentTime = input._0;\n			var isOn = input._1;\n			var wasOn = state.isOn;\n			var previousTime = state.time;\n\n			if (isOn)\n			{\n				timeoutId = localRuntime.setTimeout(notifyTicker, msPerFrame);\n			}\n			else if (wasOn)\n			{\n				clearTimeout(timeoutId);\n			}\n\n			return {\n				isOn: isOn,\n				time: currentTime,\n				delta: (isOn && !wasOn) ? 0 : currentTime - previousTime\n			};\n		}\n\n		return A2(\n			NS.map,\n			function(state) { return state.delta; },\n			A3(NS.foldp, F2(update), update(input.value, initialState), input)\n		);\n	}\n\n\n	// EVERY\n\n	function every(t)\n	{\n		var ticker = NS.input(\'every-\' + t, null);\n		function tellTime()\n		{\n			localRuntime.notify(ticker.id, null);\n		}\n		var clock = A2(NS.map, fst, NS.timestamp(ticker));\n		setInterval(tellTime, t);\n		return clock;\n	}\n\n\n	function fst(pair)\n	{\n		return pair._0;\n	}\n\n\n	function read(s)\n	{\n		var t = Date.parse(s);\n		return isNaN(t) ? Maybe.Nothing : Maybe.Just(t);\n	}\n\n	return localRuntime.Native.Time.values = {\n		fpsWhen: F2(fpsWhen),\n		every: every,\n		toDate: function(t) { return new Date(t); },\n		read: read\n	};\n};\n\nElm.Time = Elm.Time || {};\nElm.Time.make = function (_elm) {\n   "use strict";\n   _elm.Time = _elm.Time || {};\n   if (_elm.Time.values) return _elm.Time.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Native$Signal = Elm.Native.Signal.make(_elm),\n   $Native$Time = Elm.Native.Time.make(_elm),\n   $Signal = Elm.Signal.make(_elm);\n   var _op = {};\n   var delay = $Native$Signal.delay;\n   var since = F2(function (time,signal) {\n      var stop = A2($Signal.map,\n      $Basics.always(-1),\n      A2(delay,time,signal));\n      var start = A2($Signal.map,$Basics.always(1),signal);\n      var delaydiff = A3($Signal.foldp,\n      F2(function (x,y) {    return x + y;}),\n      0,\n      A2($Signal.merge,start,stop));\n      return A2($Signal.map,\n      F2(function (x,y) {    return !_U.eq(x,y);})(0),\n      delaydiff);\n   });\n   var timestamp = $Native$Signal.timestamp;\n   var every = $Native$Time.every;\n   var fpsWhen = $Native$Time.fpsWhen;\n   var fps = function (targetFrames) {\n      return A2(fpsWhen,targetFrames,$Signal.constant(true));\n   };\n   var inMilliseconds = function (t) {    return t;};\n   var millisecond = 1;\n   var second = 1000 * millisecond;\n   var minute = 60 * second;\n   var hour = 60 * minute;\n   var inHours = function (t) {    return t / hour;};\n   var inMinutes = function (t) {    return t / minute;};\n   var inSeconds = function (t) {    return t / second;};\n   return _elm.Time.values = {_op: _op\n                             ,millisecond: millisecond\n                             ,second: second\n                             ,minute: minute\n                             ,hour: hour\n                             ,inMilliseconds: inMilliseconds\n                             ,inSeconds: inSeconds\n                             ,inMinutes: inMinutes\n                             ,inHours: inHours\n                             ,fps: fps\n                             ,fpsWhen: fpsWhen\n                             ,every: every\n                             ,timestamp: timestamp\n                             ,delay: delay\n                             ,since: since};\n};\nElm.Easing = Elm.Easing || {};\nElm.Easing.make = function (_elm) {\n   "use strict";\n   _elm.Easing = _elm.Easing || {};\n   if (_elm.Easing.values) return _elm.Easing.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Color = Elm.Color.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $Time = Elm.Time.make(_elm);\n   var _op = {};\n   var cycle = F3(function (animation,d,t) {\n      return A2(animation,\n      1,\n      t / d - $Basics.toFloat($Basics.floor(t / d)));\n   });\n   var flip = F2(function (easing,time) {\n      return easing(1 - time);\n   });\n   var retour = F2(function (easing,time) {\n      return _U.cmp(time,0.5) < 0 ? easing(time * 2) : A2(flip,\n      easing,\n      (time - 0.5) * 2);\n   });\n   var invert = F2(function (easing,time) {\n      return 1 - easing(1 - time);\n   });\n   var inOut = F3(function (e1,e2,time) {\n      return _U.cmp(time,\n      0.5) < 0 ? e1(time * 2) / 2 : 0.5 + e2((time - 0.5) * 2) / 2;\n   });\n   var easeInElastic = function (time) {\n      if (_U.eq(time,0.0)) return 0.0; else {\n            var t$ = time - 1;\n            var p = 0.3;\n            var s = 7.5e-2;\n            return 0 - Math.pow(2,\n            10 * t$) * $Basics.sin((t$ - s) * (2 * $Basics.pi) / p);\n         }\n   };\n   var easeOutElastic = invert(easeInElastic);\n   var easeInOutElastic = A2(inOut,easeInElastic,easeOutElastic);\n   var easeOutBounce = function (time) {\n      var t4 = time - 2.625 / 2.75;\n      var t3 = time - 2.25 / 2.75;\n      var t2 = time - 1.5 / 2.75;\n      var a = 7.5625;\n      return _U.cmp(time,\n      1 / 2.75) < 0 ? a * time * time : _U.cmp(time,\n      2 / 2.75) < 0 ? a * t2 * t2 + 0.75 : _U.cmp(time,\n      2.5 / 2.75) < 0 ? a * t3 * t3 + 0.9375 : a * t4 * t4 + 0.984375;\n   };\n   var easeInBounce = invert(easeOutBounce);\n   var easeInOutBounce = A2(inOut,easeInBounce,easeOutBounce);\n   var easeInBack = function (time) {\n      return time * time * (2.70158 * time - 1.70158);\n   };\n   var easeOutBack = invert(easeInBack);\n   var easeInOutBack = A2(inOut,easeInBack,easeOutBack);\n   var easeOutCirc = function (time) {\n      return $Basics.sqrt(1 - Math.pow(time - 1,2));\n   };\n   var easeInCirc = invert(easeOutCirc);\n   var easeInOutCirc = A2(inOut,easeInCirc,easeOutCirc);\n   var easeInExpo = function (time) {\n      return _U.eq(time,0.0) ? 0.0 : Math.pow(2,10 * (time - 1));\n   };\n   var easeOutExpo = invert(easeInExpo);\n   var easeInOutExpo = A2(inOut,easeInExpo,easeOutExpo);\n   var easeOutSine = function (time) {\n      return $Basics.sin(time * ($Basics.pi / 2));\n   };\n   var easeInSine = invert(easeOutSine);\n   var easeInOutSine = A2(inOut,easeInSine,easeOutSine);\n   var easeInQuint = function (time) {\n      return Math.pow(time,5);\n   };\n   var easeOutQuint = invert(easeInQuint);\n   var easeInOutQuint = A2(inOut,easeInQuint,easeOutQuint);\n   var easeInQuart = function (time) {\n      return Math.pow(time,4);\n   };\n   var easeOutQuart = invert(easeInQuart);\n   var easeInOutQuart = A2(inOut,easeInQuart,easeOutQuart);\n   var easeInCubic = function (time) {\n      return Math.pow(time,3);\n   };\n   var easeOutCubic = invert(easeInCubic);\n   var easeInOutCubic = A2(inOut,easeInCubic,easeOutCubic);\n   var easeInQuad = function (time) {    return Math.pow(time,2);};\n   var easeOutQuad = invert(easeInQuad);\n   var easeInOutQuad = A2(inOut,easeInQuad,easeOutQuad);\n   var linear = $Basics.identity;\n   var pair = F4(function (interpolate,_p1,_p0,v) {\n      var _p2 = _p1;\n      var _p3 = _p0;\n      return {ctor: "_Tuple2"\n             ,_0: A3(interpolate,_p2._0,_p3._0,v)\n             ,_1: A3(interpolate,_p2._1,_p3._1,v)};\n   });\n   var $float = F3(function (from,to,v) {\n      return from + (to - from) * v;\n   });\n   var point2d = F3(function (from,to,v) {\n      return {x: A3($float,from.x,to.x,v)\n             ,y: A3($float,from.y,to.y,v)};\n   });\n   var point3d = F3(function (from,to,v) {\n      return {x: A3($float,from.x,to.x,v)\n             ,y: A3($float,from.y,to.y,v)\n             ,z: A3($float,from.z,to.z,v)};\n   });\n   var color = F3(function (from,to,v) {\n      var float$ = F3(function (from,to,v) {\n         return $Basics.round(A3($float,\n         $Basics.toFloat(from),\n         $Basics.toFloat(to),\n         v));\n      });\n      var _p4 = {ctor: "_Tuple2"\n                ,_0: $Color.toRgb(from)\n                ,_1: $Color.toRgb(to)};\n      var rgb1 = _p4._0;\n      var rgb2 = _p4._1;\n      var _p5 = {ctor: "_Tuple4"\n                ,_0: rgb1.red\n                ,_1: rgb1.green\n                ,_2: rgb1.blue\n                ,_3: rgb1.alpha};\n      var r1 = _p5._0;\n      var g1 = _p5._1;\n      var b1 = _p5._2;\n      var a1 = _p5._3;\n      var _p6 = {ctor: "_Tuple4"\n                ,_0: rgb2.red\n                ,_1: rgb2.green\n                ,_2: rgb2.blue\n                ,_3: rgb2.alpha};\n      var r2 = _p6._0;\n      var g2 = _p6._1;\n      var b2 = _p6._2;\n      var a2 = _p6._3;\n      return A4($Color.rgba,\n      A3(float$,r1,r2,v),\n      A3(float$,g1,g2,v),\n      A3(float$,b1,b2,v),\n      A3($float,a1,a2,v));\n   });\n   var bezier = F5(function (x1,y1,x2,y2,time) {\n      var casteljau = function (ps) {\n         casteljau: while (true) {\n            var _p7 = ps;\n            if (_p7.ctor === "::" && _p7._0.ctor === "_Tuple2" && _p7._1.ctor === "[]")\n            {\n                  return _p7._0._1;\n               } else {\n                  var _p8 = _p7;\n                  var _v3 = A3($List.map2,\n                  F2(function (x,y) {    return A4(pair,$float,x,y,time);}),\n                  _p8,\n                  A2($Maybe.withDefault,_U.list([]),$List.tail(_p8)));\n                  ps = _v3;\n                  continue casteljau;\n               }\n         }\n      };\n      return casteljau(_U.list([{ctor: "_Tuple2",_0: 0,_1: 0}\n                               ,{ctor: "_Tuple2",_0: x1,_1: y1}\n                               ,{ctor: "_Tuple2",_0: x2,_1: y2}\n                               ,{ctor: "_Tuple2",_0: 1,_1: 1}]));\n   });\n   var ease = F6(function (easing,\n   interpolation,\n   from,\n   to,\n   duration,\n   time) {\n      return A3(interpolation,\n      from,\n      to,\n      easing(A2($Basics.min,time / duration,1)));\n   });\n   return _elm.Easing.values = {_op: _op\n                               ,ease: ease\n                               ,$float: $float\n                               ,point2d: point2d\n                               ,point3d: point3d\n                               ,color: color\n                               ,pair: pair\n                               ,cycle: cycle\n                               ,invert: invert\n                               ,retour: retour\n                               ,inOut: inOut\n                               ,flip: flip\n                               ,bezier: bezier\n                               ,linear: linear\n                               ,easeInQuad: easeInQuad\n                               ,easeOutQuad: easeOutQuad\n                               ,easeInOutQuad: easeInOutQuad\n                               ,easeInCubic: easeInCubic\n                               ,easeOutCubic: easeOutCubic\n                               ,easeInOutCubic: easeInOutCubic\n                               ,easeInQuart: easeInQuart\n                               ,easeOutQuart: easeOutQuart\n                               ,easeInOutQuart: easeInOutQuart\n                               ,easeInQuint: easeInQuint\n                               ,easeOutQuint: easeOutQuint\n                               ,easeInOutQuint: easeInOutQuint\n                               ,easeInSine: easeInSine\n                               ,easeOutSine: easeOutSine\n                               ,easeInOutSine: easeInOutSine\n                               ,easeInExpo: easeInExpo\n                               ,easeOutExpo: easeOutExpo\n                               ,easeInOutExpo: easeInOutExpo\n                               ,easeInCirc: easeInCirc\n                               ,easeOutCirc: easeOutCirc\n                               ,easeInOutCirc: easeInOutCirc\n                               ,easeInBack: easeInBack\n                               ,easeOutBack: easeOutBack\n                               ,easeInOutBack: easeInOutBack\n                               ,easeInBounce: easeInBounce\n                               ,easeOutBounce: easeOutBounce\n                               ,easeInOutBounce: easeInOutBounce\n                               ,easeInElastic: easeInElastic\n                               ,easeOutElastic: easeOutElastic\n                               ,easeInOutElastic: easeInOutElastic};\n};\nElm.Native.Array = {};\nElm.Native.Array.make = function(localRuntime) {\n\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.Array = localRuntime.Native.Array || {};\n	if (localRuntime.Native.Array.values)\n	{\n		return localRuntime.Native.Array.values;\n	}\n	if (\'values\' in Elm.Native.Array)\n	{\n		return localRuntime.Native.Array.values = Elm.Native.Array.values;\n	}\n\n	var List = Elm.Native.List.make(localRuntime);\n\n	// A RRB-Tree has two distinct data types.\n	// Leaf -> "height"  is always 0\n	//         "table"   is an array of elements\n	// Node -> "height"  is always greater than 0\n	//         "table"   is an array of child nodes\n	//         "lengths" is an array of accumulated lengths of the child nodes\n\n	// M is the maximal table size. 32 seems fast. E is the allowed increase\n	// of search steps when concatting to find an index. Lower values will\n	// decrease balancing, but will increase search steps.\n	var M = 32;\n	var E = 2;\n\n	// An empty array.\n	var empty = {\n		ctor: \'_Array\',\n		height: 0,\n		table: []\n	};\n\n\n	function get(i, array)\n	{\n		if (i < 0 || i >= length(array))\n		{\n			throw new Error(\n				\'Index \' + i + \' is out of range. Check the length of \' +\n				\'your array first or use getMaybe or getWithDefault.\');\n		}\n		return unsafeGet(i, array);\n	}\n\n\n	function unsafeGet(i, array)\n	{\n		for (var x = array.height; x > 0; x--)\n		{\n			var slot = i >> (x * 5);\n			while (array.lengths[slot] <= i)\n			{\n				slot++;\n			}\n			if (slot > 0)\n			{\n				i -= array.lengths[slot - 1];\n			}\n			array = array.table[slot];\n		}\n		return array.table[i];\n	}\n\n\n	// Sets the value at the index i. Only the nodes leading to i will get\n	// copied and updated.\n	function set(i, item, array)\n	{\n		if (i < 0 || length(array) <= i)\n		{\n			return array;\n		}\n		return unsafeSet(i, item, array);\n	}\n\n\n	function unsafeSet(i, item, array)\n	{\n		array = nodeCopy(array);\n\n		if (array.height === 0)\n		{\n			array.table[i] = item;\n		}\n		else\n		{\n			var slot = getSlot(i, array);\n			if (slot > 0)\n			{\n				i -= array.lengths[slot - 1];\n			}\n			array.table[slot] = unsafeSet(i, item, array.table[slot]);\n		}\n		return array;\n	}\n\n\n	function initialize(len, f)\n	{\n		if (len <= 0)\n		{\n			return empty;\n		}\n		var h = Math.floor( Math.log(len) / Math.log(M) );\n		return initialize_(f, h, 0, len);\n	}\n\n	function initialize_(f, h, from, to)\n	{\n		if (h === 0)\n		{\n			var table = new Array((to - from) % (M + 1));\n			for (var i = 0; i < table.length; i++)\n			{\n			  table[i] = f(from + i);\n			}\n			return {\n				ctor: \'_Array\',\n				height: 0,\n				table: table\n			};\n		}\n\n		var step = Math.pow(M, h);\n		var table = new Array(Math.ceil((to - from) / step));\n		var lengths = new Array(table.length);\n		for (var i = 0; i < table.length; i++)\n		{\n			table[i] = initialize_(f, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));\n			lengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);\n		}\n		return {\n			ctor: \'_Array\',\n			height: h,\n			table: table,\n			lengths: lengths\n		};\n	}\n\n	function fromList(list)\n	{\n		if (list === List.Nil)\n		{\n			return empty;\n		}\n\n		// Allocate M sized blocks (table) and write list elements to it.\n		var table = new Array(M);\n		var nodes = [];\n		var i = 0;\n\n		while (list.ctor !== \'[]\')\n		{\n			table[i] = list._0;\n			list = list._1;\n			i++;\n\n			// table is full, so we can push a leaf containing it into the\n			// next node.\n			if (i === M)\n			{\n				var leaf = {\n					ctor: \'_Array\',\n					height: 0,\n					table: table\n				};\n				fromListPush(leaf, nodes);\n				table = new Array(M);\n				i = 0;\n			}\n		}\n\n		// Maybe there is something left on the table.\n		if (i > 0)\n		{\n			var leaf = {\n				ctor: \'_Array\',\n				height: 0,\n				table: table.splice(0, i)\n			};\n			fromListPush(leaf, nodes);\n		}\n\n		// Go through all of the nodes and eventually push them into higher nodes.\n		for (var h = 0; h < nodes.length - 1; h++)\n		{\n			if (nodes[h].table.length > 0)\n			{\n				fromListPush(nodes[h], nodes);\n			}\n		}\n\n		var head = nodes[nodes.length - 1];\n		if (head.height > 0 && head.table.length === 1)\n		{\n			return head.table[0];\n		}\n		else\n		{\n			return head;\n		}\n	}\n\n	// Push a node into a higher node as a child.\n	function fromListPush(toPush, nodes)\n	{\n		var h = toPush.height;\n\n		// Maybe the node on this height does not exist.\n		if (nodes.length === h)\n		{\n			var node = {\n				ctor: \'_Array\',\n				height: h + 1,\n				table: [],\n				lengths: []\n			};\n			nodes.push(node);\n		}\n\n		nodes[h].table.push(toPush);\n		var len = length(toPush);\n		if (nodes[h].lengths.length > 0)\n		{\n			len += nodes[h].lengths[nodes[h].lengths.length - 1];\n		}\n		nodes[h].lengths.push(len);\n\n		if (nodes[h].table.length === M)\n		{\n			fromListPush(nodes[h], nodes);\n			nodes[h] = {\n				ctor: \'_Array\',\n				height: h + 1,\n				table: [],\n				lengths: []\n			};\n		}\n	}\n\n	// Pushes an item via push_ to the bottom right of a tree.\n	function push(item, a)\n	{\n		var pushed = push_(item, a);\n		if (pushed !== null)\n		{\n			return pushed;\n		}\n\n		var newTree = create(item, a.height);\n		return siblise(a, newTree);\n	}\n\n	// Recursively tries to push an item to the bottom-right most\n	// tree possible. If there is no space left for the item,\n	// null will be returned.\n	function push_(item, a)\n	{\n		// Handle resursion stop at leaf level.\n		if (a.height === 0)\n		{\n			if (a.table.length < M)\n			{\n				var newA = {\n					ctor: \'_Array\',\n					height: 0,\n					table: a.table.slice()\n				};\n				newA.table.push(item);\n				return newA;\n			}\n			else\n			{\n			  return null;\n			}\n		}\n\n		// Recursively push\n		var pushed = push_(item, botRight(a));\n\n		// There was space in the bottom right tree, so the slot will\n		// be updated.\n		if (pushed !== null)\n		{\n			var newA = nodeCopy(a);\n			newA.table[newA.table.length - 1] = pushed;\n			newA.lengths[newA.lengths.length - 1]++;\n			return newA;\n		}\n\n		// When there was no space left, check if there is space left\n		// for a new slot with a tree which contains only the item\n		// at the bottom.\n		if (a.table.length < M)\n		{\n			var newSlot = create(item, a.height - 1);\n			var newA = nodeCopy(a);\n			newA.table.push(newSlot);\n			newA.lengths.push(newA.lengths[newA.lengths.length - 1] + length(newSlot));\n			return newA;\n		}\n		else\n		{\n			return null;\n		}\n	}\n\n	// Converts an array into a list of elements.\n	function toList(a)\n	{\n		return toList_(List.Nil, a);\n	}\n\n	function toList_(list, a)\n	{\n		for (var i = a.table.length - 1; i >= 0; i--)\n		{\n			list =\n				a.height === 0\n					? List.Cons(a.table[i], list)\n					: toList_(list, a.table[i]);\n		}\n		return list;\n	}\n\n	// Maps a function over the elements of an array.\n	function map(f, a)\n	{\n		var newA = {\n			ctor: \'_Array\',\n			height: a.height,\n			table: new Array(a.table.length)\n		};\n		if (a.height > 0)\n		{\n			newA.lengths = a.lengths;\n		}\n		for (var i = 0; i < a.table.length; i++)\n		{\n			newA.table[i] =\n				a.height === 0\n					? f(a.table[i])\n					: map(f, a.table[i]);\n		}\n		return newA;\n	}\n\n	// Maps a function over the elements with their index as first argument.\n	function indexedMap(f, a)\n	{\n		return indexedMap_(f, a, 0);\n	}\n\n	function indexedMap_(f, a, from)\n	{\n		var newA = {\n			ctor: \'_Array\',\n			height: a.height,\n			table: new Array(a.table.length)\n		};\n		if (a.height > 0)\n		{\n			newA.lengths = a.lengths;\n		}\n		for (var i = 0; i < a.table.length; i++)\n		{\n			newA.table[i] =\n				a.height === 0\n					? A2(f, from + i, a.table[i])\n					: indexedMap_(f, a.table[i], i == 0 ? from : from + a.lengths[i - 1]);\n		}\n		return newA;\n	}\n\n	function foldl(f, b, a)\n	{\n		if (a.height === 0)\n		{\n			for (var i = 0; i < a.table.length; i++)\n			{\n				b = A2(f, a.table[i], b);\n			}\n		}\n		else\n		{\n			for (var i = 0; i < a.table.length; i++)\n			{\n				b = foldl(f, b, a.table[i]);\n			}\n		}\n		return b;\n	}\n\n	function foldr(f, b, a)\n	{\n		if (a.height === 0)\n		{\n			for (var i = a.table.length; i--; )\n			{\n				b = A2(f, a.table[i], b);\n			}\n		}\n		else\n		{\n			for (var i = a.table.length; i--; )\n			{\n				b = foldr(f, b, a.table[i]);\n			}\n		}\n		return b;\n	}\n\n	// TODO: currently, it slices the right, then the left. This can be\n	// optimized.\n	function slice(from, to, a)\n	{\n		if (from < 0)\n		{\n			from += length(a);\n		}\n		if (to < 0)\n		{\n			to += length(a);\n		}\n		return sliceLeft(from, sliceRight(to, a));\n	}\n\n	function sliceRight(to, a)\n	{\n		if (to === length(a))\n		{\n			return a;\n		}\n\n		// Handle leaf level.\n		if (a.height === 0)\n		{\n			var newA = { ctor:\'_Array\', height:0 };\n			newA.table = a.table.slice(0, to);\n			return newA;\n		}\n\n		// Slice the right recursively.\n		var right = getSlot(to, a);\n		var sliced = sliceRight(to - (right > 0 ? a.lengths[right - 1] : 0), a.table[right]);\n\n		// Maybe the a node is not even needed, as sliced contains the whole slice.\n		if (right === 0)\n		{\n			return sliced;\n		}\n\n		// Create new node.\n		var newA = {\n			ctor: \'_Array\',\n			height: a.height,\n			table: a.table.slice(0, right),\n			lengths: a.lengths.slice(0, right)\n		};\n		if (sliced.table.length > 0)\n		{\n			newA.table[right] = sliced;\n			newA.lengths[right] = length(sliced) + (right > 0 ? newA.lengths[right - 1] : 0);\n		}\n		return newA;\n	}\n\n	function sliceLeft(from, a)\n	{\n		if (from === 0)\n		{\n			return a;\n		}\n\n		// Handle leaf level.\n		if (a.height === 0)\n		{\n			var newA = { ctor:\'_Array\', height:0 };\n			newA.table = a.table.slice(from, a.table.length + 1);\n			return newA;\n		}\n\n		// Slice the left recursively.\n		var left = getSlot(from, a);\n		var sliced = sliceLeft(from - (left > 0 ? a.lengths[left - 1] : 0), a.table[left]);\n\n		// Maybe the a node is not even needed, as sliced contains the whole slice.\n		if (left === a.table.length - 1)\n		{\n			return sliced;\n		}\n\n		// Create new node.\n		var newA = {\n			ctor: \'_Array\',\n			height: a.height,\n			table: a.table.slice(left, a.table.length + 1),\n			lengths: new Array(a.table.length - left)\n		};\n		newA.table[0] = sliced;\n		var len = 0;\n		for (var i = 0; i < newA.table.length; i++)\n		{\n			len += length(newA.table[i]);\n			newA.lengths[i] = len;\n		}\n\n		return newA;\n	}\n\n	// Appends two trees.\n	function append(a,b)\n	{\n		if (a.table.length === 0)\n		{\n			return b;\n		}\n		if (b.table.length === 0)\n		{\n			return a;\n		}\n\n		var c = append_(a, b);\n\n		// Check if both nodes can be crunshed together.\n		if (c[0].table.length + c[1].table.length <= M)\n		{\n			if (c[0].table.length === 0)\n			{\n				return c[1];\n			}\n			if (c[1].table.length === 0)\n			{\n				return c[0];\n			}\n\n			// Adjust .table and .lengths\n			c[0].table = c[0].table.concat(c[1].table);\n			if (c[0].height > 0)\n			{\n				var len = length(c[0]);\n				for (var i = 0; i < c[1].lengths.length; i++)\n				{\n					c[1].lengths[i] += len;\n				}\n				c[0].lengths = c[0].lengths.concat(c[1].lengths);\n			}\n\n			return c[0];\n		}\n\n		if (c[0].height > 0)\n		{\n			var toRemove = calcToRemove(a, b);\n			if (toRemove > E)\n			{\n				c = shuffle(c[0], c[1], toRemove);\n			}\n		}\n\n		return siblise(c[0], c[1]);\n	}\n\n	// Returns an array of two nodes; right and left. One node _may_ be empty.\n	function append_(a, b)\n	{\n		if (a.height === 0 && b.height === 0)\n		{\n			return [a, b];\n		}\n\n		if (a.height !== 1 || b.height !== 1)\n		{\n			if (a.height === b.height)\n			{\n				a = nodeCopy(a);\n				b = nodeCopy(b);\n				var appended = append_(botRight(a), botLeft(b));\n\n				insertRight(a, appended[1]);\n				insertLeft(b, appended[0]);\n			}\n			else if (a.height > b.height)\n			{\n				a = nodeCopy(a);\n				var appended = append_(botRight(a), b);\n\n				insertRight(a, appended[0]);\n				b = parentise(appended[1], appended[1].height + 1);\n			}\n			else\n			{\n				b = nodeCopy(b);\n				var appended = append_(a, botLeft(b));\n\n				var left = appended[0].table.length === 0 ? 0 : 1;\n				var right = left === 0 ? 1 : 0;\n				insertLeft(b, appended[left]);\n				a = parentise(appended[right], appended[right].height + 1);\n			}\n		}\n\n		// Check if balancing is needed and return based on that.\n		if (a.table.length === 0 || b.table.length === 0)\n		{\n			return [a, b];\n		}\n\n		var toRemove = calcToRemove(a, b);\n		if (toRemove <= E)\n		{\n			return [a, b];\n		}\n		return shuffle(a, b, toRemove);\n	}\n\n	// Helperfunctions for append_. Replaces a child node at the side of the parent.\n	function insertRight(parent, node)\n	{\n		var index = parent.table.length - 1;\n		parent.table[index] = node;\n		parent.lengths[index] = length(node);\n		parent.lengths[index] += index > 0 ? parent.lengths[index - 1] : 0;\n	}\n\n	function insertLeft(parent, node)\n	{\n		if (node.table.length > 0)\n		{\n			parent.table[0] = node;\n			parent.lengths[0] = length(node);\n\n			var len = length(parent.table[0]);\n			for (var i = 1; i < parent.lengths.length; i++)\n			{\n				len += length(parent.table[i]);\n				parent.lengths[i] = len;\n			}\n		}\n		else\n		{\n			parent.table.shift();\n			for (var i = 1; i < parent.lengths.length; i++)\n			{\n				parent.lengths[i] = parent.lengths[i] - parent.lengths[0];\n			}\n			parent.lengths.shift();\n		}\n	}\n\n	// Returns the extra search steps for E. Refer to the paper.\n	function calcToRemove(a, b)\n	{\n		var subLengths = 0;\n		for (var i = 0; i < a.table.length; i++)\n		{\n			subLengths += a.table[i].table.length;\n		}\n		for (var i = 0; i < b.table.length; i++)\n		{\n			subLengths += b.table[i].table.length;\n		}\n\n		var toRemove = a.table.length + b.table.length;\n		return toRemove - (Math.floor((subLengths - 1) / M) + 1);\n	}\n\n	// get2, set2 and saveSlot are helpers for accessing elements over two arrays.\n	function get2(a, b, index)\n	{\n		return index < a.length\n			? a[index]\n			: b[index - a.length];\n	}\n\n	function set2(a, b, index, value)\n	{\n		if (index < a.length)\n		{\n			a[index] = value;\n		}\n		else\n		{\n			b[index - a.length] = value;\n		}\n	}\n\n	function saveSlot(a, b, index, slot)\n	{\n		set2(a.table, b.table, index, slot);\n\n		var l = (index === 0 || index === a.lengths.length)\n			? 0\n			: get2(a.lengths, a.lengths, index - 1);\n\n		set2(a.lengths, b.lengths, index, l + length(slot));\n	}\n\n	// Creates a node or leaf with a given length at their arrays for perfomance.\n	// Is only used by shuffle.\n	function createNode(h, length)\n	{\n		if (length < 0)\n		{\n			length = 0;\n		}\n		var a = {\n			ctor: \'_Array\',\n			height: h,\n			table: new Array(length)\n		};\n		if (h > 0)\n		{\n			a.lengths = new Array(length);\n		}\n		return a;\n	}\n\n	// Returns an array of two balanced nodes.\n	function shuffle(a, b, toRemove)\n	{\n		var newA = createNode(a.height, Math.min(M, a.table.length + b.table.length - toRemove));\n		var newB = createNode(a.height, newA.table.length - (a.table.length + b.table.length - toRemove));\n\n		// Skip the slots with size M. More precise: copy the slot references\n		// to the new node\n		var read = 0;\n		while (get2(a.table, b.table, read).table.length % M === 0)\n		{\n			set2(newA.table, newB.table, read, get2(a.table, b.table, read));\n			set2(newA.lengths, newB.lengths, read, get2(a.lengths, b.lengths, read));\n			read++;\n		}\n\n		// Pulling items from left to right, caching in a slot before writing\n		// it into the new nodes.\n		var write = read;\n		var slot = new createNode(a.height - 1, 0);\n		var from = 0;\n\n		// If the current slot is still containing data, then there will be at\n		// least one more write, so we do not break this loop yet.\n		while (read - write - (slot.table.length > 0 ? 1 : 0) < toRemove)\n		{\n			// Find out the max possible items for copying.\n			var source = get2(a.table, b.table, read);\n			var to = Math.min(M - slot.table.length, source.table.length);\n\n			// Copy and adjust size table.\n			slot.table = slot.table.concat(source.table.slice(from, to));\n			if (slot.height > 0)\n			{\n				var len = slot.lengths.length;\n				for (var i = len; i < len + to - from; i++)\n				{\n					slot.lengths[i] = length(slot.table[i]);\n					slot.lengths[i] += (i > 0 ? slot.lengths[i - 1] : 0);\n				}\n			}\n\n			from += to;\n\n			// Only proceed to next slots[i] if the current one was\n			// fully copied.\n			if (source.table.length <= to)\n			{\n				read++; from = 0;\n			}\n\n			// Only create a new slot if the current one is filled up.\n			if (slot.table.length === M)\n			{\n				saveSlot(newA, newB, write, slot);\n				slot = createNode(a.height - 1, 0);\n				write++;\n			}\n		}\n\n		// Cleanup after the loop. Copy the last slot into the new nodes.\n		if (slot.table.length > 0)\n		{\n			saveSlot(newA, newB, write, slot);\n			write++;\n		}\n\n		// Shift the untouched slots to the left\n		while (read < a.table.length + b.table.length )\n		{\n			saveSlot(newA, newB, write, get2(a.table, b.table, read));\n			read++;\n			write++;\n		}\n\n		return [newA, newB];\n	}\n\n	// Navigation functions\n	function botRight(a)\n	{\n		return a.table[a.table.length - 1];\n	}\n	function botLeft(a)\n	{\n		return a.table[0];\n	}\n\n	// Copies a node for updating. Note that you should not use this if\n	// only updating only one of "table" or "lengths" for performance reasons.\n	function nodeCopy(a)\n	{\n		var newA = {\n			ctor: \'_Array\',\n			height: a.height,\n			table: a.table.slice()\n		};\n		if (a.height > 0)\n		{\n			newA.lengths = a.lengths.slice();\n		}\n		return newA;\n	}\n\n	// Returns how many items are in the tree.\n	function length(array)\n	{\n		if (array.height === 0)\n		{\n			return array.table.length;\n		}\n		else\n		{\n			return array.lengths[array.lengths.length - 1];\n		}\n	}\n\n	// Calculates in which slot of "table" the item probably is, then\n	// find the exact slot via forward searching in  "lengths". Returns the index.\n	function getSlot(i, a)\n	{\n		var slot = i >> (5 * a.height);\n		while (a.lengths[slot] <= i)\n		{\n			slot++;\n		}\n		return slot;\n	}\n\n	// Recursively creates a tree with a given height containing\n	// only the given item.\n	function create(item, h)\n	{\n		if (h === 0)\n		{\n			return {\n				ctor: \'_Array\',\n				height: 0,\n				table: [item]\n			};\n		}\n		return {\n			ctor: \'_Array\',\n			height: h,\n			table: [create(item, h - 1)],\n			lengths: [1]\n		};\n	}\n\n	// Recursively creates a tree that contains the given tree.\n	function parentise(tree, h)\n	{\n		if (h === tree.height)\n		{\n			return tree;\n		}\n\n		return {\n			ctor: \'_Array\',\n			height: h,\n			table: [parentise(tree, h - 1)],\n			lengths: [length(tree)]\n		};\n	}\n\n	// Emphasizes blood brotherhood beneath two trees.\n	function siblise(a, b)\n	{\n		return {\n			ctor: \'_Array\',\n			height: a.height + 1,\n			table: [a, b],\n			lengths: [length(a), length(a) + length(b)]\n		};\n	}\n\n	function toJSArray(a)\n	{\n		var jsArray = new Array(length(a));\n		toJSArray_(jsArray, 0, a);\n		return jsArray;\n	}\n\n	function toJSArray_(jsArray, i, a)\n	{\n		for (var t = 0; t < a.table.length; t++)\n		{\n			if (a.height === 0)\n			{\n				jsArray[i + t] = a.table[t];\n			}\n			else\n			{\n				var inc = t === 0 ? 0 : a.lengths[t - 1];\n				toJSArray_(jsArray, i + inc, a.table[t]);\n			}\n		}\n	}\n\n	function fromJSArray(jsArray)\n	{\n		if (jsArray.length === 0)\n		{\n			return empty;\n		}\n		var h = Math.floor(Math.log(jsArray.length) / Math.log(M));\n		return fromJSArray_(jsArray, h, 0, jsArray.length);\n	}\n\n	function fromJSArray_(jsArray, h, from, to)\n	{\n		if (h === 0)\n		{\n			return {\n				ctor: \'_Array\',\n				height: 0,\n				table: jsArray.slice(from, to)\n			};\n		}\n\n		var step = Math.pow(M, h);\n		var table = new Array(Math.ceil((to - from) / step));\n		var lengths = new Array(table.length);\n		for (var i = 0; i < table.length; i++)\n		{\n			table[i] = fromJSArray_(jsArray, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));\n			lengths[i] = length(table[i]) + (i > 0 ? lengths[i - 1] : 0);\n		}\n		return {\n			ctor: \'_Array\',\n			height: h,\n			table: table,\n			lengths: lengths\n		};\n	}\n\n	Elm.Native.Array.values = {\n		empty: empty,\n		fromList: fromList,\n		toList: toList,\n		initialize: F2(initialize),\n		append: F2(append),\n		push: F2(push),\n		slice: F3(slice),\n		get: F2(get),\n		set: F3(set),\n		map: F2(map),\n		indexedMap: F2(indexedMap),\n		foldl: F3(foldl),\n		foldr: F3(foldr),\n		length: length,\n\n		toJSArray: toJSArray,\n		fromJSArray: fromJSArray\n	};\n\n	return localRuntime.Native.Array.values = Elm.Native.Array.values;\n};\n\nElm.Array = Elm.Array || {};\nElm.Array.make = function (_elm) {\n   "use strict";\n   _elm.Array = _elm.Array || {};\n   if (_elm.Array.values) return _elm.Array.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Array = Elm.Native.Array.make(_elm);\n   var _op = {};\n   var append = $Native$Array.append;\n   var length = $Native$Array.length;\n   var isEmpty = function (array) {\n      return _U.eq(length(array),0);\n   };\n   var slice = $Native$Array.slice;\n   var set = $Native$Array.set;\n   var get = F2(function (i,array) {\n      return _U.cmp(0,i) < 1 && _U.cmp(i,\n      $Native$Array.length(array)) < 0 ? $Maybe.Just(A2($Native$Array.get,\n      i,\n      array)) : $Maybe.Nothing;\n   });\n   var push = $Native$Array.push;\n   var empty = $Native$Array.empty;\n   var filter = F2(function (isOkay,arr) {\n      var update = F2(function (x,xs) {\n         return isOkay(x) ? A2($Native$Array.push,x,xs) : xs;\n      });\n      return A3($Native$Array.foldl,update,$Native$Array.empty,arr);\n   });\n   var foldr = $Native$Array.foldr;\n   var foldl = $Native$Array.foldl;\n   var indexedMap = $Native$Array.indexedMap;\n   var map = $Native$Array.map;\n   var toIndexedList = function (array) {\n      return A3($List.map2,\n      F2(function (v0,v1) {\n         return {ctor: "_Tuple2",_0: v0,_1: v1};\n      }),\n      _U.range(0,$Native$Array.length(array) - 1),\n      $Native$Array.toList(array));\n   };\n   var toList = $Native$Array.toList;\n   var fromList = $Native$Array.fromList;\n   var initialize = $Native$Array.initialize;\n   var repeat = F2(function (n,e) {\n      return A2(initialize,n,$Basics.always(e));\n   });\n   var Array = {ctor: "Array"};\n   return _elm.Array.values = {_op: _op\n                              ,empty: empty\n                              ,repeat: repeat\n                              ,initialize: initialize\n                              ,fromList: fromList\n                              ,isEmpty: isEmpty\n                              ,length: length\n                              ,push: push\n                              ,append: append\n                              ,get: get\n                              ,set: set\n                              ,slice: slice\n                              ,toList: toList\n                              ,toIndexedList: toIndexedList\n                              ,map: map\n                              ,indexedMap: indexedMap\n                              ,filter: filter\n                              ,foldl: foldl\n                              ,foldr: foldr};\n};\nElm.Native.Char = {};\nElm.Native.Char.make = function(localRuntime) {\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.Char = localRuntime.Native.Char || {};\n	if (localRuntime.Native.Char.values)\n	{\n		return localRuntime.Native.Char.values;\n	}\n\n	var Utils = Elm.Native.Utils.make(localRuntime);\n\n	return localRuntime.Native.Char.values = {\n		fromCode: function(c) { return Utils.chr(String.fromCharCode(c)); },\n		toCode: function(c) { return c.charCodeAt(0); },\n		toUpper: function(c) { return Utils.chr(c.toUpperCase()); },\n		toLower: function(c) { return Utils.chr(c.toLowerCase()); },\n		toLocaleUpper: function(c) { return Utils.chr(c.toLocaleUpperCase()); },\n		toLocaleLower: function(c) { return Utils.chr(c.toLocaleLowerCase()); }\n	};\n};\n\nElm.Char = Elm.Char || {};\nElm.Char.make = function (_elm) {\n   "use strict";\n   _elm.Char = _elm.Char || {};\n   if (_elm.Char.values) return _elm.Char.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Native$Char = Elm.Native.Char.make(_elm);\n   var _op = {};\n   var fromCode = $Native$Char.fromCode;\n   var toCode = $Native$Char.toCode;\n   var toLocaleLower = $Native$Char.toLocaleLower;\n   var toLocaleUpper = $Native$Char.toLocaleUpper;\n   var toLower = $Native$Char.toLower;\n   var toUpper = $Native$Char.toUpper;\n   var isBetween = F3(function (low,high,$char) {\n      var code = toCode($char);\n      return _U.cmp(code,toCode(low)) > -1 && _U.cmp(code,\n      toCode(high)) < 1;\n   });\n   var isUpper = A2(isBetween,_U.chr("A"),_U.chr("Z"));\n   var isLower = A2(isBetween,_U.chr("a"),_U.chr("z"));\n   var isDigit = A2(isBetween,_U.chr("0"),_U.chr("9"));\n   var isOctDigit = A2(isBetween,_U.chr("0"),_U.chr("7"));\n   var isHexDigit = function ($char) {\n      return isDigit($char) || (A3(isBetween,\n      _U.chr("a"),\n      _U.chr("f"),\n      $char) || A3(isBetween,_U.chr("A"),_U.chr("F"),$char));\n   };\n   return _elm.Char.values = {_op: _op\n                             ,isUpper: isUpper\n                             ,isLower: isLower\n                             ,isDigit: isDigit\n                             ,isOctDigit: isOctDigit\n                             ,isHexDigit: isHexDigit\n                             ,toUpper: toUpper\n                             ,toLower: toLower\n                             ,toLocaleUpper: toLocaleUpper\n                             ,toLocaleLower: toLocaleLower\n                             ,toCode: toCode\n                             ,fromCode: fromCode};\n};\nElm.Native.String = {};\n\nElm.Native.String.make = function(localRuntime) {\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.String = localRuntime.Native.String || {};\n	if (localRuntime.Native.String.values)\n	{\n		return localRuntime.Native.String.values;\n	}\n	if (\'values\' in Elm.Native.String)\n	{\n		return localRuntime.Native.String.values = Elm.Native.String.values;\n	}\n\n\n	var Char = Elm.Char.make(localRuntime);\n	var List = Elm.Native.List.make(localRuntime);\n	var Maybe = Elm.Maybe.make(localRuntime);\n	var Result = Elm.Result.make(localRuntime);\n	var Utils = Elm.Native.Utils.make(localRuntime);\n\n	function isEmpty(str)\n	{\n		return str.length === 0;\n	}\n	function cons(chr, str)\n	{\n		return chr + str;\n	}\n	function uncons(str)\n	{\n		var hd = str[0];\n		if (hd)\n		{\n			return Maybe.Just(Utils.Tuple2(Utils.chr(hd), str.slice(1)));\n		}\n		return Maybe.Nothing;\n	}\n	function append(a, b)\n	{\n		return a + b;\n	}\n	function concat(strs)\n	{\n		return List.toArray(strs).join(\'\');\n	}\n	function length(str)\n	{\n		return str.length;\n	}\n	function map(f, str)\n	{\n		var out = str.split(\'\');\n		for (var i = out.length; i--; )\n		{\n			out[i] = f(Utils.chr(out[i]));\n		}\n		return out.join(\'\');\n	}\n	function filter(pred, str)\n	{\n		return str.split(\'\').map(Utils.chr).filter(pred).join(\'\');\n	}\n	function reverse(str)\n	{\n		return str.split(\'\').reverse().join(\'\');\n	}\n	function foldl(f, b, str)\n	{\n		var len = str.length;\n		for (var i = 0; i < len; ++i)\n		{\n			b = A2(f, Utils.chr(str[i]), b);\n		}\n		return b;\n	}\n	function foldr(f, b, str)\n	{\n		for (var i = str.length; i--; )\n		{\n			b = A2(f, Utils.chr(str[i]), b);\n		}\n		return b;\n	}\n	function split(sep, str)\n	{\n		return List.fromArray(str.split(sep));\n	}\n	function join(sep, strs)\n	{\n		return List.toArray(strs).join(sep);\n	}\n	function repeat(n, str)\n	{\n		var result = \'\';\n		while (n > 0)\n		{\n			if (n & 1)\n			{\n				result += str;\n			}\n			n >>= 1, str += str;\n		}\n		return result;\n	}\n	function slice(start, end, str)\n	{\n		return str.slice(start, end);\n	}\n	function left(n, str)\n	{\n		return n < 1 ? \'\' : str.slice(0, n);\n	}\n	function right(n, str)\n	{\n		return n < 1 ? \'\' : str.slice(-n);\n	}\n	function dropLeft(n, str)\n	{\n		return n < 1 ? str : str.slice(n);\n	}\n	function dropRight(n, str)\n	{\n		return n < 1 ? str : str.slice(0, -n);\n	}\n	function pad(n, chr, str)\n	{\n		var half = (n - str.length) / 2;\n		return repeat(Math.ceil(half), chr) + str + repeat(half | 0, chr);\n	}\n	function padRight(n, chr, str)\n	{\n		return str + repeat(n - str.length, chr);\n	}\n	function padLeft(n, chr, str)\n	{\n		return repeat(n - str.length, chr) + str;\n	}\n\n	function trim(str)\n	{\n		return str.trim();\n	}\n	function trimLeft(str)\n	{\n		return str.replace(/^\\s+/, \'\');\n	}\n	function trimRight(str)\n	{\n		return str.replace(/\\s+$/, \'\');\n	}\n\n	function words(str)\n	{\n		return List.fromArray(str.trim().split(/\\s+/g));\n	}\n	function lines(str)\n	{\n		return List.fromArray(str.split(/\\r\\n|\\r|\\n/g));\n	}\n\n	function toUpper(str)\n	{\n		return str.toUpperCase();\n	}\n	function toLower(str)\n	{\n		return str.toLowerCase();\n	}\n\n	function any(pred, str)\n	{\n		for (var i = str.length; i--; )\n		{\n			if (pred(Utils.chr(str[i])))\n			{\n				return true;\n			}\n		}\n		return false;\n	}\n	function all(pred, str)\n	{\n		for (var i = str.length; i--; )\n		{\n			if (!pred(Utils.chr(str[i])))\n			{\n				return false;\n			}\n		}\n		return true;\n	}\n\n	function contains(sub, str)\n	{\n		return str.indexOf(sub) > -1;\n	}\n	function startsWith(sub, str)\n	{\n		return str.indexOf(sub) === 0;\n	}\n	function endsWith(sub, str)\n	{\n		return str.length >= sub.length &&\n			str.lastIndexOf(sub) === str.length - sub.length;\n	}\n	function indexes(sub, str)\n	{\n		var subLen = sub.length;\n		var i = 0;\n		var is = [];\n		while ((i = str.indexOf(sub, i)) > -1)\n		{\n			is.push(i);\n			i = i + subLen;\n		}\n		return List.fromArray(is);\n	}\n\n	function toInt(s)\n	{\n		var len = s.length;\n		if (len === 0)\n		{\n			return Result.Err("could not convert string \'" + s + "\' to an Int" );\n		}\n		var start = 0;\n		if (s[0] === \'-\')\n		{\n			if (len === 1)\n			{\n				return Result.Err("could not convert string \'" + s + "\' to an Int" );\n			}\n			start = 1;\n		}\n		for (var i = start; i < len; ++i)\n		{\n			if (!Char.isDigit(s[i]))\n			{\n				return Result.Err("could not convert string \'" + s + "\' to an Int" );\n			}\n		}\n		return Result.Ok(parseInt(s, 10));\n	}\n\n	function toFloat(s)\n	{\n		var len = s.length;\n		if (len === 0)\n		{\n			return Result.Err("could not convert string \'" + s + "\' to a Float" );\n		}\n		var start = 0;\n		if (s[0] === \'-\')\n		{\n			if (len === 1)\n			{\n				return Result.Err("could not convert string \'" + s + "\' to a Float" );\n			}\n			start = 1;\n		}\n		var dotCount = 0;\n		for (var i = start; i < len; ++i)\n		{\n			if (Char.isDigit(s[i]))\n			{\n				continue;\n			}\n			if (s[i] === \'.\')\n			{\n				dotCount += 1;\n				if (dotCount <= 1)\n				{\n					continue;\n				}\n			}\n			return Result.Err("could not convert string \'" + s + "\' to a Float" );\n		}\n		return Result.Ok(parseFloat(s));\n	}\n\n	function toList(str)\n	{\n		return List.fromArray(str.split(\'\').map(Utils.chr));\n	}\n	function fromList(chars)\n	{\n		return List.toArray(chars).join(\'\');\n	}\n\n	return Elm.Native.String.values = {\n		isEmpty: isEmpty,\n		cons: F2(cons),\n		uncons: uncons,\n		append: F2(append),\n		concat: concat,\n		length: length,\n		map: F2(map),\n		filter: F2(filter),\n		reverse: reverse,\n		foldl: F3(foldl),\n		foldr: F3(foldr),\n\n		split: F2(split),\n		join: F2(join),\n		repeat: F2(repeat),\n\n		slice: F3(slice),\n		left: F2(left),\n		right: F2(right),\n		dropLeft: F2(dropLeft),\n		dropRight: F2(dropRight),\n\n		pad: F3(pad),\n		padLeft: F3(padLeft),\n		padRight: F3(padRight),\n\n		trim: trim,\n		trimLeft: trimLeft,\n		trimRight: trimRight,\n\n		words: words,\n		lines: lines,\n\n		toUpper: toUpper,\n		toLower: toLower,\n\n		any: F2(any),\n		all: F2(all),\n\n		contains: F2(contains),\n		startsWith: F2(startsWith),\n		endsWith: F2(endsWith),\n		indexes: F2(indexes),\n\n		toInt: toInt,\n		toFloat: toFloat,\n		toList: toList,\n		fromList: fromList\n	};\n};\n\nElm.String = Elm.String || {};\nElm.String.make = function (_elm) {\n   "use strict";\n   _elm.String = _elm.String || {};\n   if (_elm.String.values) return _elm.String.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$String = Elm.Native.String.make(_elm),\n   $Result = Elm.Result.make(_elm);\n   var _op = {};\n   var fromList = $Native$String.fromList;\n   var toList = $Native$String.toList;\n   var toFloat = $Native$String.toFloat;\n   var toInt = $Native$String.toInt;\n   var indices = $Native$String.indexes;\n   var indexes = $Native$String.indexes;\n   var endsWith = $Native$String.endsWith;\n   var startsWith = $Native$String.startsWith;\n   var contains = $Native$String.contains;\n   var all = $Native$String.all;\n   var any = $Native$String.any;\n   var toLower = $Native$String.toLower;\n   var toUpper = $Native$String.toUpper;\n   var lines = $Native$String.lines;\n   var words = $Native$String.words;\n   var trimRight = $Native$String.trimRight;\n   var trimLeft = $Native$String.trimLeft;\n   var trim = $Native$String.trim;\n   var padRight = $Native$String.padRight;\n   var padLeft = $Native$String.padLeft;\n   var pad = $Native$String.pad;\n   var dropRight = $Native$String.dropRight;\n   var dropLeft = $Native$String.dropLeft;\n   var right = $Native$String.right;\n   var left = $Native$String.left;\n   var slice = $Native$String.slice;\n   var repeat = $Native$String.repeat;\n   var join = $Native$String.join;\n   var split = $Native$String.split;\n   var foldr = $Native$String.foldr;\n   var foldl = $Native$String.foldl;\n   var reverse = $Native$String.reverse;\n   var filter = $Native$String.filter;\n   var map = $Native$String.map;\n   var length = $Native$String.length;\n   var concat = $Native$String.concat;\n   var append = $Native$String.append;\n   var uncons = $Native$String.uncons;\n   var cons = $Native$String.cons;\n   var fromChar = function ($char) {    return A2(cons,$char,"");};\n   var isEmpty = $Native$String.isEmpty;\n   return _elm.String.values = {_op: _op\n                               ,isEmpty: isEmpty\n                               ,length: length\n                               ,reverse: reverse\n                               ,repeat: repeat\n                               ,cons: cons\n                               ,uncons: uncons\n                               ,fromChar: fromChar\n                               ,append: append\n                               ,concat: concat\n                               ,split: split\n                               ,join: join\n                               ,words: words\n                               ,lines: lines\n                               ,slice: slice\n                               ,left: left\n                               ,right: right\n                               ,dropLeft: dropLeft\n                               ,dropRight: dropRight\n                               ,contains: contains\n                               ,startsWith: startsWith\n                               ,endsWith: endsWith\n                               ,indexes: indexes\n                               ,indices: indices\n                               ,toInt: toInt\n                               ,toFloat: toFloat\n                               ,toList: toList\n                               ,fromList: fromList\n                               ,toUpper: toUpper\n                               ,toLower: toLower\n                               ,pad: pad\n                               ,padLeft: padLeft\n                               ,padRight: padRight\n                               ,trim: trim\n                               ,trimLeft: trimLeft\n                               ,trimRight: trimRight\n                               ,map: map\n                               ,filter: filter\n                               ,foldl: foldl\n                               ,foldr: foldr\n                               ,any: any\n                               ,all: all};\n};\nElm.Dict = Elm.Dict || {};\nElm.Dict.make = function (_elm) {\n   "use strict";\n   _elm.Dict = _elm.Dict || {};\n   if (_elm.Dict.values) return _elm.Dict.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Debug = Elm.Native.Debug.make(_elm),\n   $String = Elm.String.make(_elm);\n   var _op = {};\n   var foldr = F3(function (f,acc,t) {\n      foldr: while (true) {\n         var _p0 = t;\n         if (_p0.ctor === "RBEmpty_elm_builtin") {\n               return acc;\n            } else {\n               var _v1 = f,\n               _v2 = A3(f,_p0._1,_p0._2,A3(foldr,f,acc,_p0._4)),\n               _v3 = _p0._3;\n               f = _v1;\n               acc = _v2;\n               t = _v3;\n               continue foldr;\n            }\n      }\n   });\n   var keys = function (dict) {\n      return A3(foldr,\n      F3(function (key,value,keyList) {\n         return A2($List._op["::"],key,keyList);\n      }),\n      _U.list([]),\n      dict);\n   };\n   var values = function (dict) {\n      return A3(foldr,\n      F3(function (key,value,valueList) {\n         return A2($List._op["::"],value,valueList);\n      }),\n      _U.list([]),\n      dict);\n   };\n   var toList = function (dict) {\n      return A3(foldr,\n      F3(function (key,value,list) {\n         return A2($List._op["::"],\n         {ctor: "_Tuple2",_0: key,_1: value},\n         list);\n      }),\n      _U.list([]),\n      dict);\n   };\n   var foldl = F3(function (f,acc,dict) {\n      foldl: while (true) {\n         var _p1 = dict;\n         if (_p1.ctor === "RBEmpty_elm_builtin") {\n               return acc;\n            } else {\n               var _v5 = f,\n               _v6 = A3(f,_p1._1,_p1._2,A3(foldl,f,acc,_p1._3)),\n               _v7 = _p1._4;\n               f = _v5;\n               acc = _v6;\n               dict = _v7;\n               continue foldl;\n            }\n      }\n   });\n   var reportRemBug = F4(function (msg,c,lgot,rgot) {\n      return $Native$Debug.crash($String.concat(_U.list(["Internal red-black tree invariant violated, expected "\n                                                        ,msg\n                                                        ," and got "\n                                                        ,$Basics.toString(c)\n                                                        ,"/"\n                                                        ,lgot\n                                                        ,"/"\n                                                        ,rgot\n                                                        ,"\\nPlease report this bug to <https://github.com/elm-lang/core/issues>"])));\n   });\n   var isBBlack = function (dict) {\n      var _p2 = dict;\n      _v8_2: do {\n         if (_p2.ctor === "RBNode_elm_builtin") {\n               if (_p2._0.ctor === "BBlack") {\n                     return true;\n                  } else {\n                     break _v8_2;\n                  }\n            } else {\n               if (_p2._0.ctor === "LBBlack") {\n                     return true;\n                  } else {\n                     break _v8_2;\n                  }\n            }\n      } while (false);\n      return false;\n   };\n   var Same = {ctor: "Same"};\n   var Remove = {ctor: "Remove"};\n   var Insert = {ctor: "Insert"};\n   var sizeHelp = F2(function (n,dict) {\n      sizeHelp: while (true) {\n         var _p3 = dict;\n         if (_p3.ctor === "RBEmpty_elm_builtin") {\n               return n;\n            } else {\n               var _v10 = A2(sizeHelp,n + 1,_p3._4),_v11 = _p3._3;\n               n = _v10;\n               dict = _v11;\n               continue sizeHelp;\n            }\n      }\n   });\n   var size = function (dict) {    return A2(sizeHelp,0,dict);};\n   var get = F2(function (targetKey,dict) {\n      get: while (true) {\n         var _p4 = dict;\n         if (_p4.ctor === "RBEmpty_elm_builtin") {\n               return $Maybe.Nothing;\n            } else {\n               var _p5 = A2($Basics.compare,targetKey,_p4._1);\n               switch (_p5.ctor)\n               {case "LT": var _v14 = targetKey,_v15 = _p4._3;\n                    targetKey = _v14;\n                    dict = _v15;\n                    continue get;\n                  case "EQ": return $Maybe.Just(_p4._2);\n                  default: var _v16 = targetKey,_v17 = _p4._4;\n                    targetKey = _v16;\n                    dict = _v17;\n                    continue get;}\n            }\n      }\n   });\n   var member = F2(function (key,dict) {\n      var _p6 = A2(get,key,dict);\n      if (_p6.ctor === "Just") {\n            return true;\n         } else {\n            return false;\n         }\n   });\n   var maxWithDefault = F3(function (k,v,r) {\n      maxWithDefault: while (true) {\n         var _p7 = r;\n         if (_p7.ctor === "RBEmpty_elm_builtin") {\n               return {ctor: "_Tuple2",_0: k,_1: v};\n            } else {\n               var _v20 = _p7._1,_v21 = _p7._2,_v22 = _p7._4;\n               k = _v20;\n               v = _v21;\n               r = _v22;\n               continue maxWithDefault;\n            }\n      }\n   });\n   var RBEmpty_elm_builtin = function (a) {\n      return {ctor: "RBEmpty_elm_builtin",_0: a};\n   };\n   var RBNode_elm_builtin = F5(function (a,b,c,d,e) {\n      return {ctor: "RBNode_elm_builtin"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d\n             ,_4: e};\n   });\n   var LBBlack = {ctor: "LBBlack"};\n   var LBlack = {ctor: "LBlack"};\n   var empty = RBEmpty_elm_builtin(LBlack);\n   var isEmpty = function (dict) {    return _U.eq(dict,empty);};\n   var map = F2(function (f,dict) {\n      var _p8 = dict;\n      if (_p8.ctor === "RBEmpty_elm_builtin") {\n            return RBEmpty_elm_builtin(LBlack);\n         } else {\n            var _p9 = _p8._1;\n            return A5(RBNode_elm_builtin,\n            _p8._0,\n            _p9,\n            A2(f,_p9,_p8._2),\n            A2(map,f,_p8._3),\n            A2(map,f,_p8._4));\n         }\n   });\n   var NBlack = {ctor: "NBlack"};\n   var BBlack = {ctor: "BBlack"};\n   var Black = {ctor: "Black"};\n   var ensureBlackRoot = function (dict) {\n      var _p10 = dict;\n      if (_p10.ctor === "RBNode_elm_builtin" && _p10._0.ctor === "Red")\n      {\n            return A5(RBNode_elm_builtin,\n            Black,\n            _p10._1,\n            _p10._2,\n            _p10._3,\n            _p10._4);\n         } else {\n            return dict;\n         }\n   };\n   var blackish = function (t) {\n      var _p11 = t;\n      if (_p11.ctor === "RBNode_elm_builtin") {\n            var _p12 = _p11._0;\n            return _U.eq(_p12,Black) || _U.eq(_p12,BBlack);\n         } else {\n            return true;\n         }\n   };\n   var blacken = function (t) {\n      var _p13 = t;\n      if (_p13.ctor === "RBEmpty_elm_builtin") {\n            return RBEmpty_elm_builtin(LBlack);\n         } else {\n            return A5(RBNode_elm_builtin,\n            Black,\n            _p13._1,\n            _p13._2,\n            _p13._3,\n            _p13._4);\n         }\n   };\n   var Red = {ctor: "Red"};\n   var moreBlack = function (color) {\n      var _p14 = color;\n      switch (_p14.ctor)\n      {case "Black": return BBlack;\n         case "Red": return Black;\n         case "NBlack": return Red;\n         default:\n         return $Native$Debug.crash("Can\\\'t make a double black node more black!");}\n   };\n   var lessBlack = function (color) {\n      var _p15 = color;\n      switch (_p15.ctor)\n      {case "BBlack": return Black;\n         case "Black": return Red;\n         case "Red": return NBlack;\n         default:\n         return $Native$Debug.crash("Can\\\'t make a negative black node less black!");}\n   };\n   var lessBlackTree = function (dict) {\n      var _p16 = dict;\n      if (_p16.ctor === "RBNode_elm_builtin") {\n            return A5(RBNode_elm_builtin,\n            lessBlack(_p16._0),\n            _p16._1,\n            _p16._2,\n            _p16._3,\n            _p16._4);\n         } else {\n            return RBEmpty_elm_builtin(LBlack);\n         }\n   };\n   var balancedTree = function (col) {\n      return function (xk) {\n         return function (xv) {\n            return function (yk) {\n               return function (yv) {\n                  return function (zk) {\n                     return function (zv) {\n                        return function (a) {\n                           return function (b) {\n                              return function (c) {\n                                 return function (d) {\n                                    return A5(RBNode_elm_builtin,\n                                    lessBlack(col),\n                                    yk,\n                                    yv,\n                                    A5(RBNode_elm_builtin,Black,xk,xv,a,b),\n                                    A5(RBNode_elm_builtin,Black,zk,zv,c,d));\n                                 };\n                              };\n                           };\n                        };\n                     };\n                  };\n               };\n            };\n         };\n      };\n   };\n   var redden = function (t) {\n      var _p17 = t;\n      if (_p17.ctor === "RBEmpty_elm_builtin") {\n            return $Native$Debug.crash("can\\\'t make a Leaf red");\n         } else {\n            return A5(RBNode_elm_builtin,\n            Red,\n            _p17._1,\n            _p17._2,\n            _p17._3,\n            _p17._4);\n         }\n   };\n   var balanceHelp = function (tree) {\n      var _p18 = tree;\n      _v31_6: do {\n         _v31_5: do {\n            _v31_4: do {\n               _v31_3: do {\n                  _v31_2: do {\n                     _v31_1: do {\n                        _v31_0: do {\n                           if (_p18.ctor === "RBNode_elm_builtin") {\n                                 if (_p18._3.ctor === "RBNode_elm_builtin") {\n                                       if (_p18._4.ctor === "RBNode_elm_builtin") {\n                                             switch (_p18._3._0.ctor)\n                                             {case "Red": switch (_p18._4._0.ctor)\n                                                  {case "Red":\n                                                     if (_p18._3._3.ctor === "RBNode_elm_builtin" && _p18._3._3._0.ctor === "Red")\n                                                       {\n                                                             break _v31_0;\n                                                          } else {\n                                                             if (_p18._3._4.ctor === "RBNode_elm_builtin" && _p18._3._4._0.ctor === "Red")\n                                                             {\n                                                                   break _v31_1;\n                                                                } else {\n                                                                   if (_p18._4._3.ctor === "RBNode_elm_builtin" && _p18._4._3._0.ctor === "Red")\n                                                                   {\n                                                                         break _v31_2;\n                                                                      } else {\n                                                                         if (_p18._4._4.ctor === "RBNode_elm_builtin" && _p18._4._4._0.ctor === "Red")\n                                                                         {\n                                                                               break _v31_3;\n                                                                            } else {\n                                                                               break _v31_6;\n                                                                            }\n                                                                      }\n                                                                }\n                                                          }\n                                                     case "NBlack":\n                                                     if (_p18._3._3.ctor === "RBNode_elm_builtin" && _p18._3._3._0.ctor === "Red")\n                                                       {\n                                                             break _v31_0;\n                                                          } else {\n                                                             if (_p18._3._4.ctor === "RBNode_elm_builtin" && _p18._3._4._0.ctor === "Red")\n                                                             {\n                                                                   break _v31_1;\n                                                                } else {\n                                                                   if (_p18._0.ctor === "BBlack" && _p18._4._3.ctor === "RBNode_elm_builtin" && _p18._4._3._0.ctor === "Black" && _p18._4._4.ctor === "RBNode_elm_builtin" && _p18._4._4._0.ctor === "Black")\n                                                                   {\n                                                                         break _v31_4;\n                                                                      } else {\n                                                                         break _v31_6;\n                                                                      }\n                                                                }\n                                                          }\n                                                     default:\n                                                     if (_p18._3._3.ctor === "RBNode_elm_builtin" && _p18._3._3._0.ctor === "Red")\n                                                       {\n                                                             break _v31_0;\n                                                          } else {\n                                                             if (_p18._3._4.ctor === "RBNode_elm_builtin" && _p18._3._4._0.ctor === "Red")\n                                                             {\n                                                                   break _v31_1;\n                                                                } else {\n                                                                   break _v31_6;\n                                                                }\n                                                          }}\n                                                case "NBlack": switch (_p18._4._0.ctor)\n                                                  {case "Red":\n                                                     if (_p18._4._3.ctor === "RBNode_elm_builtin" && _p18._4._3._0.ctor === "Red")\n                                                       {\n                                                             break _v31_2;\n                                                          } else {\n                                                             if (_p18._4._4.ctor === "RBNode_elm_builtin" && _p18._4._4._0.ctor === "Red")\n                                                             {\n                                                                   break _v31_3;\n                                                                } else {\n                                                                   if (_p18._0.ctor === "BBlack" && _p18._3._3.ctor === "RBNode_elm_builtin" && _p18._3._3._0.ctor === "Black" && _p18._3._4.ctor === "RBNode_elm_builtin" && _p18._3._4._0.ctor === "Black")\n                                                                   {\n                                                                         break _v31_5;\n                                                                      } else {\n                                                                         break _v31_6;\n                                                                      }\n                                                                }\n                                                          }\n                                                     case "NBlack": if (_p18._0.ctor === "BBlack") {\n                                                             if (_p18._4._3.ctor === "RBNode_elm_builtin" && _p18._4._3._0.ctor === "Black" && _p18._4._4.ctor === "RBNode_elm_builtin" && _p18._4._4._0.ctor === "Black")\n                                                             {\n                                                                   break _v31_4;\n                                                                } else {\n                                                                   if (_p18._3._3.ctor === "RBNode_elm_builtin" && _p18._3._3._0.ctor === "Black" && _p18._3._4.ctor === "RBNode_elm_builtin" && _p18._3._4._0.ctor === "Black")\n                                                                   {\n                                                                         break _v31_5;\n                                                                      } else {\n                                                                         break _v31_6;\n                                                                      }\n                                                                }\n                                                          } else {\n                                                             break _v31_6;\n                                                          }\n                                                     default:\n                                                     if (_p18._0.ctor === "BBlack" && _p18._3._3.ctor === "RBNode_elm_builtin" && _p18._3._3._0.ctor === "Black" && _p18._3._4.ctor === "RBNode_elm_builtin" && _p18._3._4._0.ctor === "Black")\n                                                       {\n                                                             break _v31_5;\n                                                          } else {\n                                                             break _v31_6;\n                                                          }}\n                                                default: switch (_p18._4._0.ctor)\n                                                  {case "Red":\n                                                     if (_p18._4._3.ctor === "RBNode_elm_builtin" && _p18._4._3._0.ctor === "Red")\n                                                       {\n                                                             break _v31_2;\n                                                          } else {\n                                                             if (_p18._4._4.ctor === "RBNode_elm_builtin" && _p18._4._4._0.ctor === "Red")\n                                                             {\n                                                                   break _v31_3;\n                                                                } else {\n                                                                   break _v31_6;\n                                                                }\n                                                          }\n                                                     case "NBlack":\n                                                     if (_p18._0.ctor === "BBlack" && _p18._4._3.ctor === "RBNode_elm_builtin" && _p18._4._3._0.ctor === "Black" && _p18._4._4.ctor === "RBNode_elm_builtin" && _p18._4._4._0.ctor === "Black")\n                                                       {\n                                                             break _v31_4;\n                                                          } else {\n                                                             break _v31_6;\n                                                          }\n                                                     default: break _v31_6;}}\n                                          } else {\n                                             switch (_p18._3._0.ctor)\n                                             {case "Red":\n                                                if (_p18._3._3.ctor === "RBNode_elm_builtin" && _p18._3._3._0.ctor === "Red")\n                                                  {\n                                                        break _v31_0;\n                                                     } else {\n                                                        if (_p18._3._4.ctor === "RBNode_elm_builtin" && _p18._3._4._0.ctor === "Red")\n                                                        {\n                                                              break _v31_1;\n                                                           } else {\n                                                              break _v31_6;\n                                                           }\n                                                     }\n                                                case "NBlack":\n                                                if (_p18._0.ctor === "BBlack" && _p18._3._3.ctor === "RBNode_elm_builtin" && _p18._3._3._0.ctor === "Black" && _p18._3._4.ctor === "RBNode_elm_builtin" && _p18._3._4._0.ctor === "Black")\n                                                  {\n                                                        break _v31_5;\n                                                     } else {\n                                                        break _v31_6;\n                                                     }\n                                                default: break _v31_6;}\n                                          }\n                                    } else {\n                                       if (_p18._4.ctor === "RBNode_elm_builtin") {\n                                             switch (_p18._4._0.ctor)\n                                             {case "Red":\n                                                if (_p18._4._3.ctor === "RBNode_elm_builtin" && _p18._4._3._0.ctor === "Red")\n                                                  {\n                                                        break _v31_2;\n                                                     } else {\n                                                        if (_p18._4._4.ctor === "RBNode_elm_builtin" && _p18._4._4._0.ctor === "Red")\n                                                        {\n                                                              break _v31_3;\n                                                           } else {\n                                                              break _v31_6;\n                                                           }\n                                                     }\n                                                case "NBlack":\n                                                if (_p18._0.ctor === "BBlack" && _p18._4._3.ctor === "RBNode_elm_builtin" && _p18._4._3._0.ctor === "Black" && _p18._4._4.ctor === "RBNode_elm_builtin" && _p18._4._4._0.ctor === "Black")\n                                                  {\n                                                        break _v31_4;\n                                                     } else {\n                                                        break _v31_6;\n                                                     }\n                                                default: break _v31_6;}\n                                          } else {\n                                             break _v31_6;\n                                          }\n                                    }\n                              } else {\n                                 break _v31_6;\n                              }\n                        } while (false);\n                        return balancedTree(_p18._0)(_p18._3._3._1)(_p18._3._3._2)(_p18._3._1)(_p18._3._2)(_p18._1)(_p18._2)(_p18._3._3._3)(_p18._3._3._4)(_p18._3._4)(_p18._4);\n                     } while (false);\n                     return balancedTree(_p18._0)(_p18._3._1)(_p18._3._2)(_p18._3._4._1)(_p18._3._4._2)(_p18._1)(_p18._2)(_p18._3._3)(_p18._3._4._3)(_p18._3._4._4)(_p18._4);\n                  } while (false);\n                  return balancedTree(_p18._0)(_p18._1)(_p18._2)(_p18._4._3._1)(_p18._4._3._2)(_p18._4._1)(_p18._4._2)(_p18._3)(_p18._4._3._3)(_p18._4._3._4)(_p18._4._4);\n               } while (false);\n               return balancedTree(_p18._0)(_p18._1)(_p18._2)(_p18._4._1)(_p18._4._2)(_p18._4._4._1)(_p18._4._4._2)(_p18._3)(_p18._4._3)(_p18._4._4._3)(_p18._4._4._4);\n            } while (false);\n            return A5(RBNode_elm_builtin,\n            Black,\n            _p18._4._3._1,\n            _p18._4._3._2,\n            A5(RBNode_elm_builtin,\n            Black,\n            _p18._1,\n            _p18._2,\n            _p18._3,\n            _p18._4._3._3),\n            A5(balance,\n            Black,\n            _p18._4._1,\n            _p18._4._2,\n            _p18._4._3._4,\n            redden(_p18._4._4)));\n         } while (false);\n         return A5(RBNode_elm_builtin,\n         Black,\n         _p18._3._4._1,\n         _p18._3._4._2,\n         A5(balance,\n         Black,\n         _p18._3._1,\n         _p18._3._2,\n         redden(_p18._3._3),\n         _p18._3._4._3),\n         A5(RBNode_elm_builtin,\n         Black,\n         _p18._1,\n         _p18._2,\n         _p18._3._4._4,\n         _p18._4));\n      } while (false);\n      return tree;\n   };\n   var balance = F5(function (c,k,v,l,r) {\n      var tree = A5(RBNode_elm_builtin,c,k,v,l,r);\n      return blackish(tree) ? balanceHelp(tree) : tree;\n   });\n   var bubble = F5(function (c,k,v,l,r) {\n      return isBBlack(l) || isBBlack(r) ? A5(balance,\n      moreBlack(c),\n      k,\n      v,\n      lessBlackTree(l),\n      lessBlackTree(r)) : A5(RBNode_elm_builtin,c,k,v,l,r);\n   });\n   var removeMax = F5(function (c,k,v,l,r) {\n      var _p19 = r;\n      if (_p19.ctor === "RBEmpty_elm_builtin") {\n            return A3(rem,c,l,r);\n         } else {\n            return A5(bubble,\n            c,\n            k,\n            v,\n            l,\n            A5(removeMax,_p19._0,_p19._1,_p19._2,_p19._3,_p19._4));\n         }\n   });\n   var rem = F3(function (c,l,r) {\n      var _p20 = {ctor: "_Tuple2",_0: l,_1: r};\n      if (_p20._0.ctor === "RBEmpty_elm_builtin") {\n            if (_p20._1.ctor === "RBEmpty_elm_builtin") {\n                  var _p21 = c;\n                  switch (_p21.ctor)\n                  {case "Red": return RBEmpty_elm_builtin(LBlack);\n                     case "Black": return RBEmpty_elm_builtin(LBBlack);\n                     default:\n                     return $Native$Debug.crash("cannot have bblack or nblack nodes at this point");}\n               } else {\n                  var _p24 = _p20._1._0;\n                  var _p23 = _p20._0._0;\n                  var _p22 = {ctor: "_Tuple3",_0: c,_1: _p23,_2: _p24};\n                  if (_p22.ctor === "_Tuple3" && _p22._0.ctor === "Black" && _p22._1.ctor === "LBlack" && _p22._2.ctor === "Red")\n                  {\n                        return A5(RBNode_elm_builtin,\n                        Black,\n                        _p20._1._1,\n                        _p20._1._2,\n                        _p20._1._3,\n                        _p20._1._4);\n                     } else {\n                        return A4(reportRemBug,\n                        "Black/LBlack/Red",\n                        c,\n                        $Basics.toString(_p23),\n                        $Basics.toString(_p24));\n                     }\n               }\n         } else {\n            if (_p20._1.ctor === "RBEmpty_elm_builtin") {\n                  var _p27 = _p20._1._0;\n                  var _p26 = _p20._0._0;\n                  var _p25 = {ctor: "_Tuple3",_0: c,_1: _p26,_2: _p27};\n                  if (_p25.ctor === "_Tuple3" && _p25._0.ctor === "Black" && _p25._1.ctor === "Red" && _p25._2.ctor === "LBlack")\n                  {\n                        return A5(RBNode_elm_builtin,\n                        Black,\n                        _p20._0._1,\n                        _p20._0._2,\n                        _p20._0._3,\n                        _p20._0._4);\n                     } else {\n                        return A4(reportRemBug,\n                        "Black/Red/LBlack",\n                        c,\n                        $Basics.toString(_p26),\n                        $Basics.toString(_p27));\n                     }\n               } else {\n                  var _p31 = _p20._0._2;\n                  var _p30 = _p20._0._4;\n                  var _p29 = _p20._0._1;\n                  var l$ = A5(removeMax,_p20._0._0,_p29,_p31,_p20._0._3,_p30);\n                  var _p28 = A3(maxWithDefault,_p29,_p31,_p30);\n                  var k = _p28._0;\n                  var v = _p28._1;\n                  return A5(bubble,c,k,v,l$,r);\n               }\n         }\n   });\n   var update = F3(function (k,alter,dict) {\n      var up = function (dict) {\n         var _p32 = dict;\n         if (_p32.ctor === "RBEmpty_elm_builtin") {\n               var _p33 = alter($Maybe.Nothing);\n               if (_p33.ctor === "Nothing") {\n                     return {ctor: "_Tuple2",_0: Same,_1: empty};\n                  } else {\n                     return {ctor: "_Tuple2"\n                            ,_0: Insert\n                            ,_1: A5(RBNode_elm_builtin,Red,k,_p33._0,empty,empty)};\n                  }\n            } else {\n               var _p44 = _p32._2;\n               var _p43 = _p32._4;\n               var _p42 = _p32._3;\n               var _p41 = _p32._1;\n               var _p40 = _p32._0;\n               var _p34 = A2($Basics.compare,k,_p41);\n               switch (_p34.ctor)\n               {case "EQ": var _p35 = alter($Maybe.Just(_p44));\n                    if (_p35.ctor === "Nothing") {\n                          return {ctor: "_Tuple2"\n                                 ,_0: Remove\n                                 ,_1: A3(rem,_p40,_p42,_p43)};\n                       } else {\n                          return {ctor: "_Tuple2"\n                                 ,_0: Same\n                                 ,_1: A5(RBNode_elm_builtin,_p40,_p41,_p35._0,_p42,_p43)};\n                       }\n                  case "LT": var _p36 = up(_p42);\n                    var flag = _p36._0;\n                    var newLeft = _p36._1;\n                    var _p37 = flag;\n                    switch (_p37.ctor)\n                    {case "Same": return {ctor: "_Tuple2"\n                                         ,_0: Same\n                                         ,_1: A5(RBNode_elm_builtin,_p40,_p41,_p44,newLeft,_p43)};\n                       case "Insert": return {ctor: "_Tuple2"\n                                             ,_0: Insert\n                                             ,_1: A5(balance,_p40,_p41,_p44,newLeft,_p43)};\n                       default: return {ctor: "_Tuple2"\n                                       ,_0: Remove\n                                       ,_1: A5(bubble,_p40,_p41,_p44,newLeft,_p43)};}\n                  default: var _p38 = up(_p43);\n                    var flag = _p38._0;\n                    var newRight = _p38._1;\n                    var _p39 = flag;\n                    switch (_p39.ctor)\n                    {case "Same": return {ctor: "_Tuple2"\n                                         ,_0: Same\n                                         ,_1: A5(RBNode_elm_builtin,_p40,_p41,_p44,_p42,newRight)};\n                       case "Insert": return {ctor: "_Tuple2"\n                                             ,_0: Insert\n                                             ,_1: A5(balance,_p40,_p41,_p44,_p42,newRight)};\n                       default: return {ctor: "_Tuple2"\n                                       ,_0: Remove\n                                       ,_1: A5(bubble,_p40,_p41,_p44,_p42,newRight)};}}\n            }\n      };\n      var _p45 = up(dict);\n      var flag = _p45._0;\n      var updatedDict = _p45._1;\n      var _p46 = flag;\n      switch (_p46.ctor)\n      {case "Same": return updatedDict;\n         case "Insert": return ensureBlackRoot(updatedDict);\n         default: return blacken(updatedDict);}\n   });\n   var insert = F3(function (key,value,dict) {\n      return A3(update,\n      key,\n      $Basics.always($Maybe.Just(value)),\n      dict);\n   });\n   var singleton = F2(function (key,value) {\n      return A3(insert,key,value,empty);\n   });\n   var union = F2(function (t1,t2) {\n      return A3(foldl,insert,t2,t1);\n   });\n   var fromList = function (assocs) {\n      return A3($List.foldl,\n      F2(function (_p47,dict) {\n         var _p48 = _p47;\n         return A3(insert,_p48._0,_p48._1,dict);\n      }),\n      empty,\n      assocs);\n   };\n   var filter = F2(function (predicate,dictionary) {\n      var add = F3(function (key,value,dict) {\n         return A2(predicate,key,value) ? A3(insert,\n         key,\n         value,\n         dict) : dict;\n      });\n      return A3(foldl,add,empty,dictionary);\n   });\n   var intersect = F2(function (t1,t2) {\n      return A2(filter,\n      F2(function (k,_p49) {    return A2(member,k,t2);}),\n      t1);\n   });\n   var partition = F2(function (predicate,dict) {\n      var add = F3(function (key,value,_p50) {\n         var _p51 = _p50;\n         var _p53 = _p51._1;\n         var _p52 = _p51._0;\n         return A2(predicate,key,value) ? {ctor: "_Tuple2"\n                                          ,_0: A3(insert,key,value,_p52)\n                                          ,_1: _p53} : {ctor: "_Tuple2"\n                                                       ,_0: _p52\n                                                       ,_1: A3(insert,key,value,_p53)};\n      });\n      return A3(foldl,add,{ctor: "_Tuple2",_0: empty,_1: empty},dict);\n   });\n   var remove = F2(function (key,dict) {\n      return A3(update,key,$Basics.always($Maybe.Nothing),dict);\n   });\n   var diff = F2(function (t1,t2) {\n      return A3(foldl,\n      F3(function (k,v,t) {    return A2(remove,k,t);}),\n      t1,\n      t2);\n   });\n   return _elm.Dict.values = {_op: _op\n                             ,empty: empty\n                             ,singleton: singleton\n                             ,insert: insert\n                             ,update: update\n                             ,isEmpty: isEmpty\n                             ,get: get\n                             ,remove: remove\n                             ,member: member\n                             ,size: size\n                             ,filter: filter\n                             ,partition: partition\n                             ,foldl: foldl\n                             ,foldr: foldr\n                             ,map: map\n                             ,union: union\n                             ,intersect: intersect\n                             ,diff: diff\n                             ,keys: keys\n                             ,values: values\n                             ,toList: toList\n                             ,fromList: fromList};\n};\nElm.Native.Json = {};\n\nElm.Native.Json.make = function(localRuntime) {\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.Json = localRuntime.Native.Json || {};\n	if (localRuntime.Native.Json.values) {\n		return localRuntime.Native.Json.values;\n	}\n\n	var ElmArray = Elm.Native.Array.make(localRuntime);\n	var List = Elm.Native.List.make(localRuntime);\n	var Maybe = Elm.Maybe.make(localRuntime);\n	var Result = Elm.Result.make(localRuntime);\n	var Utils = Elm.Native.Utils.make(localRuntime);\n\n\n	function crash(expected, actual) {\n		throw new Error(\n			\'expecting \' + expected + \' but got \' + JSON.stringify(actual)\n		);\n	}\n\n\n	// PRIMITIVE VALUES\n\n	function decodeNull(successValue) {\n		return function(value) {\n			if (value === null) {\n				return successValue;\n			}\n			crash(\'null\', value);\n		};\n	}\n\n\n	function decodeString(value) {\n		if (typeof value === \'string\' || value instanceof String) {\n			return value;\n		}\n		crash(\'a String\', value);\n	}\n\n\n	function decodeFloat(value) {\n		if (typeof value === \'number\') {\n			return value;\n		}\n		crash(\'a Float\', value);\n	}\n\n\n	function decodeInt(value) {\n		if (typeof value !== \'number\') {\n			crash(\'an Int\', value);\n		}\n\n		if (value < 2147483647 && value > -2147483647 && (value | 0) === value) {\n			return value;\n		}\n\n		if (isFinite(value) && !(value % 1)) {\n			return value;\n		}\n\n		crash(\'an Int\', value);\n	}\n\n\n	function decodeBool(value) {\n		if (typeof value === \'boolean\') {\n			return value;\n		}\n		crash(\'a Bool\', value);\n	}\n\n\n	// ARRAY\n\n	function decodeArray(decoder) {\n		return function(value) {\n			if (value instanceof Array) {\n				var len = value.length;\n				var array = new Array(len);\n				for (var i = len; i--; ) {\n					array[i] = decoder(value[i]);\n				}\n				return ElmArray.fromJSArray(array);\n			}\n			crash(\'an Array\', value);\n		};\n	}\n\n\n	// LIST\n\n	function decodeList(decoder) {\n		return function(value) {\n			if (value instanceof Array) {\n				var len = value.length;\n				var list = List.Nil;\n				for (var i = len; i--; ) {\n					list = List.Cons( decoder(value[i]), list );\n				}\n				return list;\n			}\n			crash(\'a List\', value);\n		};\n	}\n\n\n	// MAYBE\n\n	function decodeMaybe(decoder) {\n		return function(value) {\n			try {\n				return Maybe.Just(decoder(value));\n			} catch(e) {\n				return Maybe.Nothing;\n			}\n		};\n	}\n\n\n	// FIELDS\n\n	function decodeField(field, decoder) {\n		return function(value) {\n			var subValue = value[field];\n			if (subValue !== undefined) {\n				return decoder(subValue);\n			}\n			crash("an object with field \'" + field + "\'", value);\n		};\n	}\n\n\n	// OBJECTS\n\n	function decodeKeyValuePairs(decoder) {\n		return function(value) {\n			var isObject =\n				typeof value === \'object\'\n					&& value !== null\n					&& !(value instanceof Array);\n\n			if (isObject) {\n				var keyValuePairs = List.Nil;\n				for (var key in value)\n				{\n					var elmValue = decoder(value[key]);\n					var pair = Utils.Tuple2(key, elmValue);\n					keyValuePairs = List.Cons(pair, keyValuePairs);\n				}\n				return keyValuePairs;\n			}\n\n			crash(\'an object\', value);\n		};\n	}\n\n	function decodeObject1(f, d1) {\n		return function(value) {\n			return f(d1(value));\n		};\n	}\n\n	function decodeObject2(f, d1, d2) {\n		return function(value) {\n			return A2( f, d1(value), d2(value) );\n		};\n	}\n\n	function decodeObject3(f, d1, d2, d3) {\n		return function(value) {\n			return A3( f, d1(value), d2(value), d3(value) );\n		};\n	}\n\n	function decodeObject4(f, d1, d2, d3, d4) {\n		return function(value) {\n			return A4( f, d1(value), d2(value), d3(value), d4(value) );\n		};\n	}\n\n	function decodeObject5(f, d1, d2, d3, d4, d5) {\n		return function(value) {\n			return A5( f, d1(value), d2(value), d3(value), d4(value), d5(value) );\n		};\n	}\n\n	function decodeObject6(f, d1, d2, d3, d4, d5, d6) {\n		return function(value) {\n			return A6( f,\n				d1(value),\n				d2(value),\n				d3(value),\n				d4(value),\n				d5(value),\n				d6(value)\n			);\n		};\n	}\n\n	function decodeObject7(f, d1, d2, d3, d4, d5, d6, d7) {\n		return function(value) {\n			return A7( f,\n				d1(value),\n				d2(value),\n				d3(value),\n				d4(value),\n				d5(value),\n				d6(value),\n				d7(value)\n			);\n		};\n	}\n\n	function decodeObject8(f, d1, d2, d3, d4, d5, d6, d7, d8) {\n		return function(value) {\n			return A8( f,\n				d1(value),\n				d2(value),\n				d3(value),\n				d4(value),\n				d5(value),\n				d6(value),\n				d7(value),\n				d8(value)\n			);\n		};\n	}\n\n\n	// TUPLES\n\n	function decodeTuple1(f, d1) {\n		return function(value) {\n			if ( !(value instanceof Array) || value.length !== 1 ) {\n				crash(\'a Tuple of length 1\', value);\n			}\n			return f( d1(value[0]) );\n		};\n	}\n\n	function decodeTuple2(f, d1, d2) {\n		return function(value) {\n			if ( !(value instanceof Array) || value.length !== 2 ) {\n				crash(\'a Tuple of length 2\', value);\n			}\n			return A2( f, d1(value[0]), d2(value[1]) );\n		};\n	}\n\n	function decodeTuple3(f, d1, d2, d3) {\n		return function(value) {\n			if ( !(value instanceof Array) || value.length !== 3 ) {\n				crash(\'a Tuple of length 3\', value);\n			}\n			return A3( f, d1(value[0]), d2(value[1]), d3(value[2]) );\n		};\n	}\n\n\n	function decodeTuple4(f, d1, d2, d3, d4) {\n		return function(value) {\n			if ( !(value instanceof Array) || value.length !== 4 ) {\n				crash(\'a Tuple of length 4\', value);\n			}\n			return A4( f, d1(value[0]), d2(value[1]), d3(value[2]), d4(value[3]) );\n		};\n	}\n\n\n	function decodeTuple5(f, d1, d2, d3, d4, d5) {\n		return function(value) {\n			if ( !(value instanceof Array) || value.length !== 5 ) {\n				crash(\'a Tuple of length 5\', value);\n			}\n			return A5( f,\n				d1(value[0]),\n				d2(value[1]),\n				d3(value[2]),\n				d4(value[3]),\n				d5(value[4])\n			);\n		};\n	}\n\n\n	function decodeTuple6(f, d1, d2, d3, d4, d5, d6) {\n		return function(value) {\n			if ( !(value instanceof Array) || value.length !== 6 ) {\n				crash(\'a Tuple of length 6\', value);\n			}\n			return A6( f,\n				d1(value[0]),\n				d2(value[1]),\n				d3(value[2]),\n				d4(value[3]),\n				d5(value[4]),\n				d6(value[5])\n			);\n		};\n	}\n\n	function decodeTuple7(f, d1, d2, d3, d4, d5, d6, d7) {\n		return function(value) {\n			if ( !(value instanceof Array) || value.length !== 7 ) {\n				crash(\'a Tuple of length 7\', value);\n			}\n			return A7( f,\n				d1(value[0]),\n				d2(value[1]),\n				d3(value[2]),\n				d4(value[3]),\n				d5(value[4]),\n				d6(value[5]),\n				d7(value[6])\n			);\n		};\n	}\n\n\n	function decodeTuple8(f, d1, d2, d3, d4, d5, d6, d7, d8) {\n		return function(value) {\n			if ( !(value instanceof Array) || value.length !== 8 ) {\n				crash(\'a Tuple of length 8\', value);\n			}\n			return A8( f,\n				d1(value[0]),\n				d2(value[1]),\n				d3(value[2]),\n				d4(value[3]),\n				d5(value[4]),\n				d6(value[5]),\n				d7(value[6]),\n				d8(value[7])\n			);\n		};\n	}\n\n\n	// CUSTOM DECODERS\n\n	function decodeValue(value) {\n		return value;\n	}\n\n	function runDecoderValue(decoder, value) {\n		try {\n			return Result.Ok(decoder(value));\n		} catch(e) {\n			return Result.Err(e.message);\n		}\n	}\n\n	function customDecoder(decoder, callback) {\n		return function(value) {\n			var result = callback(decoder(value));\n			if (result.ctor === \'Err\') {\n				throw new Error(\'custom decoder failed: \' + result._0);\n			}\n			return result._0;\n		};\n	}\n\n	function andThen(decode, callback) {\n		return function(value) {\n			var result = decode(value);\n			return callback(result)(value);\n		};\n	}\n\n	function fail(msg) {\n		return function(value) {\n			throw new Error(msg);\n		};\n	}\n\n	function succeed(successValue) {\n		return function(value) {\n			return successValue;\n		};\n	}\n\n\n	// ONE OF MANY\n\n	function oneOf(decoders) {\n		return function(value) {\n			var errors = [];\n			var temp = decoders;\n			while (temp.ctor !== \'[]\') {\n				try {\n					return temp._0(value);\n				} catch(e) {\n					errors.push(e.message);\n				}\n				temp = temp._1;\n			}\n			throw new Error(\'expecting one of the following:\\n    \' + errors.join(\'\\n    \'));\n		};\n	}\n\n	function get(decoder, value) {\n		try {\n			return Result.Ok(decoder(value));\n		} catch(e) {\n			return Result.Err(e.message);\n		}\n	}\n\n\n	// ENCODE / DECODE\n\n	function runDecoderString(decoder, string) {\n		try {\n			return Result.Ok(decoder(JSON.parse(string)));\n		} catch(e) {\n			return Result.Err(e.message);\n		}\n	}\n\n	function encode(indentLevel, value) {\n		return JSON.stringify(value, null, indentLevel);\n	}\n\n	function identity(value) {\n		return value;\n	}\n\n	function encodeObject(keyValuePairs) {\n		var obj = {};\n		while (keyValuePairs.ctor !== \'[]\') {\n			var pair = keyValuePairs._0;\n			obj[pair._0] = pair._1;\n			keyValuePairs = keyValuePairs._1;\n		}\n		return obj;\n	}\n\n	return localRuntime.Native.Json.values = {\n		encode: F2(encode),\n		runDecoderString: F2(runDecoderString),\n		runDecoderValue: F2(runDecoderValue),\n\n		get: F2(get),\n		oneOf: oneOf,\n\n		decodeNull: decodeNull,\n		decodeInt: decodeInt,\n		decodeFloat: decodeFloat,\n		decodeString: decodeString,\n		decodeBool: decodeBool,\n\n		decodeMaybe: decodeMaybe,\n\n		decodeList: decodeList,\n		decodeArray: decodeArray,\n\n		decodeField: F2(decodeField),\n\n		decodeObject1: F2(decodeObject1),\n		decodeObject2: F3(decodeObject2),\n		decodeObject3: F4(decodeObject3),\n		decodeObject4: F5(decodeObject4),\n		decodeObject5: F6(decodeObject5),\n		decodeObject6: F7(decodeObject6),\n		decodeObject7: F8(decodeObject7),\n		decodeObject8: F9(decodeObject8),\n		decodeKeyValuePairs: decodeKeyValuePairs,\n\n		decodeTuple1: F2(decodeTuple1),\n		decodeTuple2: F3(decodeTuple2),\n		decodeTuple3: F4(decodeTuple3),\n		decodeTuple4: F5(decodeTuple4),\n		decodeTuple5: F6(decodeTuple5),\n		decodeTuple6: F7(decodeTuple6),\n		decodeTuple7: F8(decodeTuple7),\n		decodeTuple8: F9(decodeTuple8),\n\n		andThen: F2(andThen),\n		decodeValue: decodeValue,\n		customDecoder: F2(customDecoder),\n		fail: fail,\n		succeed: succeed,\n\n		identity: identity,\n		encodeNull: null,\n		encodeArray: ElmArray.toJSArray,\n		encodeList: List.toArray,\n		encodeObject: encodeObject\n\n	};\n};\n\nElm.Json = Elm.Json || {};\nElm.Json.Encode = Elm.Json.Encode || {};\nElm.Json.Encode.make = function (_elm) {\n   "use strict";\n   _elm.Json = _elm.Json || {};\n   _elm.Json.Encode = _elm.Json.Encode || {};\n   if (_elm.Json.Encode.values) return _elm.Json.Encode.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Array = Elm.Array.make(_elm),\n   $Native$Json = Elm.Native.Json.make(_elm);\n   var _op = {};\n   var list = $Native$Json.encodeList;\n   var array = $Native$Json.encodeArray;\n   var object = $Native$Json.encodeObject;\n   var $null = $Native$Json.encodeNull;\n   var bool = $Native$Json.identity;\n   var $float = $Native$Json.identity;\n   var $int = $Native$Json.identity;\n   var string = $Native$Json.identity;\n   var encode = $Native$Json.encode;\n   var Value = {ctor: "Value"};\n   return _elm.Json.Encode.values = {_op: _op\n                                    ,encode: encode\n                                    ,string: string\n                                    ,$int: $int\n                                    ,$float: $float\n                                    ,bool: bool\n                                    ,$null: $null\n                                    ,list: list\n                                    ,array: array\n                                    ,object: object};\n};\nElm.Json = Elm.Json || {};\nElm.Json.Decode = Elm.Json.Decode || {};\nElm.Json.Decode.make = function (_elm) {\n   "use strict";\n   _elm.Json = _elm.Json || {};\n   _elm.Json.Decode = _elm.Json.Decode || {};\n   if (_elm.Json.Decode.values) return _elm.Json.Decode.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Array = Elm.Array.make(_elm),\n   $Dict = Elm.Dict.make(_elm),\n   $Json$Encode = Elm.Json.Encode.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Json = Elm.Native.Json.make(_elm),\n   $Result = Elm.Result.make(_elm);\n   var _op = {};\n   var tuple8 = $Native$Json.decodeTuple8;\n   var tuple7 = $Native$Json.decodeTuple7;\n   var tuple6 = $Native$Json.decodeTuple6;\n   var tuple5 = $Native$Json.decodeTuple5;\n   var tuple4 = $Native$Json.decodeTuple4;\n   var tuple3 = $Native$Json.decodeTuple3;\n   var tuple2 = $Native$Json.decodeTuple2;\n   var tuple1 = $Native$Json.decodeTuple1;\n   var succeed = $Native$Json.succeed;\n   var fail = $Native$Json.fail;\n   var andThen = $Native$Json.andThen;\n   var customDecoder = $Native$Json.customDecoder;\n   var decodeValue = $Native$Json.runDecoderValue;\n   var value = $Native$Json.decodeValue;\n   var maybe = $Native$Json.decodeMaybe;\n   var $null = $Native$Json.decodeNull;\n   var array = $Native$Json.decodeArray;\n   var list = $Native$Json.decodeList;\n   var bool = $Native$Json.decodeBool;\n   var $int = $Native$Json.decodeInt;\n   var $float = $Native$Json.decodeFloat;\n   var string = $Native$Json.decodeString;\n   var oneOf = $Native$Json.oneOf;\n   var keyValuePairs = $Native$Json.decodeKeyValuePairs;\n   var object8 = $Native$Json.decodeObject8;\n   var object7 = $Native$Json.decodeObject7;\n   var object6 = $Native$Json.decodeObject6;\n   var object5 = $Native$Json.decodeObject5;\n   var object4 = $Native$Json.decodeObject4;\n   var object3 = $Native$Json.decodeObject3;\n   var object2 = $Native$Json.decodeObject2;\n   var object1 = $Native$Json.decodeObject1;\n   _op[":="] = $Native$Json.decodeField;\n   var at = F2(function (fields,decoder) {\n      return A3($List.foldr,\n      F2(function (x,y) {    return A2(_op[":="],x,y);}),\n      decoder,\n      fields);\n   });\n   var decodeString = $Native$Json.runDecoderString;\n   var map = $Native$Json.decodeObject1;\n   var dict = function (decoder) {\n      return A2(map,$Dict.fromList,keyValuePairs(decoder));\n   };\n   var Decoder = {ctor: "Decoder"};\n   return _elm.Json.Decode.values = {_op: _op\n                                    ,decodeString: decodeString\n                                    ,decodeValue: decodeValue\n                                    ,string: string\n                                    ,$int: $int\n                                    ,$float: $float\n                                    ,bool: bool\n                                    ,$null: $null\n                                    ,list: list\n                                    ,array: array\n                                    ,tuple1: tuple1\n                                    ,tuple2: tuple2\n                                    ,tuple3: tuple3\n                                    ,tuple4: tuple4\n                                    ,tuple5: tuple5\n                                    ,tuple6: tuple6\n                                    ,tuple7: tuple7\n                                    ,tuple8: tuple8\n                                    ,at: at\n                                    ,object1: object1\n                                    ,object2: object2\n                                    ,object3: object3\n                                    ,object4: object4\n                                    ,object5: object5\n                                    ,object6: object6\n                                    ,object7: object7\n                                    ,object8: object8\n                                    ,keyValuePairs: keyValuePairs\n                                    ,dict: dict\n                                    ,maybe: maybe\n                                    ,oneOf: oneOf\n                                    ,map: map\n                                    ,fail: fail\n                                    ,succeed: succeed\n                                    ,andThen: andThen\n                                    ,value: value\n                                    ,customDecoder: customDecoder};\n};\nElm.Native.Effects = {};\nElm.Native.Effects.make = function(localRuntime) {\n\n	localRuntime.Native = localRuntime.Native || {};\n	localRuntime.Native.Effects = localRuntime.Native.Effects || {};\n	if (localRuntime.Native.Effects.values)\n	{\n		return localRuntime.Native.Effects.values;\n	}\n\n	var Task = Elm.Native.Task.make(localRuntime);\n	var Utils = Elm.Native.Utils.make(localRuntime);\n	var Signal = Elm.Signal.make(localRuntime);\n	var List = Elm.Native.List.make(localRuntime);\n\n\n	// polyfill so things will work even if rAF is not available for some reason\n	var _requestAnimationFrame =\n		typeof requestAnimationFrame !== \'undefined\'\n			? requestAnimationFrame\n			: function(cb) { setTimeout(cb, 1000 / 60); }\n			;\n\n\n	// batchedSending and sendCallback implement a small state machine in order\n	// to schedule only one send(time) call per animation frame.\n	//\n	// Invariants:\n	// 1. In the NO_REQUEST state, there is never a scheduled sendCallback.\n	// 2. In the PENDING_REQUEST and EXTRA_REQUEST states, there is always exactly\n	//    one scheduled sendCallback.\n	var NO_REQUEST = 0;\n	var PENDING_REQUEST = 1;\n	var EXTRA_REQUEST = 2;\n	var state = NO_REQUEST;\n	var messageArray = [];\n\n\n	function batchedSending(address, tickMessages)\n	{\n		// insert ticks into the messageArray\n		var foundAddress = false;\n\n		for (var i = messageArray.length; i--; )\n		{\n			if (messageArray[i].address === address)\n			{\n				foundAddress = true;\n				messageArray[i].tickMessages = A3(List.foldl, List.cons, messageArray[i].tickMessages, tickMessages);\n				break;\n			}\n		}\n\n		if (!foundAddress)\n		{\n			messageArray.push({ address: address, tickMessages: tickMessages });\n		}\n\n		// do the appropriate state transition\n		switch (state)\n		{\n			case NO_REQUEST:\n				_requestAnimationFrame(sendCallback);\n				state = PENDING_REQUEST;\n				break;\n			case PENDING_REQUEST:\n				state = PENDING_REQUEST;\n				break;\n			case EXTRA_REQUEST:\n				state = PENDING_REQUEST;\n				break;\n		}\n	}\n\n\n	function sendCallback(time)\n	{\n		switch (state)\n		{\n			case NO_REQUEST:\n				// This state should not be possible. How can there be no\n				// request, yet somehow we are actively fulfilling a\n				// request?\n				throw new Error(\n					\'Unexpected send callback.\\n\' +\n					\'Please report this to <https://github.com/evancz/elm-effects/issues>.\'\n				);\n\n			case PENDING_REQUEST:\n				// At this point, we do not *know* that another frame is\n				// needed, but we make an extra request to rAF just in\n				// case. It\'s possible to drop a frame if rAF is called\n				// too late, so we just do it preemptively.\n				_requestAnimationFrame(sendCallback);\n				state = EXTRA_REQUEST;\n\n				// There\'s also stuff we definitely need to send.\n				send(time);\n				return;\n\n			case EXTRA_REQUEST:\n				// Turns out the extra request was not needed, so we will\n				// stop calling rAF. No reason to call it all the time if\n				// no one needs it.\n				state = NO_REQUEST;\n				return;\n		}\n	}\n\n\n	function send(time)\n	{\n		for (var i = messageArray.length; i--; )\n		{\n			var messages = A3(\n				List.foldl,\n				F2( function(toAction, list) { return List.Cons(toAction(time), list); } ),\n				List.Nil,\n				messageArray[i].tickMessages\n			);\n			Task.perform( A2(Signal.send, messageArray[i].address, messages) );\n		}\n		messageArray = [];\n	}\n\n\n	function requestTickSending(address, tickMessages)\n	{\n		return Task.asyncFunction(function(callback) {\n			batchedSending(address, tickMessages);\n			callback(Task.succeed(Utils.Tuple0));\n		});\n	}\n\n\n	return localRuntime.Native.Effects.values = {\n		requestTickSending: F2(requestTickSending)\n	};\n\n};\n\nElm.Effects = Elm.Effects || {};\nElm.Effects.make = function (_elm) {\n   "use strict";\n   _elm.Effects = _elm.Effects || {};\n   if (_elm.Effects.values) return _elm.Effects.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Effects = Elm.Native.Effects.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $Task = Elm.Task.make(_elm),\n   $Time = Elm.Time.make(_elm);\n   var _op = {};\n   var ignore = function (task) {\n      return A2($Task.map,$Basics.always({ctor: "_Tuple0"}),task);\n   };\n   var requestTickSending = $Native$Effects.requestTickSending;\n   var toTaskHelp = F3(function (address,effect,_p0) {\n      var _p1 = _p0;\n      var _p5 = _p1._1;\n      var _p4 = _p1;\n      var _p3 = _p1._0;\n      var _p2 = effect;\n      switch (_p2.ctor)\n      {case "Task": var reporter = A2($Task.andThen,\n           _p2._0,\n           function (answer) {\n              return A2($Signal.send,address,_U.list([answer]));\n           });\n           return {ctor: "_Tuple2"\n                  ,_0: A2($Task.andThen,\n                  _p3,\n                  $Basics.always(ignore($Task.spawn(reporter))))\n                  ,_1: _p5};\n         case "Tick": return {ctor: "_Tuple2"\n                             ,_0: _p3\n                             ,_1: A2($List._op["::"],_p2._0,_p5)};\n         case "None": return _p4;\n         default: return A3($List.foldl,toTaskHelp(address),_p4,_p2._0);}\n   });\n   var toTask = F2(function (address,effect) {\n      var _p6 = A3(toTaskHelp,\n      address,\n      effect,\n      {ctor: "_Tuple2"\n      ,_0: $Task.succeed({ctor: "_Tuple0"})\n      ,_1: _U.list([])});\n      var combinedTask = _p6._0;\n      var tickMessages = _p6._1;\n      return $List.isEmpty(tickMessages) ? combinedTask : A2($Task.andThen,\n      combinedTask,\n      $Basics.always(A2(requestTickSending,address,tickMessages)));\n   });\n   var Never = function (a) {    return {ctor: "Never",_0: a};};\n   var Batch = function (a) {    return {ctor: "Batch",_0: a};};\n   var batch = Batch;\n   var None = {ctor: "None"};\n   var none = None;\n   var Tick = function (a) {    return {ctor: "Tick",_0: a};};\n   var tick = Tick;\n   var Task = function (a) {    return {ctor: "Task",_0: a};};\n   var task = Task;\n   var map = F2(function (func,effect) {\n      var _p7 = effect;\n      switch (_p7.ctor)\n      {case "Task": return Task(A2($Task.map,func,_p7._0));\n         case "Tick": return Tick(function (_p8) {\n              return func(_p7._0(_p8));\n           });\n         case "None": return None;\n         default: return Batch(A2($List.map,map(func),_p7._0));}\n   });\n   return _elm.Effects.values = {_op: _op\n                                ,none: none\n                                ,task: task\n                                ,tick: tick\n                                ,map: map\n                                ,batch: batch\n                                ,toTask: toTask};\n};\nElm.Animation = Elm.Animation || {};\nElm.Animation.make = function (_elm) {\n   "use strict";\n   _elm.Animation = _elm.Animation || {};\n   if (_elm.Animation.values) return _elm.Animation.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $Time = Elm.Time.make(_elm);\n   var _op = {};\n   var isScheduled = F2(function (t,_p0) {\n      var _p1 = _p0;\n      return _U.cmp(t,_p1._0.start + _p1._0.delay) < 1;\n   });\n   var getTo = function (_p2) {\n      var _p3 = _p2;\n      return _p3._0.to;\n   };\n   var getFrom = function (_p4) {\n      var _p5 = _p4;\n      return _p5._0.from;\n   };\n   var getEase = function (_p6) {\n      var _p7 = _p6;\n      return _p7._0.ease;\n   };\n   var getDelay = function (_p8) {\n      var _p9 = _p8;\n      return _p9._0.delay;\n   };\n   var getStart = function (_p10) {\n      var _p11 = _p10;\n      return _p11._0.start;\n   };\n   var timeElapsed = F2(function (t,_p12) {\n      var _p13 = _p12;\n      return A2($Basics.max,0,t - (_p13._0.start + _p13._0.delay));\n   });\n   var defaultEase = function (x) {\n      return (1 - $Basics.cos($Basics.pi * x)) / 2;\n   };\n   var spd = F3(function (dos,from,to) {\n      var _p14 = dos;\n      if (_p14.ctor === "Duration") {\n            return $Basics.abs(to - from) / _p14._0;\n         } else {\n            return _p14._0;\n         }\n   });\n   var getSpeed = function (_p15) {\n      var _p16 = _p15;\n      return A3(spd,_p16._0.dos,_p16._0.from,_p16._0.to);\n   };\n   var dur = F3(function (dos,from,to) {\n      var _p17 = dos;\n      if (_p17.ctor === "Duration") {\n            return _p17._0;\n         } else {\n            return $Basics.abs(to - from) / _p17._0;\n         }\n   });\n   var animate = F2(function (t,_p18) {\n      var _p19 = _p18;\n      var _p23 = _p19._0.to;\n      var _p22 = _p19._0.start;\n      var _p21 = _p19._0.from;\n      var duration = A3(dur,_p19._0.dos,_p21,_p23);\n      var fr = A3($Basics.clamp,\n      0,\n      1,\n      (t - _p22 - _p19._0.delay) / duration);\n      var eased = _p19._0.ease(fr);\n      var correction = function () {\n         var _p20 = _p19._0.ramp;\n         if (_p20.ctor === "Nothing") {\n               return 0;\n            } else {\n               var from$ = _p20._0 * (t - _p22);\n               var eased$ = defaultEase(fr);\n               return from$ - from$ * eased$;\n            }\n      }();\n      return _p21 + (_p23 - _p21) * eased + correction;\n   });\n   var velocity = F2(function (t,u) {\n      var forwDiff = A2(animate,t + 10,u);\n      var backDiff = A2(animate,t - 10,u);\n      return (forwDiff - backDiff) / 20;\n   });\n   var timeRemaining = F2(function (t,_p24) {\n      var _p25 = _p24;\n      var duration = A3(dur,_p25._0.dos,_p25._0.from,_p25._0.to);\n      return A2($Basics.max,\n      0,\n      _p25._0.start + _p25._0.delay + duration - t);\n   });\n   var getDuration = function (_p26) {\n      var _p27 = _p26;\n      return A3(dur,_p27._0.dos,_p27._0.from,_p27._0.to);\n   };\n   var equals = F2(function (_p29,_p28) {\n      var _p30 = _p29;\n      var _p33 = _p30._0;\n      var _p31 = _p28;\n      var _p32 = _p31._0;\n      return _U.eq(_p33.start + _p33.delay,\n      _p32.start + _p32.delay) && (_U.eq(_p33.from,\n      _p32.from) && (_U.eq(_p33.to,_p32.to) && (_U.eq(_p33.ramp,\n      _p32.ramp) && ((_U.eq(_p33.dos,_p32.dos) || _U.cmp(1.0e-3,\n      $Basics.abs(A3(dur,_p33.dos,_p33.from,_p33.to) - A3(dur,\n      _p32.dos,\n      _p32.from,\n      _p32.to))) > -1) && A2($List.all,\n      function (t) {\n         return _U.eq(_p33.ease(t),_p32.ease(t));\n      },\n      _U.list([0.1,0.3,0.7,0.9]))))));\n   });\n   var isRunning = F2(function (t,_p34) {\n      var _p35 = _p34;\n      var _p37 = _p35._0.start;\n      var _p36 = _p35._0.delay;\n      var duration = A3(dur,_p35._0.dos,_p35._0.from,_p35._0.to);\n      return _U.cmp(t,_p37 + _p36) > 0 && _U.cmp(t,\n      _p37 + _p36 + duration) < 0;\n   });\n   var isDone = F2(function (t,_p38) {\n      var _p39 = _p38;\n      var duration = A3(dur,_p39._0.dos,_p39._0.from,_p39._0.to);\n      return _U.cmp(t,_p39._0.start + _p39._0.delay + duration) > -1;\n   });\n   var A = function (a) {    return {ctor: "A",_0: a};};\n   var undo = F2(function (t,_p40) {\n      var _p41 = _p40;\n      var _p42 = _p41._0;\n      return A(_U.update(_p42,\n      {from: _p42.to\n      ,to: _p42.from\n      ,start: t\n      ,delay: 0 - A2(timeRemaining,t,_p41)\n      ,ramp: $Maybe.Nothing\n      ,ease: function (t) {\n         return 1 - _p42.ease(1 - t);\n      }}));\n   });\n   var delay = F2(function (x,_p43) {\n      var _p44 = _p43;\n      return A(_U.update(_p44._0,{delay: x}));\n   });\n   var ease = F2(function (x,_p45) {\n      var _p46 = _p45;\n      return A(_U.update(_p46._0,{ease: x}));\n   });\n   var from = F2(function (x,_p47) {\n      var _p48 = _p47;\n      return A(_U.update(_p48._0,{from: x,ramp: $Maybe.Nothing}));\n   });\n   var to = F2(function (x,_p49) {\n      var _p50 = _p49;\n      return A(_U.update(_p50._0,{to: x,ramp: $Maybe.Nothing}));\n   });\n   var AnimRecord = F7(function (a,b,c,d,e,f,g) {\n      return {start: a\n             ,delay: b\n             ,dos: c\n             ,ramp: d\n             ,ease: e\n             ,from: f\n             ,to: g};\n   });\n   var Speed = function (a) {    return {ctor: "Speed",_0: a};};\n   var speed = F2(function (x,_p51) {\n      var _p52 = _p51;\n      return A(_U.update(_p52._0,{dos: Speed($Basics.abs(x))}));\n   });\n   var Duration = function (a) {\n      return {ctor: "Duration",_0: a};\n   };\n   var defaultDuration = Duration(750 * $Time.millisecond);\n   var animation = function (t) {\n      return A(A7(AnimRecord,\n      t,\n      0,\n      defaultDuration,\n      $Maybe.Nothing,\n      defaultEase,\n      0,\n      1));\n   };\n   var retarget = F3(function (t,newTo,_p53) {\n      var _p54 = _p53;\n      var _p57 = _p54;\n      var _p56 = _p54._0;\n      if (_U.eq(newTo,_p56.to)) return _p57; else if (_U.eq(_p56.from,\n         _p56.to)) return A(_U.update(_p56,\n            {start: t\n            ,to: newTo\n            ,dos: defaultDuration\n            ,ramp: $Maybe.Nothing})); else if (A2(isScheduled,t,_p57))\n            return A(_U.update(_p56,{to: newTo,ramp: $Maybe.Nothing}));\n            else if (A2(isDone,t,_p57)) return A(_U.update(_p56,\n                  {start: t\n                  ,delay: 0\n                  ,from: _p56.to\n                  ,to: newTo\n                  ,ramp: $Maybe.Nothing})); else {\n                     var newSpeed = function () {\n                        var _p55 = _p56.dos;\n                        if (_p55.ctor === "Speed") {\n                              return _p56.dos;\n                           } else {\n                              return Speed(A3(spd,_p56.dos,_p56.from,_p56.to));\n                           }\n                     }();\n                     var pos = A2(animate,t,_p57);\n                     var vel = A2(velocity,t,_p57);\n                     return A(A7(AnimRecord,\n                     t,\n                     0,\n                     newSpeed,\n                     $Maybe.Just(vel),\n                     _p56.ease,\n                     pos,\n                     newTo));\n                  }\n   });\n   var $static = function (x) {\n      return A(A7(AnimRecord,\n      0,\n      0,\n      Duration(0),\n      $Maybe.Nothing,\n      defaultEase,\n      x,\n      x));\n   };\n   var duration = F2(function (x,_p58) {\n      var _p59 = _p58;\n      return A(_U.update(_p59._0,{dos: Duration(x)}));\n   });\n   return _elm.Animation.values = {_op: _op\n                                  ,animation: animation\n                                  ,$static: $static\n                                  ,animate: animate\n                                  ,duration: duration\n                                  ,speed: speed\n                                  ,delay: delay\n                                  ,ease: ease\n                                  ,from: from\n                                  ,to: to\n                                  ,undo: undo\n                                  ,retarget: retarget\n                                  ,getStart: getStart\n                                  ,getDuration: getDuration\n                                  ,getSpeed: getSpeed\n                                  ,getDelay: getDelay\n                                  ,getEase: getEase\n                                  ,getFrom: getFrom\n                                  ,getTo: getTo\n                                  ,equals: equals\n                                  ,velocity: velocity\n                                  ,timeElapsed: timeElapsed\n                                  ,timeRemaining: timeRemaining\n                                  ,isScheduled: isScheduled\n                                  ,isRunning: isRunning\n                                  ,isDone: isDone};\n};\nElm.Transit = Elm.Transit || {};\nElm.Transit.make = function (_elm) {\n   "use strict";\n   _elm.Transit = _elm.Transit || {};\n   if (_elm.Transit.values) return _elm.Transit.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Animation = Elm.Animation.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $Effects = Elm.Effects.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $Task = Elm.Task.make(_elm),\n   $Time = Elm.Time.make(_elm);\n   var _op = {};\n   var getStatus = function (_p0) {\n      var _p1 = _p0;\n      return _p1._0.status;\n   };\n   var getValue = function (_p2) {\n      var _p3 = _p2;\n      return _p3._0.value;\n   };\n   var triggerTimelineAction = F2(function (targetAction,_p4) {\n      var _p5 = _p4;\n      return {ctor: "_Tuple2"\n             ,_0: _p5._0\n             ,_1: $Effects.batch(_U.list([_p5._1\n                                         ,$Effects.task($Task.succeed(targetAction))]))};\n   });\n   var withEnterDuration = F2(function (d,timeline) {\n      return _U.update(timeline,{enterDuration: d});\n   });\n   var withExitDuration = F2(function (d,timeline) {\n      return _U.update(timeline,{exitDuration: d});\n   });\n   var Timeline = F3(function (a,b,c) {\n      return {exitDuration: a,action: b,enterDuration: c};\n   });\n   var timeline = Timeline;\n   var defaultTimeline = function (action) {\n      return A3(Timeline,100,action,200);\n   };\n   var EnterTick = F2(function (a,b) {\n      return {ctor: "EnterTick",_0: a,_1: b};\n   });\n   var ExitTick = F3(function (a,b,c) {\n      return {ctor: "ExitTick",_0: a,_1: b,_2: c};\n   });\n   var Start = F2(function (a,b) {\n      return {ctor: "Start",_0: a,_1: b};\n   });\n   var Init = function (a) {    return {ctor: "Init",_0: a};};\n   var AnimationState = F2(function (a,b) {\n      return {startTime: a,animation: b};\n   });\n   var Done = {ctor: "Done"};\n   var Enter = {ctor: "Enter"};\n   var enterStep = F3(function (value,animState,state) {\n      return {ctor: "_Tuple2"\n             ,_0: _U.update(state,{value: value,status: Enter})\n             ,_1: $Effects.tick(EnterTick(animState))};\n   });\n   var Exit = {ctor: "Exit"};\n   var exitStep = F4(function (value,timeline,animState,state) {\n      return {ctor: "_Tuple2"\n             ,_0: _U.update(state,{value: value,status: Exit})\n             ,_1: $Effects.tick(A2(ExitTick,timeline,animState))};\n   });\n   var State = F3(function (a,b,c) {\n      return {value: a,status: b,startTime: c};\n   });\n   var initialState = A3(State,0,Done,0);\n   var T = function (a) {    return {ctor: "T",_0: a};};\n   var initial = T(initialState);\n   var update = F3(function (actionWrapper,action,target) {\n      var wrapForTarget = function (_p6) {\n         var _p7 = _p6;\n         return {ctor: "_Tuple2"\n                ,_0: _U.update(target,{transition: T(_p7._0)})\n                ,_1: A2($Effects.map,actionWrapper,_p7._1)};\n      };\n      var state = function () {\n         var _p8 = target.transition;\n         return _p8._0;\n      }();\n      var watchRetarget = F2(function (animState,_p9) {\n         var _p10 = _p9;\n         return _U.eq(state.startTime,\n         animState.startTime) ? {ctor: "_Tuple2"\n                                ,_0: _p10._0\n                                ,_1: _p10._1} : {ctor: "_Tuple2",_0: state,_1: $Effects.none};\n      });\n      var _p11 = action;\n      switch (_p11.ctor)\n      {case "Init": return wrapForTarget({ctor: "_Tuple2"\n                                         ,_0: A3(State,0,Exit,0)\n                                         ,_1: $Effects.tick(Start(_p11._0))});\n         case "Start": var _p13 = _p11._0;\n           var _p12 = _p11._1;\n           var newState = _U.update(state,{startTime: _p12});\n           var newAnim = A2($Animation.ease,\n           $Basics.identity,\n           A2($Animation.duration,\n           _p13.exitDuration,\n           $Animation.animation(_p12)));\n           return wrapForTarget(A4(exitStep,\n           0,\n           _p13,\n           A2(AnimationState,_p12,newAnim),\n           newState));\n         case "ExitTick": var _p16 = _p11._0;\n           var _p15 = _p11._2;\n           var _p14 = _p11._1;\n           if (A2($Animation.isRunning,_p15,_p14.animation))\n           return wrapForTarget(A2(watchRetarget,\n              _p14,\n              A4(exitStep,\n              A2($Animation.animate,_p15,_p14.animation),\n              _p16,\n              _p14,\n              state))); else {\n                 var newAnim = A2($Animation.ease,\n                 $Basics.identity,\n                 A2($Animation.duration,\n                 _p16.enterDuration,\n                 $Animation.animation(_p15)));\n                 return A2(triggerTimelineAction,\n                 _p16.action,\n                 wrapForTarget(A2(watchRetarget,\n                 _p14,\n                 A3(enterStep,0,_U.update(_p14,{animation: newAnim}),state))));\n              }\n         default: var _p18 = _p11._1;\n           var _p17 = _p11._0;\n           return A2($Animation.isRunning,\n           _p18,\n           _p17.animation) ? wrapForTarget(A2(watchRetarget,\n           _p17,\n           A3(enterStep,\n           A2($Animation.animate,_p18,_p17.animation),\n           _p17,\n           state))) : wrapForTarget({ctor: "_Tuple2"\n                                    ,_0: initialState\n                                    ,_1: $Effects.none});}\n   });\n   var init = F2(function (actionWrapper,timeline) {\n      return A2(update,actionWrapper,Init(timeline));\n   });\n   return _elm.Transit.values = {_op: _op\n                                ,initial: initial\n                                ,timeline: timeline\n                                ,defaultTimeline: defaultTimeline\n                                ,withEnterDuration: withEnterDuration\n                                ,withExitDuration: withExitDuration\n                                ,init: init\n                                ,update: update\n                                ,getStatus: getStatus\n                                ,getValue: getValue\n                                ,Timeline: Timeline\n                                ,Exit: Exit\n                                ,Enter: Enter\n                                ,Done: Done};\n};\nElm.TransitStyle = Elm.TransitStyle || {};\nElm.TransitStyle.make = function (_elm) {\n   "use strict";\n   _elm.TransitStyle = _elm.TransitStyle || {};\n   if (_elm.TransitStyle.values) return _elm.TransitStyle.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $Easing = Elm.Easing.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $Transit = Elm.Transit.make(_elm);\n   var _op = {};\n   var easeInCubic1 = F2(function (from,to) {\n      return A5($Easing.ease,\n      $Easing.easeInCubic,\n      $Easing.$float,\n      from,\n      to,\n      1);\n   });\n   var easeOutCubic1 = F2(function (from,to) {\n      return A5($Easing.ease,\n      $Easing.easeOutCubic,\n      $Easing.$float,\n      from,\n      to,\n      1);\n   });\n   var translateX = function (v) {\n      return _U.list([{ctor: "_Tuple2"\n                      ,_0: "transform"\n                      ,_1: A2($Basics._op["++"],\n                      "translateX(",\n                      A2($Basics._op["++"],$Basics.toString(v),"px)"))}]);\n   };\n   var opacity = function (v) {\n      return _U.list([{ctor: "_Tuple2"\n                      ,_0: "opacity"\n                      ,_1: $Basics.toString(v)}]);\n   };\n   var fadeIn = function (v) {\n      return opacity(A3(easeOutCubic1,0,1,v));\n   };\n   var fadeOut = function (v) {\n      return opacity(A3(easeInCubic1,1,0,v));\n   };\n   var slideInLeft = F2(function (offset,v) {\n      return translateX(A3(easeOutCubic1,offset,0,v));\n   });\n   var slideOutLeft = F2(function (offset,v) {\n      return translateX(A3(easeInCubic1,0,0 - offset,v));\n   });\n   var compose = F3(function (exit,enter,transition) {\n      var _p0 = {ctor: "_Tuple2"\n                ,_0: $Transit.getStatus(transition)\n                ,_1: $Transit.getValue(transition)};\n      _v0_2: do {\n         if (_p0.ctor === "_Tuple2") {\n               switch (_p0._0.ctor)\n               {case "Exit": return exit(_p0._1);\n                  case "Enter": return enter(_p0._1);\n                  default: break _v0_2;}\n            } else {\n               break _v0_2;\n            }\n      } while (false);\n      return _U.list([]);\n   });\n   var slideLeft = function (offset) {\n      return A2(compose,slideOutLeft(offset),slideInLeft(offset));\n   };\n   var fade = A2(compose,fadeOut,fadeIn);\n   var fadeSlideLeft = F2(function (offset,t) {\n      return A2($Basics._op["++"],A2(slideLeft,offset,t),fade(t));\n   });\n   return _elm.TransitStyle.values = {_op: _op\n                                     ,fadeSlideLeft: fadeSlideLeft\n                                     ,slideLeft: slideLeft\n                                     ,slideOutLeft: slideOutLeft\n                                     ,slideInLeft: slideInLeft\n                                     ,fade: fade\n                                     ,fadeOut: fadeOut\n                                     ,fadeIn: fadeIn\n                                     ,compose: compose};\n};\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module \'"+o+"\'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n},{}],2:[function(require,module,exports){\n(function (global){\nvar topLevel = typeof global !== \'undefined\' ? global :\n    typeof window !== \'undefined\' ? window : {}\nvar minDoc = require(\'min-document\');\n\nif (typeof document !== \'undefined\') {\n    module.exports = document;\n} else {\n    var doccy = topLevel[\'__GLOBAL_DOCUMENT_CACHE@4\'];\n\n    if (!doccy) {\n        doccy = topLevel[\'__GLOBAL_DOCUMENT_CACHE@4\'] = minDoc;\n    }\n\n    module.exports = doccy;\n}\n\n}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})\n},{"min-document":1}],3:[function(require,module,exports){\n"use strict";\n\nmodule.exports = function isObject(x) {\n	return typeof x === "object" && x !== null;\n};\n\n},{}],4:[function(require,module,exports){\nvar nativeIsArray = Array.isArray\nvar toString = Object.prototype.toString\n\nmodule.exports = nativeIsArray || isArray\n\nfunction isArray(obj) {\n    return toString.call(obj) === "[object Array]"\n}\n\n},{}],5:[function(require,module,exports){\nvar isObject = require("is-object")\nvar isHook = require("../vnode/is-vhook.js")\n\nmodule.exports = applyProperties\n\nfunction applyProperties(node, props, previous) {\n    for (var propName in props) {\n        var propValue = props[propName]\n\n        if (propValue === undefined) {\n            removeProperty(node, propName, propValue, previous);\n        } else if (isHook(propValue)) {\n            removeProperty(node, propName, propValue, previous)\n            if (propValue.hook) {\n                propValue.hook(node,\n                    propName,\n                    previous ? previous[propName] : undefined)\n            }\n        } else {\n            if (isObject(propValue)) {\n                patchObject(node, props, previous, propName, propValue);\n            } else {\n                node[propName] = propValue\n            }\n        }\n    }\n}\n\nfunction removeProperty(node, propName, propValue, previous) {\n    if (previous) {\n        var previousValue = previous[propName]\n\n        if (!isHook(previousValue)) {\n            if (propName === "attributes") {\n                for (var attrName in previousValue) {\n                    node.removeAttribute(attrName)\n                }\n            } else if (propName === "style") {\n                for (var i in previousValue) {\n                    node.style[i] = ""\n                }\n            } else if (typeof previousValue === "string") {\n                node[propName] = ""\n            } else {\n                node[propName] = null\n            }\n        } else if (previousValue.unhook) {\n            previousValue.unhook(node, propName, propValue)\n        }\n    }\n}\n\nfunction patchObject(node, props, previous, propName, propValue) {\n    var previousValue = previous ? previous[propName] : undefined\n\n    // Set attributes\n    if (propName === "attributes") {\n        for (var attrName in propValue) {\n            var attrValue = propValue[attrName]\n\n            if (attrValue === undefined) {\n                node.removeAttribute(attrName)\n            } else {\n                node.setAttribute(attrName, attrValue)\n            }\n        }\n\n        return\n    }\n\n    if(previousValue && isObject(previousValue) &&\n        getPrototype(previousValue) !== getPrototype(propValue)) {\n        node[propName] = propValue\n        return\n    }\n\n    if (!isObject(node[propName])) {\n        node[propName] = {}\n    }\n\n    var replacer = propName === "style" ? "" : undefined\n\n    for (var k in propValue) {\n        var value = propValue[k]\n        node[propName][k] = (value === undefined) ? replacer : value\n    }\n}\n\nfunction getPrototype(value) {\n    if (Object.getPrototypeOf) {\n        return Object.getPrototypeOf(value)\n    } else if (value.__proto__) {\n        return value.__proto__\n    } else if (value.constructor) {\n        return value.constructor.prototype\n    }\n}\n\n},{"../vnode/is-vhook.js":13,"is-object":3}],6:[function(require,module,exports){\nvar document = require("global/document")\n\nvar applyProperties = require("./apply-properties")\n\nvar isVNode = require("../vnode/is-vnode.js")\nvar isVText = require("../vnode/is-vtext.js")\nvar isWidget = require("../vnode/is-widget.js")\nvar handleThunk = require("../vnode/handle-thunk.js")\n\nmodule.exports = createElement\n\nfunction createElement(vnode, opts) {\n    var doc = opts ? opts.document || document : document\n    var warn = opts ? opts.warn : null\n\n    vnode = handleThunk(vnode).a\n\n    if (isWidget(vnode)) {\n        return vnode.init()\n    } else if (isVText(vnode)) {\n        return doc.createTextNode(vnode.text)\n    } else if (!isVNode(vnode)) {\n        if (warn) {\n            warn("Item is not a valid virtual dom node", vnode)\n        }\n        return null\n    }\n\n    var node = (vnode.namespace === null) ?\n        doc.createElement(vnode.tagName) :\n        doc.createElementNS(vnode.namespace, vnode.tagName)\n\n    var props = vnode.properties\n    applyProperties(node, props)\n\n    var children = vnode.children\n\n    for (var i = 0; i < children.length; i++) {\n        var childNode = createElement(children[i], opts)\n        if (childNode) {\n            node.appendChild(childNode)\n        }\n    }\n\n    return node\n}\n\n},{"../vnode/handle-thunk.js":11,"../vnode/is-vnode.js":14,"../vnode/is-vtext.js":15,"../vnode/is-widget.js":16,"./apply-properties":5,"global/document":2}],7:[function(require,module,exports){\n// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.\n// We don\'t want to read all of the DOM nodes in the tree so we use\n// the in-order tree indexing to eliminate recursion down certain branches.\n// We only recurse into a DOM node if we know that it contains a child of\n// interest.\n\nvar noChild = {}\n\nmodule.exports = domIndex\n\nfunction domIndex(rootNode, tree, indices, nodes) {\n    if (!indices || indices.length === 0) {\n        return {}\n    } else {\n        indices.sort(ascending)\n        return recurse(rootNode, tree, indices, nodes, 0)\n    }\n}\n\nfunction recurse(rootNode, tree, indices, nodes, rootIndex) {\n    nodes = nodes || {}\n\n\n    if (rootNode) {\n        if (indexInRange(indices, rootIndex, rootIndex)) {\n            nodes[rootIndex] = rootNode\n        }\n\n        var vChildren = tree.children\n\n        if (vChildren) {\n\n            var childNodes = rootNode.childNodes\n\n            for (var i = 0; i < tree.children.length; i++) {\n                rootIndex += 1\n\n                var vChild = vChildren[i] || noChild\n                var nextIndex = rootIndex + (vChild.count || 0)\n\n                // skip recursion down the tree if there are no nodes down here\n                if (indexInRange(indices, rootIndex, nextIndex)) {\n                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)\n                }\n\n                rootIndex = nextIndex\n            }\n        }\n    }\n\n    return nodes\n}\n\n// Binary search for an index in the interval [left, right]\nfunction indexInRange(indices, left, right) {\n    if (indices.length === 0) {\n        return false\n    }\n\n    var minIndex = 0\n    var maxIndex = indices.length - 1\n    var currentIndex\n    var currentItem\n\n    while (minIndex <= maxIndex) {\n        currentIndex = ((maxIndex + minIndex) / 2) >> 0\n        currentItem = indices[currentIndex]\n\n        if (minIndex === maxIndex) {\n            return currentItem >= left && currentItem <= right\n        } else if (currentItem < left) {\n            minIndex = currentIndex + 1\n        } else  if (currentItem > right) {\n            maxIndex = currentIndex - 1\n        } else {\n            return true\n        }\n    }\n\n    return false;\n}\n\nfunction ascending(a, b) {\n    return a > b ? 1 : -1\n}\n\n},{}],8:[function(require,module,exports){\nvar applyProperties = require("./apply-properties")\n\nvar isWidget = require("../vnode/is-widget.js")\nvar VPatch = require("../vnode/vpatch.js")\n\nvar render = require("./create-element")\nvar updateWidget = require("./update-widget")\n\nmodule.exports = applyPatch\n\nfunction applyPatch(vpatch, domNode, renderOptions) {\n    var type = vpatch.type\n    var vNode = vpatch.vNode\n    var patch = vpatch.patch\n\n    switch (type) {\n        case VPatch.REMOVE:\n            return removeNode(domNode, vNode)\n        case VPatch.INSERT:\n            return insertNode(domNode, patch, renderOptions)\n        case VPatch.VTEXT:\n            return stringPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.WIDGET:\n            return widgetPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.VNODE:\n            return vNodePatch(domNode, vNode, patch, renderOptions)\n        case VPatch.ORDER:\n            reorderChildren(domNode, patch)\n            return domNode\n        case VPatch.PROPS:\n            applyProperties(domNode, patch, vNode.properties)\n            return domNode\n        case VPatch.THUNK:\n            return replaceRoot(domNode,\n                renderOptions.patch(domNode, patch, renderOptions))\n        default:\n            return domNode\n    }\n}\n\nfunction removeNode(domNode, vNode) {\n    var parentNode = domNode.parentNode\n\n    if (parentNode) {\n        parentNode.removeChild(domNode)\n    }\n\n    destroyWidget(domNode, vNode);\n\n    return null\n}\n\nfunction insertNode(parentNode, vNode, renderOptions) {\n    var newNode = render(vNode, renderOptions)\n\n    if (parentNode) {\n        parentNode.appendChild(newNode)\n    }\n\n    return parentNode\n}\n\nfunction stringPatch(domNode, leftVNode, vText, renderOptions) {\n    var newNode\n\n    if (domNode.nodeType === 3) {\n        domNode.replaceData(0, domNode.length, vText.text)\n        newNode = domNode\n    } else {\n        var parentNode = domNode.parentNode\n        newNode = render(vText, renderOptions)\n\n        if (parentNode && newNode !== domNode) {\n            parentNode.replaceChild(newNode, domNode)\n        }\n    }\n\n    return newNode\n}\n\nfunction widgetPatch(domNode, leftVNode, widget, renderOptions) {\n    var updating = updateWidget(leftVNode, widget)\n    var newNode\n\n    if (updating) {\n        newNode = widget.update(leftVNode, domNode) || domNode\n    } else {\n        newNode = render(widget, renderOptions)\n    }\n\n    var parentNode = domNode.parentNode\n\n    if (parentNode && newNode !== domNode) {\n        parentNode.replaceChild(newNode, domNode)\n    }\n\n    if (!updating) {\n        destroyWidget(domNode, leftVNode)\n    }\n\n    return newNode\n}\n\nfunction vNodePatch(domNode, leftVNode, vNode, renderOptions) {\n    var parentNode = domNode.parentNode\n    var newNode = render(vNode, renderOptions)\n\n    if (parentNode && newNode !== domNode) {\n        parentNode.replaceChild(newNode, domNode)\n    }\n\n    return newNode\n}\n\nfunction destroyWidget(domNode, w) {\n    if (typeof w.destroy === "function" && isWidget(w)) {\n        w.destroy(domNode)\n    }\n}\n\nfunction reorderChildren(domNode, moves) {\n    var childNodes = domNode.childNodes\n    var keyMap = {}\n    var node\n    var remove\n    var insert\n\n    for (var i = 0; i < moves.removes.length; i++) {\n        remove = moves.removes[i]\n        node = childNodes[remove.from]\n        if (remove.key) {\n            keyMap[remove.key] = node\n        }\n        domNode.removeChild(node)\n    }\n\n    var length = childNodes.length\n    for (var j = 0; j < moves.inserts.length; j++) {\n        insert = moves.inserts[j]\n        node = keyMap[insert.key]\n        // this is the weirdest bug i\'ve ever seen in webkit\n        domNode.insertBefore(node, insert.to >= length++ ? null : childNodes[insert.to])\n    }\n}\n\nfunction replaceRoot(oldRoot, newRoot) {\n    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {\n        oldRoot.parentNode.replaceChild(newRoot, oldRoot)\n    }\n\n    return newRoot;\n}\n\n},{"../vnode/is-widget.js":16,"../vnode/vpatch.js":19,"./apply-properties":5,"./create-element":6,"./update-widget":10}],9:[function(require,module,exports){\nvar document = require("global/document")\nvar isArray = require("x-is-array")\n\nvar domIndex = require("./dom-index")\nvar patchOp = require("./patch-op")\nmodule.exports = patch\n\nfunction patch(rootNode, patches) {\n    return patchRecursive(rootNode, patches)\n}\n\nfunction patchRecursive(rootNode, patches, renderOptions) {\n    var indices = patchIndices(patches)\n\n    if (indices.length === 0) {\n        return rootNode\n    }\n\n    var index = domIndex(rootNode, patches.a, indices)\n    var ownerDocument = rootNode.ownerDocument\n\n    if (!renderOptions) {\n        renderOptions = { patch: patchRecursive }\n        if (ownerDocument !== document) {\n            renderOptions.document = ownerDocument\n        }\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n        var nodeIndex = indices[i]\n        rootNode = applyPatch(rootNode,\n            index[nodeIndex],\n            patches[nodeIndex],\n            renderOptions)\n    }\n\n    return rootNode\n}\n\nfunction applyPatch(rootNode, domNode, patchList, renderOptions) {\n    if (!domNode) {\n        return rootNode\n    }\n\n    var newNode\n\n    if (isArray(patchList)) {\n        for (var i = 0; i < patchList.length; i++) {\n            newNode = patchOp(patchList[i], domNode, renderOptions)\n\n            if (domNode === rootNode) {\n                rootNode = newNode\n            }\n        }\n    } else {\n        newNode = patchOp(patchList, domNode, renderOptions)\n\n        if (domNode === rootNode) {\n            rootNode = newNode\n        }\n    }\n\n    return rootNode\n}\n\nfunction patchIndices(patches) {\n    var indices = []\n\n    for (var key in patches) {\n        if (key !== "a") {\n            indices.push(Number(key))\n        }\n    }\n\n    return indices\n}\n\n},{"./dom-index":7,"./patch-op":8,"global/document":2,"x-is-array":4}],10:[function(require,module,exports){\nvar isWidget = require("../vnode/is-widget.js")\n\nmodule.exports = updateWidget\n\nfunction updateWidget(a, b) {\n    if (isWidget(a) && isWidget(b)) {\n        if ("name" in a && "name" in b) {\n            return a.id === b.id\n        } else {\n            return a.init === b.init\n        }\n    }\n\n    return false\n}\n\n},{"../vnode/is-widget.js":16}],11:[function(require,module,exports){\nvar isVNode = require("./is-vnode")\nvar isVText = require("./is-vtext")\nvar isWidget = require("./is-widget")\nvar isThunk = require("./is-thunk")\n\nmodule.exports = handleThunk\n\nfunction handleThunk(a, b) {\n    var renderedA = a\n    var renderedB = b\n\n    if (isThunk(b)) {\n        renderedB = renderThunk(b, a)\n    }\n\n    if (isThunk(a)) {\n        renderedA = renderThunk(a, null)\n    }\n\n    return {\n        a: renderedA,\n        b: renderedB\n    }\n}\n\nfunction renderThunk(thunk, previous) {\n    var renderedThunk = thunk.vnode\n\n    if (!renderedThunk) {\n        renderedThunk = thunk.vnode = thunk.render(previous)\n    }\n\n    if (!(isVNode(renderedThunk) ||\n            isVText(renderedThunk) ||\n            isWidget(renderedThunk))) {\n        throw new Error("thunk did not return a valid node");\n    }\n\n    return renderedThunk\n}\n\n},{"./is-thunk":12,"./is-vnode":14,"./is-vtext":15,"./is-widget":16}],12:[function(require,module,exports){\nmodule.exports = isThunk\r\n\r\nfunction isThunk(t) {\r\n    return t && t.type === "Thunk"\r\n}\r\n\n},{}],13:[function(require,module,exports){\nmodule.exports = isHook\n\nfunction isHook(hook) {\n    return hook &&\n      (typeof hook.hook === "function" && !hook.hasOwnProperty("hook") ||\n       typeof hook.unhook === "function" && !hook.hasOwnProperty("unhook"))\n}\n\n},{}],14:[function(require,module,exports){\nvar version = require("./version")\n\nmodule.exports = isVirtualNode\n\nfunction isVirtualNode(x) {\n    return x && x.type === "VirtualNode" && x.version === version\n}\n\n},{"./version":17}],15:[function(require,module,exports){\nvar version = require("./version")\n\nmodule.exports = isVirtualText\n\nfunction isVirtualText(x) {\n    return x && x.type === "VirtualText" && x.version === version\n}\n\n},{"./version":17}],16:[function(require,module,exports){\nmodule.exports = isWidget\n\nfunction isWidget(w) {\n    return w && w.type === "Widget"\n}\n\n},{}],17:[function(require,module,exports){\nmodule.exports = "2"\n\n},{}],18:[function(require,module,exports){\nvar version = require("./version")\nvar isVNode = require("./is-vnode")\nvar isWidget = require("./is-widget")\nvar isThunk = require("./is-thunk")\nvar isVHook = require("./is-vhook")\n\nmodule.exports = VirtualNode\n\nvar noProperties = {}\nvar noChildren = []\n\nfunction VirtualNode(tagName, properties, children, key, namespace) {\n    this.tagName = tagName\n    this.properties = properties || noProperties\n    this.children = children || noChildren\n    this.key = key != null ? String(key) : undefined\n    this.namespace = (typeof namespace === "string") ? namespace : null\n\n    var count = (children && children.length) || 0\n    var descendants = 0\n    var hasWidgets = false\n    var hasThunks = false\n    var descendantHooks = false\n    var hooks\n\n    for (var propName in properties) {\n        if (properties.hasOwnProperty(propName)) {\n            var property = properties[propName]\n            if (isVHook(property) && property.unhook) {\n                if (!hooks) {\n                    hooks = {}\n                }\n\n                hooks[propName] = property\n            }\n        }\n    }\n\n    for (var i = 0; i < count; i++) {\n        var child = children[i]\n        if (isVNode(child)) {\n            descendants += child.count || 0\n\n            if (!hasWidgets && child.hasWidgets) {\n                hasWidgets = true\n            }\n\n            if (!hasThunks && child.hasThunks) {\n                hasThunks = true\n            }\n\n            if (!descendantHooks && (child.hooks || child.descendantHooks)) {\n                descendantHooks = true\n            }\n        } else if (!hasWidgets && isWidget(child)) {\n            if (typeof child.destroy === "function") {\n                hasWidgets = true\n            }\n        } else if (!hasThunks && isThunk(child)) {\n            hasThunks = true;\n        }\n    }\n\n    this.count = count + descendants\n    this.hasWidgets = hasWidgets\n    this.hasThunks = hasThunks\n    this.hooks = hooks\n    this.descendantHooks = descendantHooks\n}\n\nVirtualNode.prototype.version = version\nVirtualNode.prototype.type = "VirtualNode"\n\n},{"./is-thunk":12,"./is-vhook":13,"./is-vnode":14,"./is-widget":16,"./version":17}],19:[function(require,module,exports){\nvar version = require("./version")\n\nVirtualPatch.NONE = 0\nVirtualPatch.VTEXT = 1\nVirtualPatch.VNODE = 2\nVirtualPatch.WIDGET = 3\nVirtualPatch.PROPS = 4\nVirtualPatch.ORDER = 5\nVirtualPatch.INSERT = 6\nVirtualPatch.REMOVE = 7\nVirtualPatch.THUNK = 8\n\nmodule.exports = VirtualPatch\n\nfunction VirtualPatch(type, vNode, patch) {\n    this.type = Number(type)\n    this.vNode = vNode\n    this.patch = patch\n}\n\nVirtualPatch.prototype.version = version\nVirtualPatch.prototype.type = "VirtualPatch"\n\n},{"./version":17}],20:[function(require,module,exports){\nvar version = require("./version")\n\nmodule.exports = VirtualText\n\nfunction VirtualText(text) {\n    this.text = String(text)\n}\n\nVirtualText.prototype.version = version\nVirtualText.prototype.type = "VirtualText"\n\n},{"./version":17}],21:[function(require,module,exports){\nvar isObject = require("is-object")\nvar isHook = require("../vnode/is-vhook")\n\nmodule.exports = diffProps\n\nfunction diffProps(a, b) {\n    var diff\n\n    for (var aKey in a) {\n        if (!(aKey in b)) {\n            diff = diff || {}\n            diff[aKey] = undefined\n        }\n\n        var aValue = a[aKey]\n        var bValue = b[aKey]\n\n        if (aValue === bValue) {\n            continue\n        } else if (isObject(aValue) && isObject(bValue)) {\n            if (getPrototype(bValue) !== getPrototype(aValue)) {\n                diff = diff || {}\n                diff[aKey] = bValue\n            } else if (isHook(bValue)) {\n                 diff = diff || {}\n                 diff[aKey] = bValue\n            } else {\n                var objectDiff = diffProps(aValue, bValue)\n                if (objectDiff) {\n                    diff = diff || {}\n                    diff[aKey] = objectDiff\n                }\n            }\n        } else {\n            diff = diff || {}\n            diff[aKey] = bValue\n        }\n    }\n\n    for (var bKey in b) {\n        if (!(bKey in a)) {\n            diff = diff || {}\n            diff[bKey] = b[bKey]\n        }\n    }\n\n    return diff\n}\n\nfunction getPrototype(value) {\n  if (Object.getPrototypeOf) {\n    return Object.getPrototypeOf(value)\n  } else if (value.__proto__) {\n    return value.__proto__\n  } else if (value.constructor) {\n    return value.constructor.prototype\n  }\n}\n\n},{"../vnode/is-vhook":13,"is-object":3}],22:[function(require,module,exports){\nvar isArray = require("x-is-array")\n\nvar VPatch = require("../vnode/vpatch")\nvar isVNode = require("../vnode/is-vnode")\nvar isVText = require("../vnode/is-vtext")\nvar isWidget = require("../vnode/is-widget")\nvar isThunk = require("../vnode/is-thunk")\nvar handleThunk = require("../vnode/handle-thunk")\n\nvar diffProps = require("./diff-props")\n\nmodule.exports = diff\n\nfunction diff(a, b) {\n    var patch = { a: a }\n    walk(a, b, patch, 0)\n    return patch\n}\n\nfunction walk(a, b, patch, index) {\n    if (a === b) {\n        return\n    }\n\n    var apply = patch[index]\n    var applyClear = false\n\n    if (isThunk(a) || isThunk(b)) {\n        thunks(a, b, patch, index)\n    } else if (b == null) {\n\n        // If a is a widget we will add a remove patch for it\n        // Otherwise any child widgets/hooks must be destroyed.\n        // This prevents adding two remove patches for a widget.\n        if (!isWidget(a)) {\n            clearState(a, patch, index)\n            apply = patch[index]\n        }\n\n        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))\n    } else if (isVNode(b)) {\n        if (isVNode(a)) {\n            if (a.tagName === b.tagName &&\n                a.namespace === b.namespace &&\n                a.key === b.key) {\n                var propsPatch = diffProps(a.properties, b.properties)\n                if (propsPatch) {\n                    apply = appendPatch(apply,\n                        new VPatch(VPatch.PROPS, a, propsPatch))\n                }\n                apply = diffChildren(a, b, patch, apply, index)\n            } else {\n                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n                applyClear = true\n            }\n        } else {\n            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n            applyClear = true\n        }\n    } else if (isVText(b)) {\n        if (!isVText(a)) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n            applyClear = true\n        } else if (a.text !== b.text) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n        }\n    } else if (isWidget(b)) {\n        if (!isWidget(a)) {\n            applyClear = true\n        }\n\n        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))\n    }\n\n    if (apply) {\n        patch[index] = apply\n    }\n\n    if (applyClear) {\n        clearState(a, patch, index)\n    }\n}\n\nfunction diffChildren(a, b, patch, apply, index) {\n    var aChildren = a.children\n    var orderedSet = reorder(aChildren, b.children)\n    var bChildren = orderedSet.children\n\n    var aLen = aChildren.length\n    var bLen = bChildren.length\n    var len = aLen > bLen ? aLen : bLen\n\n    for (var i = 0; i < len; i++) {\n        var leftNode = aChildren[i]\n        var rightNode = bChildren[i]\n        index += 1\n\n        if (!leftNode) {\n            if (rightNode) {\n                // Excess nodes in b need to be added\n                apply = appendPatch(apply,\n                    new VPatch(VPatch.INSERT, null, rightNode))\n            }\n        } else {\n            walk(leftNode, rightNode, patch, index)\n        }\n\n        if (isVNode(leftNode) && leftNode.count) {\n            index += leftNode.count\n        }\n    }\n\n    if (orderedSet.moves) {\n        // Reorder nodes last\n        apply = appendPatch(apply, new VPatch(\n            VPatch.ORDER,\n            a,\n            orderedSet.moves\n        ))\n    }\n\n    return apply\n}\n\nfunction clearState(vNode, patch, index) {\n    // TODO: Make this a single walk, not two\n    unhook(vNode, patch, index)\n    destroyWidgets(vNode, patch, index)\n}\n\n// Patch records for all destroyed widgets must be added because we need\n// a DOM node reference for the destroy function\nfunction destroyWidgets(vNode, patch, index) {\n    if (isWidget(vNode)) {\n        if (typeof vNode.destroy === "function") {\n            patch[index] = appendPatch(\n                patch[index],\n                new VPatch(VPatch.REMOVE, vNode, null)\n            )\n        }\n    } else if (isVNode(vNode) && (vNode.hasWidgets || vNode.hasThunks)) {\n        var children = vNode.children\n        var len = children.length\n        for (var i = 0; i < len; i++) {\n            var child = children[i]\n            index += 1\n\n            destroyWidgets(child, patch, index)\n\n            if (isVNode(child) && child.count) {\n                index += child.count\n            }\n        }\n    } else if (isThunk(vNode)) {\n        thunks(vNode, null, patch, index)\n    }\n}\n\n// Create a sub-patch for thunks\nfunction thunks(a, b, patch, index) {\n    var nodes = handleThunk(a, b)\n    var thunkPatch = diff(nodes.a, nodes.b)\n    if (hasPatches(thunkPatch)) {\n        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)\n    }\n}\n\nfunction hasPatches(patch) {\n    for (var index in patch) {\n        if (index !== "a") {\n            return true\n        }\n    }\n\n    return false\n}\n\n// Execute hooks when two nodes are identical\nfunction unhook(vNode, patch, index) {\n    if (isVNode(vNode)) {\n        if (vNode.hooks) {\n            patch[index] = appendPatch(\n                patch[index],\n                new VPatch(\n                    VPatch.PROPS,\n                    vNode,\n                    undefinedKeys(vNode.hooks)\n                )\n            )\n        }\n\n        if (vNode.descendantHooks || vNode.hasThunks) {\n            var children = vNode.children\n            var len = children.length\n            for (var i = 0; i < len; i++) {\n                var child = children[i]\n                index += 1\n\n                unhook(child, patch, index)\n\n                if (isVNode(child) && child.count) {\n                    index += child.count\n                }\n            }\n        }\n    } else if (isThunk(vNode)) {\n        thunks(vNode, null, patch, index)\n    }\n}\n\nfunction undefinedKeys(obj) {\n    var result = {}\n\n    for (var key in obj) {\n        result[key] = undefined\n    }\n\n    return result\n}\n\n// List diff, naive left to right reordering\nfunction reorder(aChildren, bChildren) {\n    // O(M) time, O(M) memory\n    var bChildIndex = keyIndex(bChildren)\n    var bKeys = bChildIndex.keys\n    var bFree = bChildIndex.free\n\n    if (bFree.length === bChildren.length) {\n        return {\n            children: bChildren,\n            moves: null\n        }\n    }\n\n    // O(N) time, O(N) memory\n    var aChildIndex = keyIndex(aChildren)\n    var aKeys = aChildIndex.keys\n    var aFree = aChildIndex.free\n\n    if (aFree.length === aChildren.length) {\n        return {\n            children: bChildren,\n            moves: null\n        }\n    }\n\n    // O(MAX(N, M)) memory\n    var newChildren = []\n\n    var freeIndex = 0\n    var freeCount = bFree.length\n    var deletedItems = 0\n\n    // Iterate through a and match a node in b\n    // O(N) time,\n    for (var i = 0 ; i < aChildren.length; i++) {\n        var aItem = aChildren[i]\n        var itemIndex\n\n        if (aItem.key) {\n            if (bKeys.hasOwnProperty(aItem.key)) {\n                // Match up the old keys\n                itemIndex = bKeys[aItem.key]\n                newChildren.push(bChildren[itemIndex])\n\n            } else {\n                // Remove old keyed items\n                itemIndex = i - deletedItems++\n                newChildren.push(null)\n            }\n        } else {\n            // Match the item in a with the next free item in b\n            if (freeIndex < freeCount) {\n                itemIndex = bFree[freeIndex++]\n                newChildren.push(bChildren[itemIndex])\n            } else {\n                // There are no free items in b to match with\n                // the free items in a, so the extra free nodes\n                // are deleted.\n                itemIndex = i - deletedItems++\n                newChildren.push(null)\n            }\n        }\n    }\n\n    var lastFreeIndex = freeIndex >= bFree.length ?\n        bChildren.length :\n        bFree[freeIndex]\n\n    // Iterate through b and append any new keys\n    // O(M) time\n    for (var j = 0; j < bChildren.length; j++) {\n        var newItem = bChildren[j]\n\n        if (newItem.key) {\n            if (!aKeys.hasOwnProperty(newItem.key)) {\n                // Add any new keyed items\n                // We are adding new items to the end and then sorting them\n                // in place. In future we should insert new items in place.\n                newChildren.push(newItem)\n            }\n        } else if (j >= lastFreeIndex) {\n            // Add any leftover non-keyed items\n            newChildren.push(newItem)\n        }\n    }\n\n    var simulate = newChildren.slice()\n    var simulateIndex = 0\n    var removes = []\n    var inserts = []\n    var simulateItem\n\n    for (var k = 0; k < bChildren.length;) {\n        var wantedItem = bChildren[k]\n        simulateItem = simulate[simulateIndex]\n\n        // remove items\n        while (simulateItem === null && simulate.length) {\n            removes.push(remove(simulate, simulateIndex, null))\n            simulateItem = simulate[simulateIndex]\n        }\n\n        if (!simulateItem || simulateItem.key !== wantedItem.key) {\n            // if we need a key in this position...\n            if (wantedItem.key) {\n                if (simulateItem && simulateItem.key) {\n                    // if an insert doesn\'t put this key in place, it needs to move\n                    if (bKeys[simulateItem.key] !== k + 1) {\n                        removes.push(remove(simulate, simulateIndex, simulateItem.key))\n                        simulateItem = simulate[simulateIndex]\n                        // if the remove didn\'t put the wanted item in place, we need to insert it\n                        if (!simulateItem || simulateItem.key !== wantedItem.key) {\n                            inserts.push({key: wantedItem.key, to: k})\n                        }\n                        // items are matching, so skip ahead\n                        else {\n                            simulateIndex++\n                        }\n                    }\n                    else {\n                        inserts.push({key: wantedItem.key, to: k})\n                    }\n                }\n                else {\n                    inserts.push({key: wantedItem.key, to: k})\n                }\n                k++\n            }\n            // a key in simulate has no matching wanted key, remove it\n            else if (simulateItem && simulateItem.key) {\n                removes.push(remove(simulate, simulateIndex, simulateItem.key))\n            }\n        }\n        else {\n            simulateIndex++\n            k++\n        }\n    }\n\n    // remove all the remaining nodes from simulate\n    while(simulateIndex < simulate.length) {\n        simulateItem = simulate[simulateIndex]\n        removes.push(remove(simulate, simulateIndex, simulateItem && simulateItem.key))\n    }\n\n    // If the only moves we have are deletes then we can just\n    // let the delete patch remove these items.\n    if (removes.length === deletedItems && !inserts.length) {\n        return {\n            children: newChildren,\n            moves: null\n        }\n    }\n\n    return {\n        children: newChildren,\n        moves: {\n            removes: removes,\n            inserts: inserts\n        }\n    }\n}\n\nfunction remove(arr, index, key) {\n    arr.splice(index, 1)\n\n    return {\n        from: index,\n        key: key\n    }\n}\n\nfunction keyIndex(children) {\n    var keys = {}\n    var free = []\n    var length = children.length\n\n    for (var i = 0; i < length; i++) {\n        var child = children[i]\n\n        if (child.key) {\n            keys[child.key] = i\n        } else {\n            free.push(i)\n        }\n    }\n\n    return {\n        keys: keys,     // A hash of key name to index\n        free: free,     // An array of unkeyed item indices\n    }\n}\n\nfunction appendPatch(apply, patch) {\n    if (apply) {\n        if (isArray(apply)) {\n            apply.push(patch)\n        } else {\n            apply = [apply, patch]\n        }\n\n        return apply\n    } else {\n        return patch\n    }\n}\n\n},{"../vnode/handle-thunk":11,"../vnode/is-thunk":12,"../vnode/is-vnode":14,"../vnode/is-vtext":15,"../vnode/is-widget":16,"../vnode/vpatch":19,"./diff-props":21,"x-is-array":4}],23:[function(require,module,exports){\nvar VNode = require(\'virtual-dom/vnode/vnode\');\nvar VText = require(\'virtual-dom/vnode/vtext\');\nvar diff = require(\'virtual-dom/vtree/diff\');\nvar patch = require(\'virtual-dom/vdom/patch\');\nvar createElement = require(\'virtual-dom/vdom/create-element\');\nvar isHook = require("virtual-dom/vnode/is-vhook");\n\n\nElm.Native.VirtualDom = {};\nElm.Native.VirtualDom.make = function(elm)\n{\n	elm.Native = elm.Native || {};\n	elm.Native.VirtualDom = elm.Native.VirtualDom || {};\n	if (elm.Native.VirtualDom.values)\n	{\n		return elm.Native.VirtualDom.values;\n	}\n\n	var Element = Elm.Native.Graphics.Element.make(elm);\n	var Json = Elm.Native.Json.make(elm);\n	var List = Elm.Native.List.make(elm);\n	var Signal = Elm.Native.Signal.make(elm);\n	var Utils = Elm.Native.Utils.make(elm);\n\n	var ATTRIBUTE_KEY = \'UniqueNameThatOthersAreVeryUnlikelyToUse\';\n\n\n\n	// VIRTUAL DOM NODES\n\n\n	function text(string)\n	{\n		return new VText(string);\n	}\n\n	function node(name)\n	{\n		return F2(function(propertyList, contents) {\n			return makeNode(name, propertyList, contents);\n		});\n	}\n\n\n	// BUILD VIRTUAL DOME NODES\n\n\n	function makeNode(name, propertyList, contents)\n	{\n		var props = listToProperties(propertyList);\n\n		var key, namespace;\n		// support keys\n		if (props.key !== undefined)\n		{\n			key = props.key;\n			props.key = undefined;\n		}\n\n		// support namespace\n		if (props.namespace !== undefined)\n		{\n			namespace = props.namespace;\n			props.namespace = undefined;\n		}\n\n		// ensure that setting text of an input does not move the cursor\n		var useSoftSet =\n			(name === \'input\' || name === \'textarea\')\n			&& props.value !== undefined\n			&& !isHook(props.value);\n\n		if (useSoftSet)\n		{\n			props.value = SoftSetHook(props.value);\n		}\n\n		return new VNode(name, props, List.toArray(contents), key, namespace);\n	}\n\n	function listToProperties(list)\n	{\n		var object = {};\n		while (list.ctor !== \'[]\')\n		{\n			var entry = list._0;\n			if (entry.key === ATTRIBUTE_KEY)\n			{\n				object.attributes = object.attributes || {};\n				object.attributes[entry.value.attrKey] = entry.value.attrValue;\n			}\n			else\n			{\n				object[entry.key] = entry.value;\n			}\n			list = list._1;\n		}\n		return object;\n	}\n\n\n\n	// PROPERTIES AND ATTRIBUTES\n\n\n	function property(key, value)\n	{\n		return {\n			key: key,\n			value: value\n		};\n	}\n\n	function attribute(key, value)\n	{\n		return {\n			key: ATTRIBUTE_KEY,\n			value: {\n				attrKey: key,\n				attrValue: value\n			}\n		};\n	}\n\n\n\n	// NAMESPACED ATTRIBUTES\n\n\n	function attributeNS(namespace, key, value)\n	{\n		return {\n			key: key,\n			value: new AttributeHook(namespace, key, value)\n		};\n	}\n\n	function AttributeHook(namespace, key, value)\n	{\n		if (!(this instanceof AttributeHook))\n		{\n			return new AttributeHook(namespace, key, value);\n		}\n\n		this.namespace = namespace;\n		this.key = key;\n		this.value = value;\n	}\n\n	AttributeHook.prototype.hook = function (node, prop, prev)\n	{\n		if (prev\n			&& prev.type === \'AttributeHook\'\n			&& prev.value === this.value\n			&& prev.namespace === this.namespace)\n		{\n			return;\n		}\n\n		node.setAttributeNS(this.namespace, prop, this.value);\n	};\n\n	AttributeHook.prototype.unhook = function (node, prop, next)\n	{\n		if (next\n			&& next.type === \'AttributeHook\'\n			&& next.namespace === this.namespace)\n		{\n			return;\n		}\n\n		node.removeAttributeNS(this.namespace, this.key);\n	};\n\n	AttributeHook.prototype.type = \'AttributeHook\';\n\n\n\n	// EVENTS\n\n\n	function on(name, options, decoder, createMessage)\n	{\n		function eventHandler(event)\n		{\n			var value = A2(Json.runDecoderValue, decoder, event);\n			if (value.ctor === \'Ok\')\n			{\n				if (options.stopPropagation)\n				{\n					event.stopPropagation();\n				}\n				if (options.preventDefault)\n				{\n					event.preventDefault();\n				}\n				Signal.sendMessage(createMessage(value._0));\n			}\n		}\n		return property(\'on\' + name, eventHandler);\n	}\n\n	function SoftSetHook(value)\n	{\n		if (!(this instanceof SoftSetHook))\n		{\n			return new SoftSetHook(value);\n		}\n\n		this.value = value;\n	}\n\n	SoftSetHook.prototype.hook = function (node, propertyName)\n	{\n		if (node[propertyName] !== this.value)\n		{\n			node[propertyName] = this.value;\n		}\n	};\n\n\n\n	// INTEGRATION WITH ELEMENTS\n\n\n	function ElementWidget(element)\n	{\n		this.element = element;\n	}\n\n	ElementWidget.prototype.type = "Widget";\n\n	ElementWidget.prototype.init = function init()\n	{\n		return Element.render(this.element);\n	};\n\n	ElementWidget.prototype.update = function update(previous, node)\n	{\n		return Element.update(node, previous.element, this.element);\n	};\n\n	function fromElement(element)\n	{\n		return new ElementWidget(element);\n	}\n\n	function toElement(width, height, html)\n	{\n		return A3(Element.newElement, width, height, {\n			ctor: \'Custom\',\n			type: \'evancz/elm-html\',\n			render: render,\n			update: update,\n			model: html\n		});\n	}\n\n\n\n	// RENDER AND UPDATE\n\n\n	function render(model)\n	{\n		var element = Element.createNode(\'div\');\n		element.appendChild(createElement(model));\n		return element;\n	}\n\n	function update(node, oldModel, newModel)\n	{\n		updateAndReplace(node.firstChild, oldModel, newModel);\n		return node;\n	}\n\n	function updateAndReplace(node, oldModel, newModel)\n	{\n		var patches = diff(oldModel, newModel);\n		var newNode = patch(node, patches);\n		return newNode;\n	}\n\n\n\n	// LAZINESS\n\n\n	function lazyRef(fn, a)\n	{\n		function thunk()\n		{\n			return fn(a);\n		}\n		return new Thunk(fn, [a], thunk);\n	}\n\n	function lazyRef2(fn, a, b)\n	{\n		function thunk()\n		{\n			return A2(fn, a, b);\n		}\n		return new Thunk(fn, [a,b], thunk);\n	}\n\n	function lazyRef3(fn, a, b, c)\n	{\n		function thunk()\n		{\n			return A3(fn, a, b, c);\n		}\n		return new Thunk(fn, [a,b,c], thunk);\n	}\n\n	function Thunk(fn, args, thunk)\n	{\n		/* public (used by VirtualDom.js) */\n		this.vnode = null;\n		this.key = undefined;\n\n		/* private */\n		this.fn = fn;\n		this.args = args;\n		this.thunk = thunk;\n	}\n\n	Thunk.prototype.type = "Thunk";\n	Thunk.prototype.render = renderThunk;\n\n	function shouldUpdate(current, previous)\n	{\n		if (current.fn !== previous.fn)\n		{\n			return true;\n		}\n\n		// if it\'s the same function, we know the number of args must match\n		var cargs = current.args;\n		var pargs = previous.args;\n\n		for (var i = cargs.length; i--; )\n		{\n			if (cargs[i] !== pargs[i])\n			{\n				return true;\n			}\n		}\n\n		return false;\n	}\n\n	function renderThunk(previous)\n	{\n		if (previous == null || shouldUpdate(this, previous))\n		{\n			return this.thunk();\n		}\n		else\n		{\n			return previous.vnode;\n		}\n	}\n\n\n	return elm.Native.VirtualDom.values = Elm.Native.VirtualDom.values = {\n		node: node,\n		text: text,\n		on: F4(on),\n\n		property: F2(property),\n		attribute: F2(attribute),\n		attributeNS: F3(attributeNS),\n\n		lazy: F2(lazyRef),\n		lazy2: F3(lazyRef2),\n		lazy3: F4(lazyRef3),\n\n		toElement: F3(toElement),\n		fromElement: fromElement,\n\n		render: createElement,\n		updateAndReplace: updateAndReplace\n	};\n};\n\n},{"virtual-dom/vdom/create-element":6,"virtual-dom/vdom/patch":9,"virtual-dom/vnode/is-vhook":13,"virtual-dom/vnode/vnode":18,"virtual-dom/vnode/vtext":20,"virtual-dom/vtree/diff":22}]},{},[23]);\n\nElm.VirtualDom = Elm.VirtualDom || {};\nElm.VirtualDom.make = function (_elm) {\n   "use strict";\n   _elm.VirtualDom = _elm.VirtualDom || {};\n   if (_elm.VirtualDom.values) return _elm.VirtualDom.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n   $Json$Decode = Elm.Json.Decode.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$VirtualDom = Elm.Native.VirtualDom.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm);\n   var _op = {};\n   var lazy3 = $Native$VirtualDom.lazy3;\n   var lazy2 = $Native$VirtualDom.lazy2;\n   var lazy = $Native$VirtualDom.lazy;\n   var defaultOptions = {stopPropagation: false\n                        ,preventDefault: false};\n   var Options = F2(function (a,b) {\n      return {stopPropagation: a,preventDefault: b};\n   });\n   var onWithOptions = $Native$VirtualDom.on;\n   var on = F3(function (eventName,decoder,toMessage) {\n      return A4($Native$VirtualDom.on,\n      eventName,\n      defaultOptions,\n      decoder,\n      toMessage);\n   });\n   var attributeNS = $Native$VirtualDom.attributeNS;\n   var attribute = $Native$VirtualDom.attribute;\n   var property = $Native$VirtualDom.property;\n   var Property = {ctor: "Property"};\n   var fromElement = $Native$VirtualDom.fromElement;\n   var toElement = $Native$VirtualDom.toElement;\n   var text = $Native$VirtualDom.text;\n   var node = $Native$VirtualDom.node;\n   var Node = {ctor: "Node"};\n   return _elm.VirtualDom.values = {_op: _op\n                                   ,text: text\n                                   ,node: node\n                                   ,toElement: toElement\n                                   ,fromElement: fromElement\n                                   ,property: property\n                                   ,attribute: attribute\n                                   ,attributeNS: attributeNS\n                                   ,on: on\n                                   ,onWithOptions: onWithOptions\n                                   ,defaultOptions: defaultOptions\n                                   ,lazy: lazy\n                                   ,lazy2: lazy2\n                                   ,lazy3: lazy3\n                                   ,Options: Options};\n};\nElm.Html = Elm.Html || {};\nElm.Html.make = function (_elm) {\n   "use strict";\n   _elm.Html = _elm.Html || {};\n   if (_elm.Html.values) return _elm.Html.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var _op = {};\n   var fromElement = $VirtualDom.fromElement;\n   var toElement = $VirtualDom.toElement;\n   var text = $VirtualDom.text;\n   var node = $VirtualDom.node;\n   var body = node("body");\n   var section = node("section");\n   var nav = node("nav");\n   var article = node("article");\n   var aside = node("aside");\n   var h1 = node("h1");\n   var h2 = node("h2");\n   var h3 = node("h3");\n   var h4 = node("h4");\n   var h5 = node("h5");\n   var h6 = node("h6");\n   var header = node("header");\n   var footer = node("footer");\n   var address = node("address");\n   var main$ = node("main");\n   var p = node("p");\n   var hr = node("hr");\n   var pre = node("pre");\n   var blockquote = node("blockquote");\n   var ol = node("ol");\n   var ul = node("ul");\n   var li = node("li");\n   var dl = node("dl");\n   var dt = node("dt");\n   var dd = node("dd");\n   var figure = node("figure");\n   var figcaption = node("figcaption");\n   var div = node("div");\n   var a = node("a");\n   var em = node("em");\n   var strong = node("strong");\n   var small = node("small");\n   var s = node("s");\n   var cite = node("cite");\n   var q = node("q");\n   var dfn = node("dfn");\n   var abbr = node("abbr");\n   var time = node("time");\n   var code = node("code");\n   var $var = node("var");\n   var samp = node("samp");\n   var kbd = node("kbd");\n   var sub = node("sub");\n   var sup = node("sup");\n   var i = node("i");\n   var b = node("b");\n   var u = node("u");\n   var mark = node("mark");\n   var ruby = node("ruby");\n   var rt = node("rt");\n   var rp = node("rp");\n   var bdi = node("bdi");\n   var bdo = node("bdo");\n   var span = node("span");\n   var br = node("br");\n   var wbr = node("wbr");\n   var ins = node("ins");\n   var del = node("del");\n   var img = node("img");\n   var iframe = node("iframe");\n   var embed = node("embed");\n   var object = node("object");\n   var param = node("param");\n   var video = node("video");\n   var audio = node("audio");\n   var source = node("source");\n   var track = node("track");\n   var canvas = node("canvas");\n   var svg = node("svg");\n   var math = node("math");\n   var table = node("table");\n   var caption = node("caption");\n   var colgroup = node("colgroup");\n   var col = node("col");\n   var tbody = node("tbody");\n   var thead = node("thead");\n   var tfoot = node("tfoot");\n   var tr = node("tr");\n   var td = node("td");\n   var th = node("th");\n   var form = node("form");\n   var fieldset = node("fieldset");\n   var legend = node("legend");\n   var label = node("label");\n   var input = node("input");\n   var button = node("button");\n   var select = node("select");\n   var datalist = node("datalist");\n   var optgroup = node("optgroup");\n   var option = node("option");\n   var textarea = node("textarea");\n   var keygen = node("keygen");\n   var output = node("output");\n   var progress = node("progress");\n   var meter = node("meter");\n   var details = node("details");\n   var summary = node("summary");\n   var menuitem = node("menuitem");\n   var menu = node("menu");\n   return _elm.Html.values = {_op: _op\n                             ,node: node\n                             ,text: text\n                             ,toElement: toElement\n                             ,fromElement: fromElement\n                             ,body: body\n                             ,section: section\n                             ,nav: nav\n                             ,article: article\n                             ,aside: aside\n                             ,h1: h1\n                             ,h2: h2\n                             ,h3: h3\n                             ,h4: h4\n                             ,h5: h5\n                             ,h6: h6\n                             ,header: header\n                             ,footer: footer\n                             ,address: address\n                             ,main$: main$\n                             ,p: p\n                             ,hr: hr\n                             ,pre: pre\n                             ,blockquote: blockquote\n                             ,ol: ol\n                             ,ul: ul\n                             ,li: li\n                             ,dl: dl\n                             ,dt: dt\n                             ,dd: dd\n                             ,figure: figure\n                             ,figcaption: figcaption\n                             ,div: div\n                             ,a: a\n                             ,em: em\n                             ,strong: strong\n                             ,small: small\n                             ,s: s\n                             ,cite: cite\n                             ,q: q\n                             ,dfn: dfn\n                             ,abbr: abbr\n                             ,time: time\n                             ,code: code\n                             ,$var: $var\n                             ,samp: samp\n                             ,kbd: kbd\n                             ,sub: sub\n                             ,sup: sup\n                             ,i: i\n                             ,b: b\n                             ,u: u\n                             ,mark: mark\n                             ,ruby: ruby\n                             ,rt: rt\n                             ,rp: rp\n                             ,bdi: bdi\n                             ,bdo: bdo\n                             ,span: span\n                             ,br: br\n                             ,wbr: wbr\n                             ,ins: ins\n                             ,del: del\n                             ,img: img\n                             ,iframe: iframe\n                             ,embed: embed\n                             ,object: object\n                             ,param: param\n                             ,video: video\n                             ,audio: audio\n                             ,source: source\n                             ,track: track\n                             ,canvas: canvas\n                             ,svg: svg\n                             ,math: math\n                             ,table: table\n                             ,caption: caption\n                             ,colgroup: colgroup\n                             ,col: col\n                             ,tbody: tbody\n                             ,thead: thead\n                             ,tfoot: tfoot\n                             ,tr: tr\n                             ,td: td\n                             ,th: th\n                             ,form: form\n                             ,fieldset: fieldset\n                             ,legend: legend\n                             ,label: label\n                             ,input: input\n                             ,button: button\n                             ,select: select\n                             ,datalist: datalist\n                             ,optgroup: optgroup\n                             ,option: option\n                             ,textarea: textarea\n                             ,keygen: keygen\n                             ,output: output\n                             ,progress: progress\n                             ,meter: meter\n                             ,details: details\n                             ,summary: summary\n                             ,menuitem: menuitem\n                             ,menu: menu};\n};\nElm.Html = Elm.Html || {};\nElm.Html.Attributes = Elm.Html.Attributes || {};\nElm.Html.Attributes.make = function (_elm) {\n   "use strict";\n   _elm.Html = _elm.Html || {};\n   _elm.Html.Attributes = _elm.Html.Attributes || {};\n   if (_elm.Html.Attributes.values)\n   return _elm.Html.Attributes.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Json$Encode = Elm.Json.Encode.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $String = Elm.String.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var _op = {};\n   var attribute = $VirtualDom.attribute;\n   var contextmenu = function (value) {\n      return A2(attribute,"contextmenu",value);\n   };\n   var property = $VirtualDom.property;\n   var stringProperty = F2(function (name,string) {\n      return A2(property,name,$Json$Encode.string(string));\n   });\n   var $class = function (name) {\n      return A2(stringProperty,"className",name);\n   };\n   var id = function (name) {\n      return A2(stringProperty,"id",name);\n   };\n   var title = function (name) {\n      return A2(stringProperty,"title",name);\n   };\n   var accesskey = function ($char) {\n      return A2(stringProperty,\n      "accessKey",\n      $String.fromChar($char));\n   };\n   var dir = function (value) {\n      return A2(stringProperty,"dir",value);\n   };\n   var draggable = function (value) {\n      return A2(stringProperty,"draggable",value);\n   };\n   var dropzone = function (value) {\n      return A2(stringProperty,"dropzone",value);\n   };\n   var itemprop = function (value) {\n      return A2(stringProperty,"itemprop",value);\n   };\n   var lang = function (value) {\n      return A2(stringProperty,"lang",value);\n   };\n   var tabindex = function (n) {\n      return A2(stringProperty,"tabIndex",$Basics.toString(n));\n   };\n   var charset = function (value) {\n      return A2(stringProperty,"charset",value);\n   };\n   var content = function (value) {\n      return A2(stringProperty,"content",value);\n   };\n   var httpEquiv = function (value) {\n      return A2(stringProperty,"httpEquiv",value);\n   };\n   var language = function (value) {\n      return A2(stringProperty,"language",value);\n   };\n   var src = function (value) {\n      return A2(stringProperty,"src",value);\n   };\n   var height = function (value) {\n      return A2(stringProperty,"height",$Basics.toString(value));\n   };\n   var width = function (value) {\n      return A2(stringProperty,"width",$Basics.toString(value));\n   };\n   var alt = function (value) {\n      return A2(stringProperty,"alt",value);\n   };\n   var preload = function (value) {\n      return A2(stringProperty,"preload",value);\n   };\n   var poster = function (value) {\n      return A2(stringProperty,"poster",value);\n   };\n   var kind = function (value) {\n      return A2(stringProperty,"kind",value);\n   };\n   var srclang = function (value) {\n      return A2(stringProperty,"srclang",value);\n   };\n   var sandbox = function (value) {\n      return A2(stringProperty,"sandbox",value);\n   };\n   var srcdoc = function (value) {\n      return A2(stringProperty,"srcdoc",value);\n   };\n   var type$ = function (value) {\n      return A2(stringProperty,"type",value);\n   };\n   var value = function (value) {\n      return A2(stringProperty,"value",value);\n   };\n   var placeholder = function (value) {\n      return A2(stringProperty,"placeholder",value);\n   };\n   var accept = function (value) {\n      return A2(stringProperty,"accept",value);\n   };\n   var acceptCharset = function (value) {\n      return A2(stringProperty,"acceptCharset",value);\n   };\n   var action = function (value) {\n      return A2(stringProperty,"action",value);\n   };\n   var autocomplete = function (bool) {\n      return A2(stringProperty,"autocomplete",bool ? "on" : "off");\n   };\n   var autosave = function (value) {\n      return A2(stringProperty,"autosave",value);\n   };\n   var enctype = function (value) {\n      return A2(stringProperty,"enctype",value);\n   };\n   var formaction = function (value) {\n      return A2(stringProperty,"formAction",value);\n   };\n   var list = function (value) {\n      return A2(stringProperty,"list",value);\n   };\n   var minlength = function (n) {\n      return A2(stringProperty,"minLength",$Basics.toString(n));\n   };\n   var maxlength = function (n) {\n      return A2(stringProperty,"maxLength",$Basics.toString(n));\n   };\n   var method = function (value) {\n      return A2(stringProperty,"method",value);\n   };\n   var name = function (value) {\n      return A2(stringProperty,"name",value);\n   };\n   var pattern = function (value) {\n      return A2(stringProperty,"pattern",value);\n   };\n   var size = function (n) {\n      return A2(stringProperty,"size",$Basics.toString(n));\n   };\n   var $for = function (value) {\n      return A2(stringProperty,"htmlFor",value);\n   };\n   var form = function (value) {\n      return A2(stringProperty,"form",value);\n   };\n   var max = function (value) {\n      return A2(stringProperty,"max",value);\n   };\n   var min = function (value) {\n      return A2(stringProperty,"min",value);\n   };\n   var step = function (n) {\n      return A2(stringProperty,"step",n);\n   };\n   var cols = function (n) {\n      return A2(stringProperty,"cols",$Basics.toString(n));\n   };\n   var rows = function (n) {\n      return A2(stringProperty,"rows",$Basics.toString(n));\n   };\n   var wrap = function (value) {\n      return A2(stringProperty,"wrap",value);\n   };\n   var usemap = function (value) {\n      return A2(stringProperty,"useMap",value);\n   };\n   var shape = function (value) {\n      return A2(stringProperty,"shape",value);\n   };\n   var coords = function (value) {\n      return A2(stringProperty,"coords",value);\n   };\n   var challenge = function (value) {\n      return A2(stringProperty,"challenge",value);\n   };\n   var keytype = function (value) {\n      return A2(stringProperty,"keytype",value);\n   };\n   var align = function (value) {\n      return A2(stringProperty,"align",value);\n   };\n   var cite = function (value) {\n      return A2(stringProperty,"cite",value);\n   };\n   var href = function (value) {\n      return A2(stringProperty,"href",value);\n   };\n   var target = function (value) {\n      return A2(stringProperty,"target",value);\n   };\n   var downloadAs = function (value) {\n      return A2(stringProperty,"download",value);\n   };\n   var hreflang = function (value) {\n      return A2(stringProperty,"hreflang",value);\n   };\n   var media = function (value) {\n      return A2(stringProperty,"media",value);\n   };\n   var ping = function (value) {\n      return A2(stringProperty,"ping",value);\n   };\n   var rel = function (value) {\n      return A2(stringProperty,"rel",value);\n   };\n   var datetime = function (value) {\n      return A2(stringProperty,"datetime",value);\n   };\n   var pubdate = function (value) {\n      return A2(stringProperty,"pubdate",value);\n   };\n   var start = function (n) {\n      return A2(stringProperty,"start",$Basics.toString(n));\n   };\n   var colspan = function (n) {\n      return A2(stringProperty,"colSpan",$Basics.toString(n));\n   };\n   var headers = function (value) {\n      return A2(stringProperty,"headers",value);\n   };\n   var rowspan = function (n) {\n      return A2(stringProperty,"rowSpan",$Basics.toString(n));\n   };\n   var scope = function (value) {\n      return A2(stringProperty,"scope",value);\n   };\n   var manifest = function (value) {\n      return A2(stringProperty,"manifest",value);\n   };\n   var boolProperty = F2(function (name,bool) {\n      return A2(property,name,$Json$Encode.bool(bool));\n   });\n   var hidden = function (bool) {\n      return A2(boolProperty,"hidden",bool);\n   };\n   var contenteditable = function (bool) {\n      return A2(boolProperty,"contentEditable",bool);\n   };\n   var spellcheck = function (bool) {\n      return A2(boolProperty,"spellcheck",bool);\n   };\n   var async = function (bool) {\n      return A2(boolProperty,"async",bool);\n   };\n   var defer = function (bool) {\n      return A2(boolProperty,"defer",bool);\n   };\n   var scoped = function (bool) {\n      return A2(boolProperty,"scoped",bool);\n   };\n   var autoplay = function (bool) {\n      return A2(boolProperty,"autoplay",bool);\n   };\n   var controls = function (bool) {\n      return A2(boolProperty,"controls",bool);\n   };\n   var loop = function (bool) {\n      return A2(boolProperty,"loop",bool);\n   };\n   var $default = function (bool) {\n      return A2(boolProperty,"default",bool);\n   };\n   var seamless = function (bool) {\n      return A2(boolProperty,"seamless",bool);\n   };\n   var checked = function (bool) {\n      return A2(boolProperty,"checked",bool);\n   };\n   var selected = function (bool) {\n      return A2(boolProperty,"selected",bool);\n   };\n   var autofocus = function (bool) {\n      return A2(boolProperty,"autofocus",bool);\n   };\n   var disabled = function (bool) {\n      return A2(boolProperty,"disabled",bool);\n   };\n   var multiple = function (bool) {\n      return A2(boolProperty,"multiple",bool);\n   };\n   var novalidate = function (bool) {\n      return A2(boolProperty,"noValidate",bool);\n   };\n   var readonly = function (bool) {\n      return A2(boolProperty,"readOnly",bool);\n   };\n   var required = function (bool) {\n      return A2(boolProperty,"required",bool);\n   };\n   var ismap = function (value) {\n      return A2(boolProperty,"isMap",value);\n   };\n   var download = function (bool) {\n      return A2(boolProperty,"download",bool);\n   };\n   var reversed = function (bool) {\n      return A2(boolProperty,"reversed",bool);\n   };\n   var classList = function (list) {\n      return $class(A2($String.join,\n      " ",\n      A2($List.map,$Basics.fst,A2($List.filter,$Basics.snd,list))));\n   };\n   var style = function (props) {\n      return A2(property,\n      "style",\n      $Json$Encode.object(A2($List.map,\n      function (_p0) {\n         var _p1 = _p0;\n         return {ctor: "_Tuple2"\n                ,_0: _p1._0\n                ,_1: $Json$Encode.string(_p1._1)};\n      },\n      props)));\n   };\n   var key = function (k) {    return A2(stringProperty,"key",k);};\n   return _elm.Html.Attributes.values = {_op: _op\n                                        ,key: key\n                                        ,style: style\n                                        ,$class: $class\n                                        ,classList: classList\n                                        ,id: id\n                                        ,title: title\n                                        ,hidden: hidden\n                                        ,type$: type$\n                                        ,value: value\n                                        ,checked: checked\n                                        ,placeholder: placeholder\n                                        ,selected: selected\n                                        ,accept: accept\n                                        ,acceptCharset: acceptCharset\n                                        ,action: action\n                                        ,autocomplete: autocomplete\n                                        ,autofocus: autofocus\n                                        ,autosave: autosave\n                                        ,disabled: disabled\n                                        ,enctype: enctype\n                                        ,formaction: formaction\n                                        ,list: list\n                                        ,maxlength: maxlength\n                                        ,minlength: minlength\n                                        ,method: method\n                                        ,multiple: multiple\n                                        ,name: name\n                                        ,novalidate: novalidate\n                                        ,pattern: pattern\n                                        ,readonly: readonly\n                                        ,required: required\n                                        ,size: size\n                                        ,$for: $for\n                                        ,form: form\n                                        ,max: max\n                                        ,min: min\n                                        ,step: step\n                                        ,cols: cols\n                                        ,rows: rows\n                                        ,wrap: wrap\n                                        ,href: href\n                                        ,target: target\n                                        ,download: download\n                                        ,downloadAs: downloadAs\n                                        ,hreflang: hreflang\n                                        ,media: media\n                                        ,ping: ping\n                                        ,rel: rel\n                                        ,ismap: ismap\n                                        ,usemap: usemap\n                                        ,shape: shape\n                                        ,coords: coords\n                                        ,src: src\n                                        ,height: height\n                                        ,width: width\n                                        ,alt: alt\n                                        ,autoplay: autoplay\n                                        ,controls: controls\n                                        ,loop: loop\n                                        ,preload: preload\n                                        ,poster: poster\n                                        ,$default: $default\n                                        ,kind: kind\n                                        ,srclang: srclang\n                                        ,sandbox: sandbox\n                                        ,seamless: seamless\n                                        ,srcdoc: srcdoc\n                                        ,reversed: reversed\n                                        ,start: start\n                                        ,align: align\n                                        ,colspan: colspan\n                                        ,rowspan: rowspan\n                                        ,headers: headers\n                                        ,scope: scope\n                                        ,async: async\n                                        ,charset: charset\n                                        ,content: content\n                                        ,defer: defer\n                                        ,httpEquiv: httpEquiv\n                                        ,language: language\n                                        ,scoped: scoped\n                                        ,accesskey: accesskey\n                                        ,contenteditable: contenteditable\n                                        ,contextmenu: contextmenu\n                                        ,dir: dir\n                                        ,draggable: draggable\n                                        ,dropzone: dropzone\n                                        ,itemprop: itemprop\n                                        ,lang: lang\n                                        ,spellcheck: spellcheck\n                                        ,tabindex: tabindex\n                                        ,challenge: challenge\n                                        ,keytype: keytype\n                                        ,cite: cite\n                                        ,datetime: datetime\n                                        ,pubdate: pubdate\n                                        ,manifest: manifest\n                                        ,property: property\n                                        ,attribute: attribute};\n};\nElm.StartApp = Elm.StartApp || {};\nElm.StartApp.make = function (_elm) {\n   "use strict";\n   _elm.StartApp = _elm.StartApp || {};\n   if (_elm.StartApp.values) return _elm.StartApp.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $Effects = Elm.Effects.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $Task = Elm.Task.make(_elm);\n   var _op = {};\n   var start = function (config) {\n      var updateStep = F2(function (action,_p0) {\n         var _p1 = _p0;\n         var _p2 = A2(config.update,action,_p1._0);\n         var newModel = _p2._0;\n         var additionalEffects = _p2._1;\n         return {ctor: "_Tuple2"\n                ,_0: newModel\n                ,_1: $Effects.batch(_U.list([_p1._1,additionalEffects]))};\n      });\n      var update = F2(function (actions,_p3) {\n         var _p4 = _p3;\n         return A3($List.foldl,\n         updateStep,\n         {ctor: "_Tuple2",_0: _p4._0,_1: $Effects.none},\n         actions);\n      });\n      var messages = $Signal.mailbox(_U.list([]));\n      var singleton = function (action) {\n         return _U.list([action]);\n      };\n      var address = A2($Signal.forwardTo,messages.address,singleton);\n      var inputs = $Signal.mergeMany(A2($List._op["::"],\n      messages.signal,\n      A2($List.map,$Signal.map(singleton),config.inputs)));\n      var effectsAndModel = A3($Signal.foldp,\n      update,\n      config.init,\n      inputs);\n      var model = A2($Signal.map,$Basics.fst,effectsAndModel);\n      return {html: A2($Signal.map,config.view(address),model)\n             ,model: model\n             ,tasks: A2($Signal.map,\n             function (_p5) {\n                return A2($Effects.toTask,messages.address,$Basics.snd(_p5));\n             },\n             effectsAndModel)};\n   };\n   var App = F3(function (a,b,c) {\n      return {html: a,model: b,tasks: c};\n   });\n   var Config = F4(function (a,b,c,d) {\n      return {init: a,update: b,view: c,inputs: d};\n   });\n   return _elm.StartApp.values = {_op: _op\n                                 ,start: start\n                                 ,Config: Config\n                                 ,App: App};\n};\nElm.Main = Elm.Main || {};\nElm.Main.make = function (_elm) {\n   "use strict";\n   _elm.Main = _elm.Main || {};\n   if (_elm.Main.values) return _elm.Main.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $Effects = Elm.Effects.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Html$Attributes = Elm.Html.Attributes.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $StartApp = Elm.StartApp.make(_elm),\n   $Transit = Elm.Transit.make(_elm),\n   $TransitStyle = Elm.TransitStyle.make(_elm);\n   var _op = {};\n   var jobs = Elm.Native.Port.make(_elm).inboundSignal("jobs",\n   "List Main.Job",\n   function (v) {\n      return typeof v === "object" && v instanceof Array ? Elm.Native.List.make(_elm).fromArray(v.map(function (v) {\n         return typeof v === "object" && "displayName" in v && "duration" in v && "estimatedDuration" in v && "fullDisplayName" in v && "image" in v && "number" in v && "published" in v && "formattedPublished" in v && "result" in v && "timestamp" in v && "title" in v && "culprits" in v ? {_: {}\n                                                                                                                                                                                                                                                                                                 ,displayName: typeof v.displayName === "string" || typeof v.displayName === "object" && v.displayName instanceof String ? v.displayName : _U.badPort("a string",\n                                                                                                                                                                                                                                                                                                 v.displayName)\n                                                                                                                                                                                                                                                                                                 ,duration: typeof v.duration === "number" && isFinite(v.duration) && Math.floor(v.duration) === v.duration ? v.duration : _U.badPort("an integer",\n                                                                                                                                                                                                                                                                                                 v.duration)\n                                                                                                                                                                                                                                                                                                 ,estimatedDuration: typeof v.estimatedDuration === "number" && isFinite(v.estimatedDuration) && Math.floor(v.estimatedDuration) === v.estimatedDuration ? v.estimatedDuration : _U.badPort("an integer",\n                                                                                                                                                                                                                                                                                                 v.estimatedDuration)\n                                                                                                                                                                                                                                                                                                 ,fullDisplayName: typeof v.fullDisplayName === "string" || typeof v.fullDisplayName === "object" && v.fullDisplayName instanceof String ? v.fullDisplayName : _U.badPort("a string",\n                                                                                                                                                                                                                                                                                                 v.fullDisplayName)\n                                                                                                                                                                                                                                                                                                 ,image: typeof v.image === "string" || typeof v.image === "object" && v.image instanceof String ? v.image : _U.badPort("a string",\n                                                                                                                                                                                                                                                                                                 v.image)\n                                                                                                                                                                                                                                                                                                 ,number: typeof v.number === "number" && isFinite(v.number) && Math.floor(v.number) === v.number ? v.number : _U.badPort("an integer",\n                                                                                                                                                                                                                                                                                                 v.number)\n                                                                                                                                                                                                                                                                                                 ,published: typeof v.published === "string" || typeof v.published === "object" && v.published instanceof String ? v.published : _U.badPort("a string",\n                                                                                                                                                                                                                                                                                                 v.published)\n                                                                                                                                                                                                                                                                                                 ,formattedPublished: typeof v.formattedPublished === "string" || typeof v.formattedPublished === "object" && v.formattedPublished instanceof String ? v.formattedPublished : _U.badPort("a string",\n                                                                                                                                                                                                                                                                                                 v.formattedPublished)\n                                                                                                                                                                                                                                                                                                 ,result: v.result === null ? Elm.Maybe.make(_elm).Nothing : Elm.Maybe.make(_elm).Just(typeof v.result === "string" || typeof v.result === "object" && v.result instanceof String ? v.result : _U.badPort("a string",\n                                                                                                                                                                                                                                                                                                 v.result))\n                                                                                                                                                                                                                                                                                                 ,timestamp: typeof v.timestamp === "number" && isFinite(v.timestamp) && Math.floor(v.timestamp) === v.timestamp ? v.timestamp : _U.badPort("an integer",\n                                                                                                                                                                                                                                                                                                 v.timestamp)\n                                                                                                                                                                                                                                                                                                 ,title: typeof v.title === "string" || typeof v.title === "object" && v.title instanceof String ? v.title : _U.badPort("a string",\n                                                                                                                                                                                                                                                                                                 v.title)\n                                                                                                                                                                                                                                                                                                 ,culprits: typeof v.culprits === "object" && v.culprits instanceof Array ? Elm.Native.List.make(_elm).fromArray(v.culprits.map(function (v) {\n                                                                                                                                                                                                                                                                                                    return typeof v === "string" || typeof v === "object" && v instanceof String ? v : _U.badPort("a string",\n                                                                                                                                                                                                                                                                                                    v);\n                                                                                                                                                                                                                                                                                                 })) : _U.badPort("an array",\n                                                                                                                                                                                                                                                                                                 v.culprits)} : _U.badPort("an object with fields `displayName`, `duration`, `estimatedDuration`, `fullDisplayName`, `image`, `number`, `published`, `formattedPublished`, `result`, `timestamp`, `title`, `culprits`",\n         v);\n      })) : _U.badPort("an array",v);\n   });\n   _op["=>"] = F2(function (v0,v1) {\n      return {ctor: "_Tuple2",_0: v0,_1: v1};\n   });\n   var completedBuild = function (job) {\n      var culpritImage = function (name) {\n         return A2($Basics._op["++"],\n         "images/culprits/",\n         A2($Basics._op["++"],name,".jpg"));\n      };\n      var culprit = function (e) {\n         return A2($Html.li,\n         _U.list([]),\n         _U.list([A2($Html.img,\n         _U.list([$Html$Attributes.src(culpritImage(e))\n                 ,$Html$Attributes.$class("card__avatar")\n                 ,$Html$Attributes.style(_U.list([A2(_op["=>"],"width","50px")\n                                                 ,A2(_op["=>"],"height","50px")]))]),\n         _U.list([]))]));\n      };\n      var status = A2($Maybe.withDefault,"",job.result);\n      var statusImage = _U.eq(status,\n      "SUCCESS") ? "images/tick.png" : "images/cross.png";\n      return A2($Html.li,\n      _U.list([$Html$Attributes.$class("card")]),\n      _U.list([A2($Html.div,\n      _U.list([]),\n      _U.list([A2($Html.img,\n              _U.list([$Html$Attributes.src(job.image)\n                      ,$Html$Attributes.$class("card__avatar")]),\n              _U.list([]))\n              ,A2($Html.h3,\n              _U.list([$Html$Attributes.$class("card__name")]),\n              _U.list([$Html.text(job.displayName)]))\n              ,A2($Html.img,\n              _U.list([$Html$Attributes.src(statusImage)\n                      ,$Html$Attributes.$class("card__status")]),\n              _U.list([]))\n              ,A2($Html.ul,\n              _U.list([$Html$Attributes.$class("list l-flex card__culprits")]),\n              A2($List.map,culprit,job.culprits))\n              ,A2($Html.p,\n              _U.list([$Html$Attributes.$class("card__footer")]),\n              _U.list([$Html.text(job.formattedPublished)]))]))]));\n   };\n   var buildingBuild = F2(function (transition,job) {\n      return A2($Html.li,\n      _U.list([$Html$Attributes.$class("card")\n              ,$Html$Attributes.style(A2($TransitStyle.fadeSlideLeft,\n              5000,\n              transition))]),\n      _U.list([A2($Html.img,\n              _U.list([$Html$Attributes.src(job.image)\n                      ,$Html$Attributes.$class("card__avatar")]),\n              _U.list([]))\n              ,A2($Html.h3,\n              _U.list([$Html$Attributes.$class("card__name")]),\n              _U.list([$Html.text(job.displayName)]))\n              ,A2($Html.div,\n              _U.list([$Html$Attributes.$class("progress progress-striped active")]),\n              _U.list([A2($Html.div,\n              _U.list([$Html$Attributes.$class("progress-bar")\n                      ,$Html$Attributes.style(_U.list([A2(_op["=>"],\n                      "width",\n                      "100%")]))]),\n              _U.list([]))]))\n              ,A2($Html.p,\n              _U.list([$Html$Attributes.$class("card__footer")]),\n              _U.list([$Html.text(job.formattedPublished)]))]));\n   });\n   var view = F2(function (address,model) {\n      var isNotBuildingPanel = A2($Html.div,\n      _U.list([$Html$Attributes.$class("leeroy-no-builds")]),\n      _U.list([$Html.text("Jenkins gonna break yo builds!")]));\n      var inProgress = function (e) {\n         var _p0 = e.result;\n         if (_p0.ctor === "Nothing") {\n               return true;\n            } else {\n               return false;\n            }\n      };\n      var filteredBuilding = A2($List.filter,inProgress,model.jobs);\n      var building = A2($List.map,\n      buildingBuild(model.transition),\n      filteredBuilding);\n      var isBuildingPanel = A2($Html.ul,\n      _U.list([$Html$Attributes.$class("l-flex l-flex--around leeroy leeroy--building")]),\n      building);\n      var isBuilding = _U.cmp($List.length(filteredBuilding),\n      0) > 0 ? true : false;\n      var buildingPanel = isBuilding ? isBuildingPanel : isNotBuildingPanel;\n      var isFinished = function (e) {\n         var _p1 = e.result;\n         if (_p1.ctor === "Just") {\n               return true;\n            } else {\n               return false;\n            }\n      };\n      var filteredCompleted = A2($List.filter,isFinished,model.jobs);\n      var completed = A2($List.map,completedBuild,filteredCompleted);\n      var completedJobAmount = $Basics.toString($List.length(filteredCompleted));\n      var title = A2($Basics._op["++"],\n      "Last ",\n      A2($Basics._op["++"],completedJobAmount," builds"));\n      return A2($Html.div,\n      _U.list([$Html$Attributes.$class("l-panels")]),\n      _U.list([A2($Html.div,\n              _U.list([$Html$Attributes.$class("l-panel l-panel--dark l-panel--fluid")]),\n              _U.list([A2($Html.div,\n              _U.list([$Html$Attributes.$class("l-inner")]),\n              _U.list([A2($Html.h1,\n                      _U.list([$Html$Attributes.$class("heading")]),\n                      _U.list([A2($Html.span,\n                      _U.list([$Html$Attributes.$class("l-inner")]),\n                      _U.list([A2($Html.img,\n                              _U.list([$Html$Attributes.src("images/lego.png")]),\n                              _U.list([]))\n                              ,$Html.text(" Building")]))]))\n                      ,buildingPanel]))]))\n              ,A2($Html.div,\n              _U.list([$Html$Attributes.$class("l-panel l-panel--fluid")]),\n              _U.list([A2($Html.div,\n              _U.list([$Html$Attributes.$class("l-inner")]),\n              _U.list([A2($Html.h1,\n                      _U.list([$Html$Attributes.$class("heading")]),\n                      _U.list([A2($Html.span,\n                      _U.list([$Html$Attributes.$class("l-inner")]),\n                      _U.list([$Html.text(title)]))]))\n                      ,A2($Html.ul,\n                      _U.list([$Html$Attributes.$class("l-flex leeroy")]),\n                      completed)]))]))]));\n   });\n   var update = F2(function (action,model) {\n      var _p2 = action;\n      switch (_p2.ctor)\n      {case "NoOp": return {ctor: "_Tuple2"\n                           ,_0: model\n                           ,_1: $Effects.none};\n         case "AddJob": return {ctor: "_Tuple2"\n                               ,_0: _U.update(model,\n                               {jobs: A2($List._op["::"],_p2._0,model.jobs)})\n                               ,_1: $Effects.none};\n         default: return {ctor: "_Tuple2"\n                         ,_0: _U.update(model,{jobs: _p2._0})\n                         ,_1: $Effects.none};}\n   });\n   var SetJobs = function (a) {\n      return {ctor: "SetJobs",_0: a};\n   };\n   var setJobs = A2($Signal.map,SetJobs,jobs);\n   var AddJob = function (a) {    return {ctor: "AddJob",_0: a};};\n   var NoOp = {ctor: "NoOp"};\n   var emptyModel = {jobs: _U.list([])\n                    ,transition: $Transit.initial};\n   var app = $StartApp.start({init: {ctor: "_Tuple2"\n                                    ,_0: emptyModel\n                                    ,_1: $Effects.none}\n                             ,update: update\n                             ,view: view\n                             ,inputs: _U.list([setJobs])});\n   var main = app.html;\n   var Job = function (a) {\n      return function (b) {\n         return function (c) {\n            return function (d) {\n               return function (e) {\n                  return function (f) {\n                     return function (g) {\n                        return function (h) {\n                           return function (i) {\n                              return function (j) {\n                                 return function (k) {\n                                    return function (l) {\n                                       return {displayName: a\n                                              ,duration: b\n                                              ,estimatedDuration: c\n                                              ,fullDisplayName: d\n                                              ,image: e\n                                              ,number: f\n                                              ,published: g\n                                              ,formattedPublished: h\n                                              ,result: i\n                                              ,timestamp: j\n                                              ,title: k\n                                              ,culprits: l};\n                                    };\n                                 };\n                              };\n                           };\n                        };\n                     };\n                  };\n               };\n            };\n         };\n      };\n   };\n   return _elm.Main.values = {_op: _op\n                             ,Job: Job\n                             ,emptyModel: emptyModel\n                             ,NoOp: NoOp\n                             ,AddJob: AddJob\n                             ,SetJobs: SetJobs\n                             ,update: update\n                             ,completedBuild: completedBuild\n                             ,buildingBuild: buildingBuild\n                             ,view: view\n                             ,setJobs: setJobs\n                             ,app: app\n                             ,main: main};\n};\n\nmodule.exports = Elm;//@ sourceMappingURL=data:application/json;base64,');
},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "32941d6330044744c02493835b799e90.svg";//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Jvb3RzdHJhcC1zYXNzL3ZlbmRvci9hc3NldHMvZm9udHMvYm9vdHN0cmFwL2dseXBoaWNvbnMtaGFsZmxpbmdzLXJlZ3VsYXIuc3ZnPzg2OWYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNDAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIzMjk0MWQ2MzMwMDQ0NzQ0YzAyNDkzODM1Yjc5OWU5MC5zdmdcIjtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9ib290c3RyYXAtc2Fzcy92ZW5kb3IvYXNzZXRzL2ZvbnRzL2Jvb3RzdHJhcC9nbHlwaGljb25zLWhhbGZsaW5ncy1yZWd1bGFyLnN2Z1xuICoqIG1vZHVsZSBpZCA9IDQwXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "e49d52e74b7689a0727def99da31f3eb.ttf";//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Jvb3RzdHJhcC1zYXNzL3ZlbmRvci9hc3NldHMvZm9udHMvYm9vdHN0cmFwL2dseXBoaWNvbnMtaGFsZmxpbmdzLXJlZ3VsYXIudHRmP2VkNTIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNDEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJlNDlkNTJlNzRiNzY4OWEwNzI3ZGVmOTlkYTMxZjNlYi50dGZcIjtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9ib290c3RyYXAtc2Fzcy92ZW5kb3IvYXNzZXRzL2ZvbnRzL2Jvb3RzdHJhcC9nbHlwaGljb25zLWhhbGZsaW5ncy1yZWd1bGFyLnR0ZlxuICoqIG1vZHVsZSBpZCA9IDQxXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "68ed1dac06bf0409c18ae7bc62889170.woff";//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Jvb3RzdHJhcC1zYXNzL3ZlbmRvci9hc3NldHMvZm9udHMvYm9vdHN0cmFwL2dseXBoaWNvbnMtaGFsZmxpbmdzLXJlZ3VsYXIud29mZj9mMThjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjQyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiNjhlZDFkYWMwNmJmMDQwOWMxOGFlN2JjNjI4ODkxNzAud29mZlwiO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2Jvb3RzdHJhcC1zYXNzL3ZlbmRvci9hc3NldHMvZm9udHMvYm9vdHN0cmFwL2dseXBoaWNvbnMtaGFsZmxpbmdzLXJlZ3VsYXIud29mZlxuICoqIG1vZHVsZSBpZCA9IDQyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n	/** Detect free variables */\n	var freeExports = typeof exports == 'object' && exports &&\n		!exports.nodeType && exports;\n	var freeModule = typeof module == 'object' && module &&\n		!module.nodeType && module;\n	var freeGlobal = typeof global == 'object' && global;\n	if (\n		freeGlobal.global === freeGlobal ||\n		freeGlobal.window === freeGlobal ||\n		freeGlobal.self === freeGlobal\n	) {\n		root = freeGlobal;\n	}\n\n	/**\n	 * The `punycode` object.\n	 * @name punycode\n	 * @type Object\n	 */\n	var punycode,\n\n	/** Highest positive signed 32-bit float value */\n	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n	/** Bootstring parameters */\n	base = 36,\n	tMin = 1,\n	tMax = 26,\n	skew = 38,\n	damp = 700,\n	initialBias = 72,\n	initialN = 128, // 0x80\n	delimiter = '-', // '\\x2D'\n\n	/** Regular expressions */\n	regexPunycode = /^xn--/,\n	regexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n	regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n	/** Error messages */\n	errors = {\n		'overflow': 'Overflow: input needs wider integers to process',\n		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n		'invalid-input': 'Invalid input'\n	},\n\n	/** Convenience shortcuts */\n	baseMinusTMin = base - tMin,\n	floor = Math.floor,\n	stringFromCharCode = String.fromCharCode,\n\n	/** Temporary variable */\n	key;\n\n	/*--------------------------------------------------------------------------*/\n\n	/**\n	 * A generic error utility function.\n	 * @private\n	 * @param {String} type The error type.\n	 * @returns {Error} Throws a `RangeError` with the applicable error message.\n	 */\n	function error(type) {\n		throw RangeError(errors[type]);\n	}\n\n	/**\n	 * A generic `Array#map` utility function.\n	 * @private\n	 * @param {Array} array The array to iterate over.\n	 * @param {Function} callback The function that gets called for every array\n	 * item.\n	 * @returns {Array} A new array of values returned by the callback function.\n	 */\n	function map(array, fn) {\n		var length = array.length;\n		var result = [];\n		while (length--) {\n			result[length] = fn(array[length]);\n		}\n		return result;\n	}\n\n	/**\n	 * A simple `Array#map`-like wrapper to work with domain name strings or email\n	 * addresses.\n	 * @private\n	 * @param {String} domain The domain name or email address.\n	 * @param {Function} callback The function that gets called for every\n	 * character.\n	 * @returns {Array} A new string of characters returned by the callback\n	 * function.\n	 */\n	function mapDomain(string, fn) {\n		var parts = string.split('@');\n		var result = '';\n		if (parts.length > 1) {\n			// In email addresses, only the domain name should be punycoded. Leave\n			// the local part (i.e. everything up to `@`) intact.\n			result = parts[0] + '@';\n			string = parts[1];\n		}\n		// Avoid `split(regex)` for IE8 compatibility. See #17.\n		string = string.replace(regexSeparators, '\\x2E');\n		var labels = string.split('.');\n		var encoded = map(labels, fn).join('.');\n		return result + encoded;\n	}\n\n	/**\n	 * Creates an array containing the numeric code points of each Unicode\n	 * character in the string. While JavaScript uses UCS-2 internally,\n	 * this function will convert a pair of surrogate halves (each of which\n	 * UCS-2 exposes as separate characters) into a single code point,\n	 * matching UTF-16.\n	 * @see `punycode.ucs2.encode`\n	 * @see <https://mathiasbynens.be/notes/javascript-encoding>\n	 * @memberOf punycode.ucs2\n	 * @name decode\n	 * @param {String} string The Unicode input string (UCS-2).\n	 * @returns {Array} The new array of code points.\n	 */\n	function ucs2decode(string) {\n		var output = [],\n		    counter = 0,\n		    length = string.length,\n		    value,\n		    extra;\n		while (counter < length) {\n			value = string.charCodeAt(counter++);\n			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n				// high surrogate, and there is a next character\n				extra = string.charCodeAt(counter++);\n				if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n				} else {\n					// unmatched surrogate; only append this code unit, in case the next\n					// code unit is the high surrogate of a surrogate pair\n					output.push(value);\n					counter--;\n				}\n			} else {\n				output.push(value);\n			}\n		}\n		return output;\n	}\n\n	/**\n	 * Creates a string based on an array of numeric code points.\n	 * @see `punycode.ucs2.decode`\n	 * @memberOf punycode.ucs2\n	 * @name encode\n	 * @param {Array} codePoints The array of numeric code points.\n	 * @returns {String} The new Unicode string (UCS-2).\n	 */\n	function ucs2encode(array) {\n		return map(array, function(value) {\n			var output = '';\n			if (value > 0xFFFF) {\n				value -= 0x10000;\n				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n				value = 0xDC00 | value & 0x3FF;\n			}\n			output += stringFromCharCode(value);\n			return output;\n		}).join('');\n	}\n\n	/**\n	 * Converts a basic code point into a digit/integer.\n	 * @see `digitToBasic()`\n	 * @private\n	 * @param {Number} codePoint The basic numeric code point value.\n	 * @returns {Number} The numeric value of a basic code point (for use in\n	 * representing integers) in the range `0` to `base - 1`, or `base` if\n	 * the code point does not represent a value.\n	 */\n	function basicToDigit(codePoint) {\n		if (codePoint - 48 < 10) {\n			return codePoint - 22;\n		}\n		if (codePoint - 65 < 26) {\n			return codePoint - 65;\n		}\n		if (codePoint - 97 < 26) {\n			return codePoint - 97;\n		}\n		return base;\n	}\n\n	/**\n	 * Converts a digit/integer into a basic code point.\n	 * @see `basicToDigit()`\n	 * @private\n	 * @param {Number} digit The numeric value of a basic code point.\n	 * @returns {Number} The basic code point whose value (when used for\n	 * representing integers) is `digit`, which needs to be in the range\n	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n	 * used; else, the lowercase form is used. The behavior is undefined\n	 * if `flag` is non-zero and `digit` has no uppercase form.\n	 */\n	function digitToBasic(digit, flag) {\n		//  0..25 map to ASCII a..z or A..Z\n		// 26..35 map to ASCII 0..9\n		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n	}\n\n	/**\n	 * Bias adaptation function as per section 3.4 of RFC 3492.\n	 * http://tools.ietf.org/html/rfc3492#section-3.4\n	 * @private\n	 */\n	function adapt(delta, numPoints, firstTime) {\n		var k = 0;\n		delta = firstTime ? floor(delta / damp) : delta >> 1;\n		delta += floor(delta / numPoints);\n		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n			delta = floor(delta / baseMinusTMin);\n		}\n		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n	}\n\n	/**\n	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n	 * symbols.\n	 * @memberOf punycode\n	 * @param {String} input The Punycode string of ASCII-only symbols.\n	 * @returns {String} The resulting string of Unicode symbols.\n	 */\n	function decode(input) {\n		// Don't use UCS-2\n		var output = [],\n		    inputLength = input.length,\n		    out,\n		    i = 0,\n		    n = initialN,\n		    bias = initialBias,\n		    basic,\n		    j,\n		    index,\n		    oldi,\n		    w,\n		    k,\n		    digit,\n		    t,\n		    /** Cached calculation results */\n		    baseMinusT;\n\n		// Handle the basic code points: let `basic` be the number of input code\n		// points before the last delimiter, or `0` if there is none, then copy\n		// the first basic code points to the output.\n\n		basic = input.lastIndexOf(delimiter);\n		if (basic < 0) {\n			basic = 0;\n		}\n\n		for (j = 0; j < basic; ++j) {\n			// if it's not a basic code point\n			if (input.charCodeAt(j) >= 0x80) {\n				error('not-basic');\n			}\n			output.push(input.charCodeAt(j));\n		}\n\n		// Main decoding loop: start just after the last delimiter if any basic code\n		// points were copied; start at the beginning otherwise.\n\n		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n			// `index` is the index of the next character to be consumed.\n			// Decode a generalized variable-length integer into `delta`,\n			// which gets added to `i`. The overflow checking is easier\n			// if we increase `i` as we go, then subtract off its starting\n			// value at the end to obtain `delta`.\n			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n				if (index >= inputLength) {\n					error('invalid-input');\n				}\n\n				digit = basicToDigit(input.charCodeAt(index++));\n\n				if (digit >= base || digit > floor((maxInt - i) / w)) {\n					error('overflow');\n				}\n\n				i += digit * w;\n				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n				if (digit < t) {\n					break;\n				}\n\n				baseMinusT = base - t;\n				if (w > floor(maxInt / baseMinusT)) {\n					error('overflow');\n				}\n\n				w *= baseMinusT;\n\n			}\n\n			out = output.length + 1;\n			bias = adapt(i - oldi, out, oldi == 0);\n\n			// `i` was supposed to wrap around from `out` to `0`,\n			// incrementing `n` each time, so we'll fix that now:\n			if (floor(i / out) > maxInt - n) {\n				error('overflow');\n			}\n\n			n += floor(i / out);\n			i %= out;\n\n			// Insert `n` at position `i` of the output\n			output.splice(i++, 0, n);\n\n		}\n\n		return ucs2encode(output);\n	}\n\n	/**\n	 * Converts a string of Unicode symbols (e.g. a domain name label) to a\n	 * Punycode string of ASCII-only symbols.\n	 * @memberOf punycode\n	 * @param {String} input The string of Unicode symbols.\n	 * @returns {String} The resulting Punycode string of ASCII-only symbols.\n	 */\n	function encode(input) {\n		var n,\n		    delta,\n		    handledCPCount,\n		    basicLength,\n		    bias,\n		    j,\n		    m,\n		    q,\n		    k,\n		    t,\n		    currentValue,\n		    output = [],\n		    /** `inputLength` will hold the number of code points in `input`. */\n		    inputLength,\n		    /** Cached calculation results */\n		    handledCPCountPlusOne,\n		    baseMinusT,\n		    qMinusT;\n\n		// Convert the input in UCS-2 to Unicode\n		input = ucs2decode(input);\n\n		// Cache the length\n		inputLength = input.length;\n\n		// Initialize the state\n		n = initialN;\n		delta = 0;\n		bias = initialBias;\n\n		// Handle the basic code points\n		for (j = 0; j < inputLength; ++j) {\n			currentValue = input[j];\n			if (currentValue < 0x80) {\n				output.push(stringFromCharCode(currentValue));\n			}\n		}\n\n		handledCPCount = basicLength = output.length;\n\n		// `handledCPCount` is the number of code points that have been handled;\n		// `basicLength` is the number of basic code points.\n\n		// Finish the basic string - if it is not empty - with a delimiter\n		if (basicLength) {\n			output.push(delimiter);\n		}\n\n		// Main encoding loop:\n		while (handledCPCount < inputLength) {\n\n			// All non-basic code points < n have been handled already. Find the next\n			// larger one:\n			for (m = maxInt, j = 0; j < inputLength; ++j) {\n				currentValue = input[j];\n				if (currentValue >= n && currentValue < m) {\n					m = currentValue;\n				}\n			}\n\n			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n			// but guard against overflow\n			handledCPCountPlusOne = handledCPCount + 1;\n			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n				error('overflow');\n			}\n\n			delta += (m - n) * handledCPCountPlusOne;\n			n = m;\n\n			for (j = 0; j < inputLength; ++j) {\n				currentValue = input[j];\n\n				if (currentValue < n && ++delta > maxInt) {\n					error('overflow');\n				}\n\n				if (currentValue == n) {\n					// Represent delta as a generalized variable-length integer\n					for (q = delta, k = base; /* no condition */; k += base) {\n						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n						if (q < t) {\n							break;\n						}\n						qMinusT = q - t;\n						baseMinusT = base - t;\n						output.push(\n							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n						);\n						q = floor(qMinusT / baseMinusT);\n					}\n\n					output.push(stringFromCharCode(digitToBasic(q, 0)));\n					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n					delta = 0;\n					++handledCPCount;\n				}\n			}\n\n			++delta;\n			++n;\n\n		}\n		return output.join('');\n	}\n\n	/**\n	 * Converts a Punycode string representing a domain name or an email address\n	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n	 * it doesn't matter if you call it on a string that has already been\n	 * converted to Unicode.\n	 * @memberOf punycode\n	 * @param {String} input The Punycoded domain name or email address to\n	 * convert to Unicode.\n	 * @returns {String} The Unicode representation of the given Punycode\n	 * string.\n	 */\n	function toUnicode(input) {\n		return mapDomain(input, function(string) {\n			return regexPunycode.test(string)\n				? decode(string.slice(4).toLowerCase())\n				: string;\n		});\n	}\n\n	/**\n	 * Converts a Unicode string representing a domain name or an email address to\n	 * Punycode. Only the non-ASCII parts of the domain name will be converted,\n	 * i.e. it doesn't matter if you call it with a domain that's already in\n	 * ASCII.\n	 * @memberOf punycode\n	 * @param {String} input The domain name or email address to convert, as a\n	 * Unicode string.\n	 * @returns {String} The Punycode representation of the given domain name or\n	 * email address.\n	 */\n	function toASCII(input) {\n		return mapDomain(input, function(string) {\n			return regexNonASCII.test(string)\n				? 'xn--' + encode(string)\n				: string;\n		});\n	}\n\n	/*--------------------------------------------------------------------------*/\n\n	/** Define the public API */\n	punycode = {\n		/**\n		 * A string representing the current Punycode.js version number.\n		 * @memberOf punycode\n		 * @type String\n		 */\n		'version': '1.3.2',\n		/**\n		 * An object of methods to convert from JavaScript's internal character\n		 * representation (UCS-2) to Unicode code points, and back.\n		 * @see <https://mathiasbynens.be/notes/javascript-encoding>\n		 * @memberOf punycode\n		 * @type Object\n		 */\n		'ucs2': {\n			'decode': ucs2decode,\n			'encode': ucs2encode\n		},\n		'decode': decode,\n		'encode': encode,\n		'toASCII': toASCII,\n		'toUnicode': toUnicode\n	};\n\n	/** Expose `punycode` */\n	// Some AMD build optimizers, like r.js, check for specific condition patterns\n	// like the following:\n	if (\n		true\n	) {\n		!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n			return punycode;\n		}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n	} else if (freeExports && freeModule) {\n		if (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n			freeModule.exports = punycode;\n		} else { // in Narwhal or RingoJS v0.7.0-\n			for (key in punycode) {\n				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n			}\n		}\n	} else { // in Rhino or a web browser\n		root.punycode = punycode;\n	}\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35)(module), (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports){eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25vZGUtbGlicy1icm93c2VyL34vdXJsL34vcXVlcnlzdHJpbmcvZGVjb2RlLmpzPzJmOTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiNDQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vLyBJZiBvYmouaGFzT3duUHJvcGVydHkgaGFzIGJlZW4gb3ZlcnJpZGRlbiwgdGhlbiBjYWxsaW5nXG4vLyBvYmouaGFzT3duUHJvcGVydHkocHJvcCkgd2lsbCBicmVhay5cbi8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2pveWVudC9ub2RlL2lzc3Vlcy8xNzA3XG5mdW5jdGlvbiBoYXNPd25Qcm9wZXJ0eShvYmosIHByb3ApIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHFzLCBzZXAsIGVxLCBvcHRpb25zKSB7XG4gIHNlcCA9IHNlcCB8fCAnJic7XG4gIGVxID0gZXEgfHwgJz0nO1xuICB2YXIgb2JqID0ge307XG5cbiAgaWYgKHR5cGVvZiBxcyAhPT0gJ3N0cmluZycgfHwgcXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIG9iajtcbiAgfVxuXG4gIHZhciByZWdleHAgPSAvXFwrL2c7XG4gIHFzID0gcXMuc3BsaXQoc2VwKTtcblxuICB2YXIgbWF4S2V5cyA9IDEwMDA7XG4gIGlmIChvcHRpb25zICYmIHR5cGVvZiBvcHRpb25zLm1heEtleXMgPT09ICdudW1iZXInKSB7XG4gICAgbWF4S2V5cyA9IG9wdGlvbnMubWF4S2V5cztcbiAgfVxuXG4gIHZhciBsZW4gPSBxcy5sZW5ndGg7XG4gIC8vIG1heEtleXMgPD0gMCBtZWFucyB0aGF0IHdlIHNob3VsZCBub3QgbGltaXQga2V5cyBjb3VudFxuICBpZiAobWF4S2V5cyA+IDAgJiYgbGVuID4gbWF4S2V5cykge1xuICAgIGxlbiA9IG1heEtleXM7XG4gIH1cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgKytpKSB7XG4gICAgdmFyIHggPSBxc1tpXS5yZXBsYWNlKHJlZ2V4cCwgJyUyMCcpLFxuICAgICAgICBpZHggPSB4LmluZGV4T2YoZXEpLFxuICAgICAgICBrc3RyLCB2c3RyLCBrLCB2O1xuXG4gICAgaWYgKGlkeCA+PSAwKSB7XG4gICAgICBrc3RyID0geC5zdWJzdHIoMCwgaWR4KTtcbiAgICAgIHZzdHIgPSB4LnN1YnN0cihpZHggKyAxKTtcbiAgICB9IGVsc2Uge1xuICAgICAga3N0ciA9IHg7XG4gICAgICB2c3RyID0gJyc7XG4gICAgfVxuXG4gICAgayA9IGRlY29kZVVSSUNvbXBvbmVudChrc3RyKTtcbiAgICB2ID0gZGVjb2RlVVJJQ29tcG9uZW50KHZzdHIpO1xuXG4gICAgaWYgKCFoYXNPd25Qcm9wZXJ0eShvYmosIGspKSB7XG4gICAgICBvYmpba10gPSB2O1xuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShvYmpba10pKSB7XG4gICAgICBvYmpba10ucHVzaCh2KTtcbiAgICB9IGVsc2Uge1xuICAgICAgb2JqW2tdID0gW29ialtrXSwgdl07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG9iajtcbn07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9ub2RlLWxpYnMtYnJvd3Nlci9+L3VybC9+L3F1ZXJ5c3RyaW5nL2RlY29kZS5qc1xuICoqIG1vZHVsZSBpZCA9IDQ0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports){eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25vZGUtbGlicy1icm93c2VyL34vdXJsL34vcXVlcnlzdHJpbmcvZW5jb2RlLmpzPzJiYTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7O0FBRUw7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNDUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgc3RyaW5naWZ5UHJpbWl0aXZlID0gZnVuY3Rpb24odikge1xuICBzd2l0Y2ggKHR5cGVvZiB2KSB7XG4gICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgIHJldHVybiB2O1xuXG4gICAgY2FzZSAnYm9vbGVhbic6XG4gICAgICByZXR1cm4gdiA/ICd0cnVlJyA6ICdmYWxzZSc7XG5cbiAgICBjYXNlICdudW1iZXInOlxuICAgICAgcmV0dXJuIGlzRmluaXRlKHYpID8gdiA6ICcnO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiAnJztcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvYmosIHNlcCwgZXEsIG5hbWUpIHtcbiAgc2VwID0gc2VwIHx8ICcmJztcbiAgZXEgPSBlcSB8fCAnPSc7XG4gIGlmIChvYmogPT09IG51bGwpIHtcbiAgICBvYmogPSB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMob2JqKS5tYXAoZnVuY3Rpb24oaykge1xuICAgICAgdmFyIGtzID0gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShrKSkgKyBlcTtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KG9ialtrXSkpIHtcbiAgICAgICAgcmV0dXJuIG9ialtrXS5tYXAoZnVuY3Rpb24odikge1xuICAgICAgICAgIHJldHVybiBrcyArIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUodikpO1xuICAgICAgICB9KS5qb2luKHNlcCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4ga3MgKyBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKG9ialtrXSkpO1xuICAgICAgfVxuICAgIH0pLmpvaW4oc2VwKTtcblxuICB9XG5cbiAgaWYgKCFuYW1lKSByZXR1cm4gJyc7XG4gIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKG5hbWUpKSArIGVxICtcbiAgICAgICAgIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUob2JqKSk7XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vbm9kZS1saWJzLWJyb3dzZXIvfi91cmwvfi9xdWVyeXN0cmluZy9lbmNvZGUuanNcbiAqKiBtb2R1bGUgaWQgPSA0NVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("'use strict';\n\nexports.decode = exports.parse = __webpack_require__(44);\nexports.encode = exports.stringify = __webpack_require__(45);\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25vZGUtbGlicy1icm93c2VyL34vdXJsL34vcXVlcnlzdHJpbmcvaW5kZXguanM/Njg1ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjQ2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLmRlY29kZSA9IGV4cG9ydHMucGFyc2UgPSByZXF1aXJlKCcuL2RlY29kZScpO1xuZXhwb3J0cy5lbmNvZGUgPSBleHBvcnRzLnN0cmluZ2lmeSA9IHJlcXVpcmUoJy4vZW5jb2RlJyk7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9ub2RlLWxpYnMtYnJvd3Nlci9+L3VybC9+L3F1ZXJ5c3RyaW5nL2luZGV4LmpzXG4gKiogbW9kdWxlIGlkID0gNDZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = __webpack_require__(43);\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = __webpack_require__(46);\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval('/*\r\n	MIT License http://www.opensource.org/licenses/mit-license.php\r\n	Author Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n	memoize = function(fn) {\r\n		var memo;\r\n		return function () {\r\n			if (typeof memo === "undefined") memo = fn.apply(this, arguments);\r\n			return memo;\r\n		};\r\n	},\r\n	isOldIE = memoize(function() {\r\n		return /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n	}),\r\n	getHeadElement = memoize(function () {\r\n		return document.head || document.getElementsByTagName("head")[0];\r\n	}),\r\n	singletonElement = null,\r\n	singletonCounter = 0,\r\n	styleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n	if(false) {\r\n		if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");\r\n	}\r\n\r\n	options = options || {};\r\n	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n	// tags it will allow on a page\r\n	if (typeof options.singleton === "undefined") options.singleton = isOldIE();\r\n\r\n	// By default, add <style> tags to the bottom of <head>.\r\n	if (typeof options.insertAt === "undefined") options.insertAt = "bottom";\r\n\r\n	var styles = listToStyles(list);\r\n	addStylesToDom(styles, options);\r\n\r\n	return function update(newList) {\r\n		var mayRemove = [];\r\n		for(var i = 0; i < styles.length; i++) {\r\n			var item = styles[i];\r\n			var domStyle = stylesInDom[item.id];\r\n			domStyle.refs--;\r\n			mayRemove.push(domStyle);\r\n		}\r\n		if(newList) {\r\n			var newStyles = listToStyles(newList);\r\n			addStylesToDom(newStyles, options);\r\n		}\r\n		for(var i = 0; i < mayRemove.length; i++) {\r\n			var domStyle = mayRemove[i];\r\n			if(domStyle.refs === 0) {\r\n				for(var j = 0; j < domStyle.parts.length; j++)\r\n					domStyle.parts[j]();\r\n				delete stylesInDom[domStyle.id];\r\n			}\r\n		}\r\n	};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n	for(var i = 0; i < styles.length; i++) {\r\n		var item = styles[i];\r\n		var domStyle = stylesInDom[item.id];\r\n		if(domStyle) {\r\n			domStyle.refs++;\r\n			for(var j = 0; j < domStyle.parts.length; j++) {\r\n				domStyle.parts[j](item.parts[j]);\r\n			}\r\n			for(; j < item.parts.length; j++) {\r\n				domStyle.parts.push(addStyle(item.parts[j], options));\r\n			}\r\n		} else {\r\n			var parts = [];\r\n			for(var j = 0; j < item.parts.length; j++) {\r\n				parts.push(addStyle(item.parts[j], options));\r\n			}\r\n			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n		}\r\n	}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n	var styles = [];\r\n	var newStyles = {};\r\n	for(var i = 0; i < list.length; i++) {\r\n		var item = list[i];\r\n		var id = item[0];\r\n		var css = item[1];\r\n		var media = item[2];\r\n		var sourceMap = item[3];\r\n		var part = {css: css, media: media, sourceMap: sourceMap};\r\n		if(!newStyles[id])\r\n			styles.push(newStyles[id] = {id: id, parts: [part]});\r\n		else\r\n			newStyles[id].parts.push(part);\r\n	}\r\n	return styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n	var head = getHeadElement();\r\n	var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n	if (options.insertAt === "top") {\r\n		if(!lastStyleElementInsertedAtTop) {\r\n			head.insertBefore(styleElement, head.firstChild);\r\n		} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n			head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n		} else {\r\n			head.appendChild(styleElement);\r\n		}\r\n		styleElementsInsertedAtTop.push(styleElement);\r\n	} else if (options.insertAt === "bottom") {\r\n		head.appendChild(styleElement);\r\n	} else {\r\n		throw new Error("Invalid value for parameter \'insertAt\'. Must be \'top\' or \'bottom\'.");\r\n	}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n	styleElement.parentNode.removeChild(styleElement);\r\n	var idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n	if(idx >= 0) {\r\n		styleElementsInsertedAtTop.splice(idx, 1);\r\n	}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n	var styleElement = document.createElement("style");\r\n	styleElement.type = "text/css";\r\n	insertStyleElement(options, styleElement);\r\n	return styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n	var linkElement = document.createElement("link");\r\n	linkElement.rel = "stylesheet";\r\n	insertStyleElement(options, linkElement);\r\n	return linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n	var styleElement, update, remove;\r\n\r\n	if (options.singleton) {\r\n		var styleIndex = singletonCounter++;\r\n		styleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n		update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n		remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n	} else if(obj.sourceMap &&\r\n		typeof URL === "function" &&\r\n		typeof URL.createObjectURL === "function" &&\r\n		typeof URL.revokeObjectURL === "function" &&\r\n		typeof Blob === "function" &&\r\n		typeof btoa === "function") {\r\n		styleElement = createLinkElement(options);\r\n		update = updateLink.bind(null, styleElement);\r\n		remove = function() {\r\n			removeStyleElement(styleElement);\r\n			if(styleElement.href)\r\n				URL.revokeObjectURL(styleElement.href);\r\n		};\r\n	} else {\r\n		styleElement = createStyleElement(options);\r\n		update = applyToTag.bind(null, styleElement);\r\n		remove = function() {\r\n			removeStyleElement(styleElement);\r\n		};\r\n	}\r\n\r\n	update(obj);\r\n\r\n	return function updateStyle(newObj) {\r\n		if(newObj) {\r\n			if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n				return;\r\n			update(obj = newObj);\r\n		} else {\r\n			remove();\r\n		}\r\n	};\r\n}\r\n\r\nvar replaceText = (function () {\r\n	var textStore = [];\r\n\r\n	return function (index, replacement) {\r\n		textStore[index] = replacement;\r\n		return textStore.filter(Boolean).join(\'\\n\');\r\n	};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n	var css = remove ? "" : obj.css;\r\n\r\n	if (styleElement.styleSheet) {\r\n		styleElement.styleSheet.cssText = replaceText(index, css);\r\n	} else {\r\n		var cssNode = document.createTextNode(css);\r\n		var childNodes = styleElement.childNodes;\r\n		if (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n		if (childNodes.length) {\r\n			styleElement.insertBefore(cssNode, childNodes[index]);\r\n		} else {\r\n			styleElement.appendChild(cssNode);\r\n		}\r\n	}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n	var css = obj.css;\r\n	var media = obj.media;\r\n	var sourceMap = obj.sourceMap;\r\n\r\n	if(media) {\r\n		styleElement.setAttribute("media", media)\r\n	}\r\n\r\n	if(styleElement.styleSheet) {\r\n		styleElement.styleSheet.cssText = css;\r\n	} else {\r\n		while(styleElement.firstChild) {\r\n			styleElement.removeChild(styleElement.firstChild);\r\n		}\r\n		styleElement.appendChild(document.createTextNode(css));\r\n	}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n	var css = obj.css;\r\n	var media = obj.media;\r\n	var sourceMap = obj.sourceMap;\r\n\r\n	if(sourceMap) {\r\n		// http://stackoverflow.com/a/26603875\r\n		css += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";\r\n	}\r\n\r\n	var blob = new Blob([css], { type: "text/css" });\r\n\r\n	var oldSrc = linkElement.href;\r\n\r\n	linkElement.href = URL.createObjectURL(blob);\r\n\r\n	if(oldSrc)\r\n		URL.revokeObjectURL(oldSrc);\r\n}\r\n//@ sourceMappingURL=data:application/json;base64,')},function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(15);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(48)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(true) {\n	// When the styles change, update the <style> tags\n	if(!content.locals) {\n		module.hot.accept(15, function() {\n			var newContent = __webpack_require__(15);\n			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n			update(newContent);\n		});\n	}\n	// When the module is disposed, remove the <style> tags\n	module.hot.dispose(function() { update(); });\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi93ZWIvc3RhdGljL3N0eWxlcy9tYWluLnNjc3M/Yjg3MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFzRjtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9pbmRleC5qcyEuL21haW4uc2Nzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCB7fSk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanMhLi9tYWluLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanMhLi9tYWluLnNjc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi93ZWIvc3RhdGljL3N0eWxlcy9tYWluLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSA0OVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "8963ddabf24a17a316ba8138f7cb45fa.gif";//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wcml2L3N0YXRpYy9pbWFnZXMvbWluZGJsb3duLmdpZj8wM2U5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjUwLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiODk2M2RkYWJmMjRhMTdhMzE2YmE4MTM4ZjdjYjQ1ZmEuZ2lmXCI7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3ByaXYvc3RhdGljL2ltYWdlcy9taW5kYmxvd24uZ2lmXG4gKiogbW9kdWxlIGlkID0gNTBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "86ae397de59fdf8596568c39015a4ccf.png";//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wcml2L3N0YXRpYy9pbWFnZXMvbm8tYnVpbGRzLnBuZz8xMmNlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjUxLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiODZhZTM5N2RlNTlmZGY4NTk2NTY4YzM5MDE1YTRjY2YucG5nXCI7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3ByaXYvc3RhdGljL2ltYWdlcy9uby1idWlsZHMucG5nXG4gKiogbW9kdWxlIGlkID0gNTFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(__resourceQuery) {var url = __webpack_require__(47);\r\nvar SockJS = __webpack_require__(53);\r\nvar stripAnsi = __webpack_require__(84);\r\nvar scriptElements = document.getElementsByTagName("script");\r\nvar scriptHost = scriptElements[scriptElements.length-1].getAttribute("src").replace(/\\/[^\\/]+$/, "");\r\n\r\n// If this bundle is inlined, use the resource query to get the correct url.\r\n// Else, get the url from the <script> this file was called with.\r\nvar urlParts = url.parse( true ?\r\n	__resourceQuery.substr(1) :\r\n	(scriptHost ? scriptHost : "/")\r\n);\r\n\r\nvar sock = null;\r\nvar hot = false;\r\nvar initial = true;\r\nvar currentHash = "";\r\n\r\nvar onSocketMsg = {\r\n	hot: function() {\r\n		hot = true;\r\n		console.log("[WDS] Hot Module Replacement enabled.");\r\n	},\r\n	invalid: function() {\r\n		console.log("[WDS] App updated. Recompiling...");\r\n	},\r\n	hash: function(hash) {\r\n		currentHash = hash;\r\n	},\r\n	"still-ok": function() {\r\n		console.log("[WDS] Nothing changed.")\r\n	},\r\n	ok: function() {\r\n		if(initial) return initial = false;\r\n		reloadApp();\r\n	},\r\n	warnings: function(warnings) {\r\n		console.log("[WDS] Warnings while compiling.");\r\n		for(var i = 0; i < warnings.length; i++)\r\n			console.warn(stripAnsi(warnings[i]));\r\n		if(initial) return initial = false;\r\n		reloadApp();\r\n	},\r\n	errors: function(errors) {\r\n		console.log("[WDS] Errors while compiling.");\r\n		for(var i = 0; i < errors.length; i++)\r\n			console.error(stripAnsi(errors[i]));\r\n		if(initial) return initial = false;\r\n		reloadApp();\r\n	},\r\n	"proxy-error": function(errors) {\r\n		console.log("[WDS] Proxy error.");\r\n		for(var i = 0; i < errors.length; i++)\r\n			console.error(stripAnsi(errors[i]));\r\n		if(initial) return initial = false;\r\n		reloadApp();\r\n	}\r\n};\r\n\r\nvar newConnection = function() {\r\n	sock = new SockJS(url.format({\r\n		protocol: urlParts.protocol,\r\n		auth: urlParts.auth,\r\n		hostname: (urlParts.hostname === \'0.0.0.0\') ? window.location.hostname : urlParts.hostname,\r\n		port: urlParts.port,\r\n		pathname: urlParts.path === \'/\' ? "/sockjs-node" : urlParts.path\r\n	}));\r\n\r\n	sock.onclose = function() {\r\n		console.error("[WDS] Disconnected!");\r\n\r\n		// Try to reconnect.\r\n		sock = null;\r\n		setTimeout(function () {\r\n			newConnection();\r\n		}, 2000);\r\n	};\r\n\r\n	sock.onmessage = function(e) {\r\n		// This assumes that all data sent via the websocket is JSON.\r\n		var msg = JSON.parse(e.data);\r\n		onSocketMsg[msg.type](msg.data);\r\n	};\r\n};\r\n\r\nnewConnection();\r\n\r\nfunction reloadApp() {\r\n	if(hot) {\r\n		console.log("[WDS] App hot update...");\r\n		window.postMessage("webpackHotUpdate" + currentHash, "*");\r\n	} else {\r\n		console.log("[WDS] App updated. Reloading...");\r\n		window.location.reload();\r\n	}\r\n}\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, "?http://localhost:4001/"))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvY2xpZW50PzQ0MjciLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS1kZXYtc2VydmVyL2NsaWVudD9iNjE2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVEQ0FBLFVEQUEsbUJDQUEsQ0RBQSxFQ0FBO0FBQ0EsYURBQSxtQkNBQSxDREFBLEVDQUE7QUFDQSxnQkRBQSxtQkNBQSxDREFBLEVDQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx5QkRBQSxLQ0FBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0EsZ0JBQWdCLHFCQUFxQjtBQUNyQztBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjUyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibnVsbFxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL2NsaWVudD9odHRwOi9sb2NhbGhvc3Q6NDAwMS9cbiAqKi8iLCJ2YXIgdXJsID0gcmVxdWlyZSgndXJsJyk7XHJcbnZhciBTb2NrSlMgPSByZXF1aXJlKFwic29ja2pzLWNsaWVudFwiKTtcclxudmFyIHN0cmlwQW5zaSA9IHJlcXVpcmUoJ3N0cmlwLWFuc2knKTtcclxudmFyIHNjcmlwdEVsZW1lbnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XHJcbnZhciBzY3JpcHRIb3N0ID0gc2NyaXB0RWxlbWVudHNbc2NyaXB0RWxlbWVudHMubGVuZ3RoLTFdLmdldEF0dHJpYnV0ZShcInNyY1wiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiXCIpO1xyXG5cclxuLy8gSWYgdGhpcyBidW5kbGUgaXMgaW5saW5lZCwgdXNlIHRoZSByZXNvdXJjZSBxdWVyeSB0byBnZXQgdGhlIGNvcnJlY3QgdXJsLlxyXG4vLyBFbHNlLCBnZXQgdGhlIHVybCBmcm9tIHRoZSA8c2NyaXB0PiB0aGlzIGZpbGUgd2FzIGNhbGxlZCB3aXRoLlxyXG52YXIgdXJsUGFydHMgPSB1cmwucGFyc2UodHlwZW9mIF9fcmVzb3VyY2VRdWVyeSA9PT0gXCJzdHJpbmdcIiAmJiBfX3Jlc291cmNlUXVlcnkgP1xyXG5cdF9fcmVzb3VyY2VRdWVyeS5zdWJzdHIoMSkgOlxyXG5cdChzY3JpcHRIb3N0ID8gc2NyaXB0SG9zdCA6IFwiL1wiKVxyXG4pO1xyXG5cclxudmFyIHNvY2sgPSBudWxsO1xyXG52YXIgaG90ID0gZmFsc2U7XHJcbnZhciBpbml0aWFsID0gdHJ1ZTtcclxudmFyIGN1cnJlbnRIYXNoID0gXCJcIjtcclxuXHJcbnZhciBvblNvY2tldE1zZyA9IHtcclxuXHRob3Q6IGZ1bmN0aW9uKCkge1xyXG5cdFx0aG90ID0gdHJ1ZTtcclxuXHRcdGNvbnNvbGUubG9nKFwiW1dEU10gSG90IE1vZHVsZSBSZXBsYWNlbWVudCBlbmFibGVkLlwiKTtcclxuXHR9LFxyXG5cdGludmFsaWQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0Y29uc29sZS5sb2coXCJbV0RTXSBBcHAgdXBkYXRlZC4gUmVjb21waWxpbmcuLi5cIik7XHJcblx0fSxcclxuXHRoYXNoOiBmdW5jdGlvbihoYXNoKSB7XHJcblx0XHRjdXJyZW50SGFzaCA9IGhhc2g7XHJcblx0fSxcclxuXHRcInN0aWxsLW9rXCI6IGZ1bmN0aW9uKCkge1xyXG5cdFx0Y29uc29sZS5sb2coXCJbV0RTXSBOb3RoaW5nIGNoYW5nZWQuXCIpXHJcblx0fSxcclxuXHRvazogZnVuY3Rpb24oKSB7XHJcblx0XHRpZihpbml0aWFsKSByZXR1cm4gaW5pdGlhbCA9IGZhbHNlO1xyXG5cdFx0cmVsb2FkQXBwKCk7XHJcblx0fSxcclxuXHR3YXJuaW5nczogZnVuY3Rpb24od2FybmluZ3MpIHtcclxuXHRcdGNvbnNvbGUubG9nKFwiW1dEU10gV2FybmluZ3Mgd2hpbGUgY29tcGlsaW5nLlwiKTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB3YXJuaW5ncy5sZW5ndGg7IGkrKylcclxuXHRcdFx0Y29uc29sZS53YXJuKHN0cmlwQW5zaSh3YXJuaW5nc1tpXSkpO1xyXG5cdFx0aWYoaW5pdGlhbCkgcmV0dXJuIGluaXRpYWwgPSBmYWxzZTtcclxuXHRcdHJlbG9hZEFwcCgpO1xyXG5cdH0sXHJcblx0ZXJyb3JzOiBmdW5jdGlvbihlcnJvcnMpIHtcclxuXHRcdGNvbnNvbGUubG9nKFwiW1dEU10gRXJyb3JzIHdoaWxlIGNvbXBpbGluZy5cIik7XHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgZXJyb3JzLmxlbmd0aDsgaSsrKVxyXG5cdFx0XHRjb25zb2xlLmVycm9yKHN0cmlwQW5zaShlcnJvcnNbaV0pKTtcclxuXHRcdGlmKGluaXRpYWwpIHJldHVybiBpbml0aWFsID0gZmFsc2U7XHJcblx0XHRyZWxvYWRBcHAoKTtcclxuXHR9LFxyXG5cdFwicHJveHktZXJyb3JcIjogZnVuY3Rpb24oZXJyb3JzKSB7XHJcblx0XHRjb25zb2xlLmxvZyhcIltXRFNdIFByb3h5IGVycm9yLlwiKTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBlcnJvcnMubGVuZ3RoOyBpKyspXHJcblx0XHRcdGNvbnNvbGUuZXJyb3Ioc3RyaXBBbnNpKGVycm9yc1tpXSkpO1xyXG5cdFx0aWYoaW5pdGlhbCkgcmV0dXJuIGluaXRpYWwgPSBmYWxzZTtcclxuXHRcdHJlbG9hZEFwcCgpO1xyXG5cdH1cclxufTtcclxuXHJcbnZhciBuZXdDb25uZWN0aW9uID0gZnVuY3Rpb24oKSB7XHJcblx0c29jayA9IG5ldyBTb2NrSlModXJsLmZvcm1hdCh7XHJcblx0XHRwcm90b2NvbDogdXJsUGFydHMucHJvdG9jb2wsXHJcblx0XHRhdXRoOiB1cmxQYXJ0cy5hdXRoLFxyXG5cdFx0aG9zdG5hbWU6ICh1cmxQYXJ0cy5ob3N0bmFtZSA9PT0gJzAuMC4wLjAnKSA/IHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSA6IHVybFBhcnRzLmhvc3RuYW1lLFxyXG5cdFx0cG9ydDogdXJsUGFydHMucG9ydCxcclxuXHRcdHBhdGhuYW1lOiB1cmxQYXJ0cy5wYXRoID09PSAnLycgPyBcIi9zb2NranMtbm9kZVwiIDogdXJsUGFydHMucGF0aFxyXG5cdH0pKTtcclxuXHJcblx0c29jay5vbmNsb3NlID0gZnVuY3Rpb24oKSB7XHJcblx0XHRjb25zb2xlLmVycm9yKFwiW1dEU10gRGlzY29ubmVjdGVkIVwiKTtcclxuXHJcblx0XHQvLyBUcnkgdG8gcmVjb25uZWN0LlxyXG5cdFx0c29jayA9IG51bGw7XHJcblx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0bmV3Q29ubmVjdGlvbigpO1xyXG5cdFx0fSwgMjAwMCk7XHJcblx0fTtcclxuXHJcblx0c29jay5vbm1lc3NhZ2UgPSBmdW5jdGlvbihlKSB7XHJcblx0XHQvLyBUaGlzIGFzc3VtZXMgdGhhdCBhbGwgZGF0YSBzZW50IHZpYSB0aGUgd2Vic29ja2V0IGlzIEpTT04uXHJcblx0XHR2YXIgbXNnID0gSlNPTi5wYXJzZShlLmRhdGEpO1xyXG5cdFx0b25Tb2NrZXRNc2dbbXNnLnR5cGVdKG1zZy5kYXRhKTtcclxuXHR9O1xyXG59O1xyXG5cclxubmV3Q29ubmVjdGlvbigpO1xyXG5cclxuZnVuY3Rpb24gcmVsb2FkQXBwKCkge1xyXG5cdGlmKGhvdCkge1xyXG5cdFx0Y29uc29sZS5sb2coXCJbV0RTXSBBcHAgaG90IHVwZGF0ZS4uLlwiKTtcclxuXHRcdHdpbmRvdy5wb3N0TWVzc2FnZShcIndlYnBhY2tIb3RVcGRhdGVcIiArIGN1cnJlbnRIYXNoLCBcIipcIik7XHJcblx0fSBlbHNlIHtcclxuXHRcdGNvbnNvbGUubG9nKFwiW1dEU10gQXBwIHVwZGF0ZWQuIFJlbG9hZGluZy4uLlwiKTtcclxuXHRcdHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcclxuXHR9XHJcbn1cclxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9jbGllbnQ/aHR0cDovL2xvY2FsaG9zdDo0MDAxL1xuICoqIG1vZHVsZSBpZCA9IDUyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9');
},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\nvar transportList = __webpack_require__(62);\n\nmodule.exports = __webpack_require__(60)(transportList);\n\n// TODO can't get rid of this until all servers do\nif ('_sockjs_onload' in global) {\n  setTimeout(global._sockjs_onload, 1);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9lbnRyeS5qcz8xZjk5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjUzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdHJhbnNwb3J0TGlzdCA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0LWxpc3QnKTtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL21haW4nKSh0cmFuc3BvcnRMaXN0KTtcblxuLy8gVE9ETyBjYW4ndCBnZXQgcmlkIG9mIHRoaXMgdW50aWwgYWxsIHNlcnZlcnMgZG9cbmlmICgnX3NvY2tqc19vbmxvYWQnIGluIGdsb2JhbCkge1xuICBzZXRUaW1lb3V0KGdsb2JhbC5fc29ja2pzX29ubG9hZCwgMSk7XG59XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9saWIvZW50cnkuanNcbiAqKiBtb2R1bGUgaWQgPSA1M1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar inherits = __webpack_require__(1)\n  , Event = __webpack_require__(16)\n  ;\n\nfunction CloseEvent() {\n  Event.call(this);\n  this.initEvent('close', false, false);\n  this.wasClean = false;\n  this.code = 0;\n  this.reason = '';\n}\n\ninherits(CloseEvent, Event);\n\nmodule.exports = CloseEvent;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9ldmVudC9jbG9zZS5qcz81MjFkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSIsImZpbGUiOiI1NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEV2ZW50ID0gcmVxdWlyZSgnLi9ldmVudCcpXG4gIDtcblxuZnVuY3Rpb24gQ2xvc2VFdmVudCgpIHtcbiAgRXZlbnQuY2FsbCh0aGlzKTtcbiAgdGhpcy5pbml0RXZlbnQoJ2Nsb3NlJywgZmFsc2UsIGZhbHNlKTtcbiAgdGhpcy53YXNDbGVhbiA9IGZhbHNlO1xuICB0aGlzLmNvZGUgPSAwO1xuICB0aGlzLnJlYXNvbiA9ICcnO1xufVxuXG5pbmhlcml0cyhDbG9zZUV2ZW50LCBFdmVudCk7XG5cbm1vZHVsZS5leHBvcnRzID0gQ2xvc2VFdmVudDtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9ldmVudC9jbG9zZS5qc1xuICoqIG1vZHVsZSBpZCA9IDU0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar inherits = __webpack_require__(1)\n  , Event = __webpack_require__(16)\n  ;\n\nfunction TransportMessageEvent(data) {\n  Event.call(this);\n  this.initEvent('message', false, false);\n  this.data = data;\n}\n\ninherits(TransportMessageEvent, Event);\n\nmodule.exports = TransportMessageEvent;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9ldmVudC90cmFucy1tZXNzYWdlLmpzPzZkZWQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEiLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBFdmVudCA9IHJlcXVpcmUoJy4vZXZlbnQnKVxuICA7XG5cbmZ1bmN0aW9uIFRyYW5zcG9ydE1lc3NhZ2VFdmVudChkYXRhKSB7XG4gIEV2ZW50LmNhbGwodGhpcyk7XG4gIHRoaXMuaW5pdEV2ZW50KCdtZXNzYWdlJywgZmFsc2UsIGZhbHNlKTtcbiAgdGhpcy5kYXRhID0gZGF0YTtcbn1cblxuaW5oZXJpdHMoVHJhbnNwb3J0TWVzc2FnZUV2ZW50LCBFdmVudCk7XG5cbm1vZHVsZS5leHBvcnRzID0gVHJhbnNwb3J0TWVzc2FnZUV2ZW50O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL2V2ZW50L3RyYW5zLW1lc3NhZ2UuanNcbiAqKiBtb2R1bGUgaWQgPSA1NVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar JSON3 = __webpack_require__(6)\n  , iframeUtils = __webpack_require__(12)\n  ;\n\nfunction FacadeJS(transport) {\n  this._transport = transport;\n  transport.on('message', this._transportMessage.bind(this));\n  transport.on('close', this._transportClose.bind(this));\n}\n\nFacadeJS.prototype._transportClose = function(code, reason) {\n  iframeUtils.postMessage('c', JSON3.stringify([code, reason]));\n};\nFacadeJS.prototype._transportMessage = function(frame) {\n  iframeUtils.postMessage('t', frame);\n};\nFacadeJS.prototype._send = function(data) {\n  this._transport.send(data);\n};\nFacadeJS.prototype._close = function() {\n  this._transport.close();\n  this._transport.removeAllListeners();\n};\n\nmodule.exports = FacadeJS;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9mYWNhZGUuanM/NTIzZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiI1Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEpTT04zID0gcmVxdWlyZSgnanNvbjMnKVxuICAsIGlmcmFtZVV0aWxzID0gcmVxdWlyZSgnLi91dGlscy9pZnJhbWUnKVxuICA7XG5cbmZ1bmN0aW9uIEZhY2FkZUpTKHRyYW5zcG9ydCkge1xuICB0aGlzLl90cmFuc3BvcnQgPSB0cmFuc3BvcnQ7XG4gIHRyYW5zcG9ydC5vbignbWVzc2FnZScsIHRoaXMuX3RyYW5zcG9ydE1lc3NhZ2UuYmluZCh0aGlzKSk7XG4gIHRyYW5zcG9ydC5vbignY2xvc2UnLCB0aGlzLl90cmFuc3BvcnRDbG9zZS5iaW5kKHRoaXMpKTtcbn1cblxuRmFjYWRlSlMucHJvdG90eXBlLl90cmFuc3BvcnRDbG9zZSA9IGZ1bmN0aW9uKGNvZGUsIHJlYXNvbikge1xuICBpZnJhbWVVdGlscy5wb3N0TWVzc2FnZSgnYycsIEpTT04zLnN0cmluZ2lmeShbY29kZSwgcmVhc29uXSkpO1xufTtcbkZhY2FkZUpTLnByb3RvdHlwZS5fdHJhbnNwb3J0TWVzc2FnZSA9IGZ1bmN0aW9uKGZyYW1lKSB7XG4gIGlmcmFtZVV0aWxzLnBvc3RNZXNzYWdlKCd0JywgZnJhbWUpO1xufTtcbkZhY2FkZUpTLnByb3RvdHlwZS5fc2VuZCA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgdGhpcy5fdHJhbnNwb3J0LnNlbmQoZGF0YSk7XG59O1xuRmFjYWRlSlMucHJvdG90eXBlLl9jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLl90cmFuc3BvcnQuY2xvc2UoKTtcbiAgdGhpcy5fdHJhbnNwb3J0LnJlbW92ZUFsbExpc3RlbmVycygpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBGYWNhZGVKUztcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9mYWNhZGUuanNcbiAqKiBtb2R1bGUgaWQgPSA1NlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\nvar urlUtils = __webpack_require__(5)\n  , eventUtils = __webpack_require__(7)\n  , JSON3 = __webpack_require__(6)\n  , FacadeJS = __webpack_require__(56)\n  , InfoIframeReceiver = __webpack_require__(24)\n  , iframeUtils = __webpack_require__(12)\n  , loc = __webpack_require__(25)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:iframe-bootstrap');\n}\n\nmodule.exports = function(SockJS, availableTransports) {\n  var transportMap = {};\n  availableTransports.forEach(function(at) {\n    if (at.facadeTransport) {\n      transportMap[at.facadeTransport.transportName] = at.facadeTransport;\n    }\n  });\n\n  // hard-coded for the info iframe\n  // TODO see if we can make this more dynamic\n  transportMap[InfoIframeReceiver.transportName] = InfoIframeReceiver;\n  var parentOrigin;\n\n  /* eslint-disable camelcase */\n  SockJS.bootstrap_iframe = function() {\n    /* eslint-enable camelcase */\n    var facade;\n    iframeUtils.currentWindowId = loc.hash.slice(1);\n    var onMessage = function(e) {\n      if (e.source !== parent) {\n        return;\n      }\n      if (typeof parentOrigin === 'undefined') {\n        parentOrigin = e.origin;\n      }\n      if (e.origin !== parentOrigin) {\n        return;\n      }\n\n      var iframeMessage;\n      try {\n        iframeMessage = JSON3.parse(e.data);\n      } catch (ignored) {\n        debug('bad json', e.data);\n        return;\n      }\n\n      if (iframeMessage.windowId !== iframeUtils.currentWindowId) {\n        return;\n      }\n      switch (iframeMessage.type) {\n      case 's':\n        var p;\n        try {\n          p = JSON3.parse(iframeMessage.data);\n        } catch (ignored) {\n          debug('bad json', iframeMessage.data);\n          break;\n        }\n        var version = p[0];\n        var transport = p[1];\n        var transUrl = p[2];\n        var baseUrl = p[3];\n        debug(version, transport, transUrl, baseUrl);\n        // change this to semver logic\n        if (version !== SockJS.version) {\n          throw new Error('Incompatibile SockJS! Main site uses:' +\n                    ' \"' + version + '\", the iframe:' +\n                    ' \"' + SockJS.version + '\".');\n        }\n\n        if (!urlUtils.isOriginEqual(transUrl, loc.href) ||\n            !urlUtils.isOriginEqual(baseUrl, loc.href)) {\n          throw new Error('Can\\'t connect to different domain from within an ' +\n                    'iframe. (' + loc.href + ', ' + transUrl + ', ' + baseUrl + ')');\n        }\n        facade = new FacadeJS(new transportMap[transport](transUrl, baseUrl));\n        break;\n      case 'm':\n        facade._send(iframeMessage.data);\n        break;\n      case 'c':\n        if (facade) {\n          facade._close();\n        }\n        facade = null;\n        break;\n      }\n    };\n\n    eventUtils.attachEvent('message', onMessage);\n\n    // Start\n    iframeUtils.postMessage('s');\n  };\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9pZnJhbWUtYm9vdHN0cmFwLmpzP2Y3ZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1cmxVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMvdXJsJylcbiAgLCBldmVudFV0aWxzID0gcmVxdWlyZSgnLi91dGlscy9ldmVudCcpXG4gICwgSlNPTjMgPSByZXF1aXJlKCdqc29uMycpXG4gICwgRmFjYWRlSlMgPSByZXF1aXJlKCcuL2ZhY2FkZScpXG4gICwgSW5mb0lmcmFtZVJlY2VpdmVyID0gcmVxdWlyZSgnLi9pbmZvLWlmcmFtZS1yZWNlaXZlcicpXG4gICwgaWZyYW1lVXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzL2lmcmFtZScpXG4gICwgbG9jID0gcmVxdWlyZSgnLi9sb2NhdGlvbicpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDppZnJhbWUtYm9vdHN0cmFwJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oU29ja0pTLCBhdmFpbGFibGVUcmFuc3BvcnRzKSB7XG4gIHZhciB0cmFuc3BvcnRNYXAgPSB7fTtcbiAgYXZhaWxhYmxlVHJhbnNwb3J0cy5mb3JFYWNoKGZ1bmN0aW9uKGF0KSB7XG4gICAgaWYgKGF0LmZhY2FkZVRyYW5zcG9ydCkge1xuICAgICAgdHJhbnNwb3J0TWFwW2F0LmZhY2FkZVRyYW5zcG9ydC50cmFuc3BvcnROYW1lXSA9IGF0LmZhY2FkZVRyYW5zcG9ydDtcbiAgICB9XG4gIH0pO1xuXG4gIC8vIGhhcmQtY29kZWQgZm9yIHRoZSBpbmZvIGlmcmFtZVxuICAvLyBUT0RPIHNlZSBpZiB3ZSBjYW4gbWFrZSB0aGlzIG1vcmUgZHluYW1pY1xuICB0cmFuc3BvcnRNYXBbSW5mb0lmcmFtZVJlY2VpdmVyLnRyYW5zcG9ydE5hbWVdID0gSW5mb0lmcmFtZVJlY2VpdmVyO1xuICB2YXIgcGFyZW50T3JpZ2luO1xuXG4gIC8qIGVzbGludC1kaXNhYmxlIGNhbWVsY2FzZSAqL1xuICBTb2NrSlMuYm9vdHN0cmFwX2lmcmFtZSA9IGZ1bmN0aW9uKCkge1xuICAgIC8qIGVzbGludC1lbmFibGUgY2FtZWxjYXNlICovXG4gICAgdmFyIGZhY2FkZTtcbiAgICBpZnJhbWVVdGlscy5jdXJyZW50V2luZG93SWQgPSBsb2MuaGFzaC5zbGljZSgxKTtcbiAgICB2YXIgb25NZXNzYWdlID0gZnVuY3Rpb24oZSkge1xuICAgICAgaWYgKGUuc291cmNlICE9PSBwYXJlbnQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBwYXJlbnRPcmlnaW4gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHBhcmVudE9yaWdpbiA9IGUub3JpZ2luO1xuICAgICAgfVxuICAgICAgaWYgKGUub3JpZ2luICE9PSBwYXJlbnRPcmlnaW4pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgaWZyYW1lTWVzc2FnZTtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmcmFtZU1lc3NhZ2UgPSBKU09OMy5wYXJzZShlLmRhdGEpO1xuICAgICAgfSBjYXRjaCAoaWdub3JlZCkge1xuICAgICAgICBkZWJ1ZygnYmFkIGpzb24nLCBlLmRhdGEpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChpZnJhbWVNZXNzYWdlLndpbmRvd0lkICE9PSBpZnJhbWVVdGlscy5jdXJyZW50V2luZG93SWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgc3dpdGNoIChpZnJhbWVNZXNzYWdlLnR5cGUpIHtcbiAgICAgIGNhc2UgJ3MnOlxuICAgICAgICB2YXIgcDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBwID0gSlNPTjMucGFyc2UoaWZyYW1lTWVzc2FnZS5kYXRhKTtcbiAgICAgICAgfSBjYXRjaCAoaWdub3JlZCkge1xuICAgICAgICAgIGRlYnVnKCdiYWQganNvbicsIGlmcmFtZU1lc3NhZ2UuZGF0YSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHZlcnNpb24gPSBwWzBdO1xuICAgICAgICB2YXIgdHJhbnNwb3J0ID0gcFsxXTtcbiAgICAgICAgdmFyIHRyYW5zVXJsID0gcFsyXTtcbiAgICAgICAgdmFyIGJhc2VVcmwgPSBwWzNdO1xuICAgICAgICBkZWJ1Zyh2ZXJzaW9uLCB0cmFuc3BvcnQsIHRyYW5zVXJsLCBiYXNlVXJsKTtcbiAgICAgICAgLy8gY2hhbmdlIHRoaXMgdG8gc2VtdmVyIGxvZ2ljXG4gICAgICAgIGlmICh2ZXJzaW9uICE9PSBTb2NrSlMudmVyc2lvbikge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW5jb21wYXRpYmlsZSBTb2NrSlMhIE1haW4gc2l0ZSB1c2VzOicgK1xuICAgICAgICAgICAgICAgICAgICAnIFwiJyArIHZlcnNpb24gKyAnXCIsIHRoZSBpZnJhbWU6JyArXG4gICAgICAgICAgICAgICAgICAgICcgXCInICsgU29ja0pTLnZlcnNpb24gKyAnXCIuJyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXVybFV0aWxzLmlzT3JpZ2luRXF1YWwodHJhbnNVcmwsIGxvYy5ocmVmKSB8fFxuICAgICAgICAgICAgIXVybFV0aWxzLmlzT3JpZ2luRXF1YWwoYmFzZVVybCwgbG9jLmhyZWYpKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5cXCd0IGNvbm5lY3QgdG8gZGlmZmVyZW50IGRvbWFpbiBmcm9tIHdpdGhpbiBhbiAnICtcbiAgICAgICAgICAgICAgICAgICAgJ2lmcmFtZS4gKCcgKyBsb2MuaHJlZiArICcsICcgKyB0cmFuc1VybCArICcsICcgKyBiYXNlVXJsICsgJyknKTtcbiAgICAgICAgfVxuICAgICAgICBmYWNhZGUgPSBuZXcgRmFjYWRlSlMobmV3IHRyYW5zcG9ydE1hcFt0cmFuc3BvcnRdKHRyYW5zVXJsLCBiYXNlVXJsKSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbSc6XG4gICAgICAgIGZhY2FkZS5fc2VuZChpZnJhbWVNZXNzYWdlLmRhdGEpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2MnOlxuICAgICAgICBpZiAoZmFjYWRlKSB7XG4gICAgICAgICAgZmFjYWRlLl9jbG9zZSgpO1xuICAgICAgICB9XG4gICAgICAgIGZhY2FkZSA9IG51bGw7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBldmVudFV0aWxzLmF0dGFjaEV2ZW50KCdtZXNzYWdlJywgb25NZXNzYWdlKTtcblxuICAgIC8vIFN0YXJ0XG4gICAgaWZyYW1lVXRpbHMucG9zdE1lc3NhZ2UoJ3MnKTtcbiAgfTtcbn07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9saWIvaWZyYW1lLWJvb3RzdHJhcC5qc1xuICoqIG1vZHVsZSBpZCA9IDU3XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process, global) {'use strict';\n\nvar EventEmitter = __webpack_require__(4).EventEmitter\n  , inherits = __webpack_require__(1)\n  , JSON3 = __webpack_require__(6)\n  , utils = __webpack_require__(7)\n  , IframeTransport = __webpack_require__(30)\n  , InfoReceiverIframe = __webpack_require__(24)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:info-iframe');\n}\n\nfunction InfoIframe(baseUrl, url) {\n  var self = this;\n  EventEmitter.call(this);\n\n  var go = function() {\n    var ifr = self.ifr = new IframeTransport(InfoReceiverIframe.transportName, url, baseUrl);\n\n    ifr.once('message', function(msg) {\n      if (msg) {\n        var d;\n        try {\n          d = JSON3.parse(msg);\n        } catch (e) {\n          debug('bad json', msg);\n          self.emit('finish');\n          self.close();\n          return;\n        }\n\n        var info = d[0], rtt = d[1];\n        self.emit('finish', info, rtt);\n      }\n      self.close();\n    });\n\n    ifr.once('close', function() {\n      self.emit('finish');\n      self.close();\n    });\n  };\n\n  // TODO this seems the same as the 'needBody' from transports\n  if (!global.document.body) {\n    utils.attachEvent('load', go);\n  } else {\n    go();\n  }\n}\n\ninherits(InfoIframe, EventEmitter);\n\nInfoIframe.enabled = function() {\n  return IframeTransport.enabled();\n};\n\nInfoIframe.prototype.close = function() {\n  if (this.ifr) {\n    this.ifr.close();\n  }\n  this.removeAllListeners();\n  this.ifr = null;\n};\n\nmodule.exports = InfoIframe;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9pbmZvLWlmcmFtZS5qcz8zY2M0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjU4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gICwgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgSlNPTjMgPSByZXF1aXJlKCdqc29uMycpXG4gICwgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzL2V2ZW50JylcbiAgLCBJZnJhbWVUcmFuc3BvcnQgPSByZXF1aXJlKCcuL3RyYW5zcG9ydC9pZnJhbWUnKVxuICAsIEluZm9SZWNlaXZlcklmcmFtZSA9IHJlcXVpcmUoJy4vaW5mby1pZnJhbWUtcmVjZWl2ZXInKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6aW5mby1pZnJhbWUnKTtcbn1cblxuZnVuY3Rpb24gSW5mb0lmcmFtZShiYXNlVXJsLCB1cmwpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcblxuICB2YXIgZ28gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaWZyID0gc2VsZi5pZnIgPSBuZXcgSWZyYW1lVHJhbnNwb3J0KEluZm9SZWNlaXZlcklmcmFtZS50cmFuc3BvcnROYW1lLCB1cmwsIGJhc2VVcmwpO1xuXG4gICAgaWZyLm9uY2UoJ21lc3NhZ2UnLCBmdW5jdGlvbihtc2cpIHtcbiAgICAgIGlmIChtc2cpIHtcbiAgICAgICAgdmFyIGQ7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgZCA9IEpTT04zLnBhcnNlKG1zZyk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICBkZWJ1ZygnYmFkIGpzb24nLCBtc2cpO1xuICAgICAgICAgIHNlbGYuZW1pdCgnZmluaXNoJyk7XG4gICAgICAgICAgc2VsZi5jbG9zZSgpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBpbmZvID0gZFswXSwgcnR0ID0gZFsxXTtcbiAgICAgICAgc2VsZi5lbWl0KCdmaW5pc2gnLCBpbmZvLCBydHQpO1xuICAgICAgfVxuICAgICAgc2VsZi5jbG9zZSgpO1xuICAgIH0pO1xuXG4gICAgaWZyLm9uY2UoJ2Nsb3NlJywgZnVuY3Rpb24oKSB7XG4gICAgICBzZWxmLmVtaXQoJ2ZpbmlzaCcpO1xuICAgICAgc2VsZi5jbG9zZSgpO1xuICAgIH0pO1xuICB9O1xuXG4gIC8vIFRPRE8gdGhpcyBzZWVtcyB0aGUgc2FtZSBhcyB0aGUgJ25lZWRCb2R5JyBmcm9tIHRyYW5zcG9ydHNcbiAgaWYgKCFnbG9iYWwuZG9jdW1lbnQuYm9keSkge1xuICAgIHV0aWxzLmF0dGFjaEV2ZW50KCdsb2FkJywgZ28pO1xuICB9IGVsc2Uge1xuICAgIGdvKCk7XG4gIH1cbn1cblxuaW5oZXJpdHMoSW5mb0lmcmFtZSwgRXZlbnRFbWl0dGVyKTtcblxuSW5mb0lmcmFtZS5lbmFibGVkID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBJZnJhbWVUcmFuc3BvcnQuZW5hYmxlZCgpO1xufTtcblxuSW5mb0lmcmFtZS5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgaWYgKHRoaXMuaWZyKSB7XG4gICAgdGhpcy5pZnIuY2xvc2UoKTtcbiAgfVxuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICB0aGlzLmlmciA9IG51bGw7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEluZm9JZnJhbWU7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9saWIvaW5mby1pZnJhbWUuanNcbiAqKiBtb2R1bGUgaWQgPSA1OFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\nvar EventEmitter = __webpack_require__(4).EventEmitter\n  , inherits = __webpack_require__(1)\n  , urlUtils = __webpack_require__(5)\n  , XDR = __webpack_require__(18)\n  , XHRCors = __webpack_require__(14)\n  , XHRLocal = __webpack_require__(10)\n  , XHRFake = __webpack_require__(71)\n  , InfoIframe = __webpack_require__(58)\n  , InfoAjax = __webpack_require__(23)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:info-receiver');\n}\n\nfunction InfoReceiver(baseUrl, urlInfo) {\n  debug(baseUrl);\n  var self = this;\n  EventEmitter.call(this);\n\n  setTimeout(function() {\n    self.doXhr(baseUrl, urlInfo);\n  }, 0);\n}\n\ninherits(InfoReceiver, EventEmitter);\n\n// TODO this is currently ignoring the list of available transports and the whitelist\n\nInfoReceiver._getReceiver = function(baseUrl, url, urlInfo) {\n  // determine method of CORS support (if needed)\n  if (urlInfo.sameOrigin) {\n    return new InfoAjax(url, XHRLocal);\n  }\n  if (XHRCors.enabled) {\n    return new InfoAjax(url, XHRCors);\n  }\n  if (XDR.enabled && urlInfo.sameScheme) {\n    return new InfoAjax(url, XDR);\n  }\n  if (InfoIframe.enabled()) {\n    return new InfoIframe(baseUrl, url);\n  }\n  return new InfoAjax(url, XHRFake);\n};\n\nInfoReceiver.prototype.doXhr = function(baseUrl, urlInfo) {\n  var self = this\n    , url = urlUtils.addPath(baseUrl, '/info')\n    ;\n  debug('doXhr', url);\n\n  this.xo = InfoReceiver._getReceiver(baseUrl, url, urlInfo);\n\n  this.timeoutRef = setTimeout(function() {\n    debug('timeout');\n    self._cleanup(false);\n    self.emit('finish');\n  }, InfoReceiver.timeout);\n\n  this.xo.once('finish', function(info, rtt) {\n    debug('finish', info, rtt);\n    self._cleanup(true);\n    self.emit('finish', info, rtt);\n  });\n};\n\nInfoReceiver.prototype._cleanup = function(wasClean) {\n  debug('_cleanup');\n  clearTimeout(this.timeoutRef);\n  this.timeoutRef = null;\n  if (!wasClean && this.xo) {\n    this.xo.close();\n  }\n  this.xo = null;\n};\n\nInfoReceiver.prototype.close = function() {\n  debug('close');\n  this.removeAllListeners();\n  this._cleanup(false);\n};\n\nInfoReceiver.timeout = 8000;\n\nmodule.exports = InfoReceiver;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi9pbmZvLXJlY2VpdmVyLmpzP2JkZWEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSIsImZpbGUiOiI1OS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIHVybFV0aWxzID0gcmVxdWlyZSgnLi91dGlscy91cmwnKVxuICAsIFhEUiA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0L3NlbmRlci94ZHInKVxuICAsIFhIUkNvcnMgPSByZXF1aXJlKCcuL3RyYW5zcG9ydC9zZW5kZXIveGhyLWNvcnMnKVxuICAsIFhIUkxvY2FsID0gcmVxdWlyZSgnLi90cmFuc3BvcnQvc2VuZGVyL3hoci1sb2NhbCcpXG4gICwgWEhSRmFrZSA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0L3NlbmRlci94aHItZmFrZScpXG4gICwgSW5mb0lmcmFtZSA9IHJlcXVpcmUoJy4vaW5mby1pZnJhbWUnKVxuICAsIEluZm9BamF4ID0gcmVxdWlyZSgnLi9pbmZvLWFqYXgnKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6aW5mby1yZWNlaXZlcicpO1xufVxuXG5mdW5jdGlvbiBJbmZvUmVjZWl2ZXIoYmFzZVVybCwgdXJsSW5mbykge1xuICBkZWJ1ZyhiYXNlVXJsKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcblxuICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIHNlbGYuZG9YaHIoYmFzZVVybCwgdXJsSW5mbyk7XG4gIH0sIDApO1xufVxuXG5pbmhlcml0cyhJbmZvUmVjZWl2ZXIsIEV2ZW50RW1pdHRlcik7XG5cbi8vIFRPRE8gdGhpcyBpcyBjdXJyZW50bHkgaWdub3JpbmcgdGhlIGxpc3Qgb2YgYXZhaWxhYmxlIHRyYW5zcG9ydHMgYW5kIHRoZSB3aGl0ZWxpc3RcblxuSW5mb1JlY2VpdmVyLl9nZXRSZWNlaXZlciA9IGZ1bmN0aW9uKGJhc2VVcmwsIHVybCwgdXJsSW5mbykge1xuICAvLyBkZXRlcm1pbmUgbWV0aG9kIG9mIENPUlMgc3VwcG9ydCAoaWYgbmVlZGVkKVxuICBpZiAodXJsSW5mby5zYW1lT3JpZ2luKSB7XG4gICAgcmV0dXJuIG5ldyBJbmZvQWpheCh1cmwsIFhIUkxvY2FsKTtcbiAgfVxuICBpZiAoWEhSQ29ycy5lbmFibGVkKSB7XG4gICAgcmV0dXJuIG5ldyBJbmZvQWpheCh1cmwsIFhIUkNvcnMpO1xuICB9XG4gIGlmIChYRFIuZW5hYmxlZCAmJiB1cmxJbmZvLnNhbWVTY2hlbWUpIHtcbiAgICByZXR1cm4gbmV3IEluZm9BamF4KHVybCwgWERSKTtcbiAgfVxuICBpZiAoSW5mb0lmcmFtZS5lbmFibGVkKCkpIHtcbiAgICByZXR1cm4gbmV3IEluZm9JZnJhbWUoYmFzZVVybCwgdXJsKTtcbiAgfVxuICByZXR1cm4gbmV3IEluZm9BamF4KHVybCwgWEhSRmFrZSk7XG59O1xuXG5JbmZvUmVjZWl2ZXIucHJvdG90eXBlLmRvWGhyID0gZnVuY3Rpb24oYmFzZVVybCwgdXJsSW5mbykge1xuICB2YXIgc2VsZiA9IHRoaXNcbiAgICAsIHVybCA9IHVybFV0aWxzLmFkZFBhdGgoYmFzZVVybCwgJy9pbmZvJylcbiAgICA7XG4gIGRlYnVnKCdkb1hocicsIHVybCk7XG5cbiAgdGhpcy54byA9IEluZm9SZWNlaXZlci5fZ2V0UmVjZWl2ZXIoYmFzZVVybCwgdXJsLCB1cmxJbmZvKTtcblxuICB0aGlzLnRpbWVvdXRSZWYgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCd0aW1lb3V0Jyk7XG4gICAgc2VsZi5fY2xlYW51cChmYWxzZSk7XG4gICAgc2VsZi5lbWl0KCdmaW5pc2gnKTtcbiAgfSwgSW5mb1JlY2VpdmVyLnRpbWVvdXQpO1xuXG4gIHRoaXMueG8ub25jZSgnZmluaXNoJywgZnVuY3Rpb24oaW5mbywgcnR0KSB7XG4gICAgZGVidWcoJ2ZpbmlzaCcsIGluZm8sIHJ0dCk7XG4gICAgc2VsZi5fY2xlYW51cCh0cnVlKTtcbiAgICBzZWxmLmVtaXQoJ2ZpbmlzaCcsIGluZm8sIHJ0dCk7XG4gIH0pO1xufTtcblxuSW5mb1JlY2VpdmVyLnByb3RvdHlwZS5fY2xlYW51cCA9IGZ1bmN0aW9uKHdhc0NsZWFuKSB7XG4gIGRlYnVnKCdfY2xlYW51cCcpO1xuICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0UmVmKTtcbiAgdGhpcy50aW1lb3V0UmVmID0gbnVsbDtcbiAgaWYgKCF3YXNDbGVhbiAmJiB0aGlzLnhvKSB7XG4gICAgdGhpcy54by5jbG9zZSgpO1xuICB9XG4gIHRoaXMueG8gPSBudWxsO1xufTtcblxuSW5mb1JlY2VpdmVyLnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnY2xvc2UnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgdGhpcy5fY2xlYW51cChmYWxzZSk7XG59O1xuXG5JbmZvUmVjZWl2ZXIudGltZW91dCA9IDgwMDA7XG5cbm1vZHVsZS5leHBvcnRzID0gSW5mb1JlY2VpdmVyO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL2luZm8tcmVjZWl2ZXIuanNcbiAqKiBtb2R1bGUgaWQgPSA1OVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process, global) {'use strict';\n\n__webpack_require__(61);\n\nvar URL = __webpack_require__(20)\n  , inherits = __webpack_require__(1)\n  , JSON3 = __webpack_require__(6)\n  , random = __webpack_require__(9)\n  , escape = __webpack_require__(76)\n  , urlUtils = __webpack_require__(5)\n  , eventUtils = __webpack_require__(7)\n  , transport = __webpack_require__(78)\n  , objectUtils = __webpack_require__(19)\n  , browser = __webpack_require__(11)\n  , log = __webpack_require__(77)\n  , Event = __webpack_require__(16)\n  , EventTarget = __webpack_require__(22)\n  , loc = __webpack_require__(25)\n  , CloseEvent = __webpack_require__(54)\n  , TransportMessageEvent = __webpack_require__(55)\n  , InfoReceiver = __webpack_require__(59)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  // Make debug module available globally so you can enable via the console easily\n  global.dbg = __webpack_require__(3);\n  debug = global.dbg('sockjs-client:main');\n}\n\nvar transports;\n\n// follow constructor steps defined at http://dev.w3.org/html5/websockets/#the-websocket-interface\nfunction SockJS(url, protocols, options) {\n  if (!(this instanceof SockJS)) {\n    return new SockJS(url, protocols, options);\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'SockJS: 1 argument required, but only 0 present\");\n  }\n  EventTarget.call(this);\n\n  this.readyState = SockJS.CONNECTING;\n  this.extensions = '';\n  this.protocol = '';\n\n  // non-standard extension\n  options = options || {};\n  if (options.protocols_whitelist) {\n    log.warn(\"'protocols_whitelist' is DEPRECATED. Use 'transports' instead.\");\n  }\n  this._transportsWhitelist = options.transports;\n\n  var sessionId = options.sessionId || 8;\n  if (typeof sessionId === 'function') {\n    this._generateSessionId = sessionId;\n  } else if (typeof sessionId === 'number') {\n    this._generateSessionId = function() {\n      return random.string(sessionId);\n    };\n  } else {\n    throw new TypeError(\"If sessionId is used in the options, it needs to be a number or a function.\");\n  }\n\n  this._server = options.server || random.numberString(1000);\n\n  // Step 1 of WS spec - parse and validate the url. Issue #8\n  var parsedUrl = new URL(url);\n  if (!parsedUrl.host || !parsedUrl.protocol) {\n    throw new SyntaxError(\"The URL '\" + url + \"' is invalid\");\n  } else if (parsedUrl.hash) {\n    throw new SyntaxError('The URL must not contain a fragment');\n  } else if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n    throw new SyntaxError(\"The URL's scheme must be either 'http:' or 'https:'. '\" + parsedUrl.protocol + \"' is not allowed.\");\n  }\n\n  var secure = parsedUrl.protocol === 'https:';\n  // Step 2 - don't allow secure origin with an insecure protocol\n  if (loc.protocol === 'https' && !secure) {\n    throw new Error('SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS');\n  }\n\n  // Step 3 - check port access - no need here\n  // Step 4 - parse protocols argument\n  if (!protocols) {\n    protocols = [];\n  } else if (!Array.isArray(protocols)) {\n    protocols = [protocols];\n  }\n\n  // Step 5 - check protocols argument\n  var sortedProtocols = protocols.sort();\n  sortedProtocols.forEach(function(proto, i) {\n    if (!proto) {\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is invalid.\");\n    }\n    if (i < (sortedProtocols.length - 1) && proto === sortedProtocols[i + 1]) {\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is duplicated.\");\n    }\n  });\n\n  // Step 6 - convert origin\n  var o = urlUtils.getOrigin(loc.href);\n  this._origin = o ? o.toLowerCase() : null;\n\n  // remove the trailing slash\n  parsedUrl.set('pathname', parsedUrl.pathname.replace(/\\/+$/, ''));\n\n  // store the sanitized url\n  this.url = parsedUrl.href;\n  debug('using url', this.url);\n\n  // Step 7 - start connection in background\n  // obtain server info\n  // http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-26\n  this._urlInfo = {\n    nullOrigin: !browser.hasDomain()\n  , sameOrigin: urlUtils.isOriginEqual(this.url, loc.href)\n  , sameScheme: urlUtils.isSchemeEqual(this.url, loc.href)\n  };\n\n  this._ir = new InfoReceiver(this.url, this._urlInfo);\n  this._ir.once('finish', this._receiveInfo.bind(this));\n}\n\ninherits(SockJS, EventTarget);\n\nfunction userSetCode(code) {\n  return code === 1000 || (code >= 3000 && code <= 4999);\n}\n\nSockJS.prototype.close = function(code, reason) {\n  // Step 1\n  if (code && !userSetCode(code)) {\n    throw new Error('InvalidAccessError: Invalid code');\n  }\n  // Step 2.4 states the max is 123 bytes, but we are just checking length\n  if (reason && reason.length > 123) {\n    throw new SyntaxError('reason argument has an invalid length');\n  }\n\n  // Step 3.1\n  if (this.readyState === SockJS.CLOSING || this.readyState === SockJS.CLOSED) {\n    return;\n  }\n\n  // TODO look at docs to determine how to set this\n  var wasClean = true;\n  this._close(code || 1000, reason || 'Normal closure', wasClean);\n};\n\nSockJS.prototype.send = function(data) {\n  // #13 - convert anything non-string to string\n  // TODO this currently turns objects into [object Object]\n  if (typeof data !== 'string') {\n    data = '' + data;\n  }\n  if (this.readyState === SockJS.CONNECTING) {\n    throw new Error('InvalidStateError: The connection has not been established yet');\n  }\n  if (this.readyState !== SockJS.OPEN) {\n    return;\n  }\n  this._transport.send(escape.quote(data));\n};\n\nSockJS.version = __webpack_require__(34);\n\nSockJS.CONNECTING = 0;\nSockJS.OPEN = 1;\nSockJS.CLOSING = 2;\nSockJS.CLOSED = 3;\n\nSockJS.prototype._receiveInfo = function(info, rtt) {\n  debug('_receiveInfo', rtt);\n  this._ir = null;\n  if (!info) {\n    this._close(1002, 'Cannot connect to server');\n    return;\n  }\n\n  // establish a round-trip timeout (RTO) based on the\n  // round-trip time (RTT)\n  this._rto = this.countRTO(rtt);\n  // allow server to override url used for the actual transport\n  this._transUrl = info.base_url ? info.base_url : this.url;\n  info = objectUtils.extend(info, this._urlInfo);\n  debug('info', info);\n  // determine list of desired and supported transports\n  var enabledTransports = transports.filterToEnabled(this._transportsWhitelist, info);\n  this._transports = enabledTransports.main;\n  debug(this._transports.length + ' enabled transports');\n\n  this._connect();\n};\n\nSockJS.prototype._connect = function() {\n  for (var Transport = this._transports.shift(); Transport; Transport = this._transports.shift()) {\n    debug('attempt', Transport.transportName);\n    if (Transport.needBody) {\n      if (!global.document.body ||\n          (typeof global.document.readyState !== 'undefined' &&\n            global.document.readyState !== 'complete' &&\n            global.document.readyState !== 'interactive')) {\n        debug('waiting for body');\n        this._transports.unshift(Transport);\n        eventUtils.attachEvent('load', this._connect.bind(this));\n        return;\n      }\n    }\n\n    // calculate timeout based on RTO and round trips. Default to 5s\n    var timeoutMs = (this._rto * Transport.roundTrips) || 5000;\n    this._transportTimeoutId = setTimeout(this._transportTimeout.bind(this), timeoutMs);\n    debug('using timeout', timeoutMs);\n\n    var transportUrl = urlUtils.addPath(this._transUrl, '/' + this._server + '/' + this._generateSessionId());\n    debug('transport url', transportUrl);\n    var transportObj = new Transport(transportUrl, this._transUrl);\n    transportObj.on('message', this._transportMessage.bind(this));\n    transportObj.once('close', this._transportClose.bind(this));\n    transportObj.transportName = Transport.transportName;\n    this._transport = transportObj;\n\n    return;\n  }\n  this._close(2000, 'All transports failed', false);\n};\n\nSockJS.prototype._transportTimeout = function() {\n  debug('_transportTimeout');\n  if (this.readyState === SockJS.CONNECTING) {\n    this._transportClose(2007, 'Transport timed out');\n  }\n};\n\nSockJS.prototype._transportMessage = function(msg) {\n  debug('_transportMessage', msg);\n  var self = this\n    , type = msg.slice(0, 1)\n    , content = msg.slice(1)\n    , payload\n    ;\n\n  // first check for messages that don't need a payload\n  switch (type) {\n    case 'o':\n      this._open();\n      return;\n    case 'h':\n      this.dispatchEvent(new Event('heartbeat'));\n      debug('heartbeat', this.transport);\n      return;\n  }\n\n  if (content) {\n    try {\n      payload = JSON3.parse(content);\n    } catch (e) {\n      debug('bad json', content);\n    }\n  }\n\n  if (typeof payload === 'undefined') {\n    debug('empty payload', content);\n    return;\n  }\n\n  switch (type) {\n    case 'a':\n      if (Array.isArray(payload)) {\n        payload.forEach(function(p) {\n          debug('message', self.transport, p);\n          self.dispatchEvent(new TransportMessageEvent(p));\n        });\n      }\n      break;\n    case 'm':\n      debug('message', this.transport, payload);\n      this.dispatchEvent(new TransportMessageEvent(payload));\n      break;\n    case 'c':\n      if (Array.isArray(payload) && payload.length === 2) {\n        this._close(payload[0], payload[1], true);\n      }\n      break;\n  }\n};\n\nSockJS.prototype._transportClose = function(code, reason) {\n  debug('_transportClose', this.transport, code, reason);\n  if (this._transport) {\n    this._transport.removeAllListeners();\n    this._transport = null;\n    this.transport = null;\n  }\n\n  if (!userSetCode(code) && code !== 2000 && this.readyState === SockJS.CONNECTING) {\n    this._connect();\n    return;\n  }\n\n  this._close(code, reason);\n};\n\nSockJS.prototype._open = function() {\n  debug('_open', this._transport.transportName, this.readyState);\n  if (this.readyState === SockJS.CONNECTING) {\n    if (this._transportTimeoutId) {\n      clearTimeout(this._transportTimeoutId);\n      this._transportTimeoutId = null;\n    }\n    this.readyState = SockJS.OPEN;\n    this.transport = this._transport.transportName;\n    this.dispatchEvent(new Event('open'));\n    debug('connected', this.transport);\n  } else {\n    // The server might have been restarted, and lost track of our\n    // connection.\n    this._close(1006, 'Server lost session');\n  }\n};\n\nSockJS.prototype._close = function(code, reason, wasClean) {\n  debug('_close', this.transport, code, reason, wasClean, this.readyState);\n  var forceFail = false;\n\n  if (this._ir) {\n    forceFail = true;\n    this._ir.close();\n    this._ir = null;\n  }\n  if (this._transport) {\n    this._transport.close();\n    this._transport = null;\n    this.transport = null;\n  }\n\n  if (this.readyState === SockJS.CLOSED) {\n    throw new Error('InvalidStateError: SockJS has already been closed');\n  }\n\n  this.readyState = SockJS.CLOSING;\n  setTimeout(function() {\n    this.readyState = SockJS.CLOSED;\n\n    if (forceFail) {\n      this.dispatchEvent(new Event('error'));\n    }\n\n    var e = new CloseEvent('close');\n    e.wasClean = wasClean || false;\n    e.code = code || 1000;\n    e.reason = reason;\n\n    this.dispatchEvent(e);\n    this.onmessage = this.onclose = this.onerror = null;\n    debug('disconnected');\n  }.bind(this), 0);\n};\n\n// See: http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/\n// and RFC 2988.\nSockJS.prototype.countRTO = function(rtt) {\n  // In a local environment, when using IE8/9 and the `jsonp-polling`\n  // transport the time needed to establish a connection (the time that pass\n  // from the opening of the transport to the call of `_dispatchOpen`) is\n  // around 200msec (the lower bound used in the article above) and this\n  // causes spurious timeouts. For this reason we calculate a value slightly\n  // larger than that used in the article.\n  if (rtt > 100) {\n    return 4 * rtt; // rto > 400msec\n  }\n  return 300 + rtt; // 300msec < rto <= 400msec\n};\n\nmodule.exports = function(availableTransports) {\n  transports = transport(availableTransports);\n  __webpack_require__(57)(SockJS, availableTransports);\n  return SockJS;\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports){eval("/* eslint-disable */\n/* jscs: disable */\n'use strict';\n\n// pulled specific shims from https://github.com/es-shims/es5-shim\n\nvar ArrayPrototype = Array.prototype;\nvar ObjectPrototype = Object.prototype;\nvar FunctionPrototype = Function.prototype;\nvar StringPrototype = String.prototype;\nvar array_slice = ArrayPrototype.slice;\n\nvar _toString = ObjectPrototype.toString;\nvar isFunction = function (val) {\n    return ObjectPrototype.toString.call(val) === '[object Function]';\n};\nvar isArray = function isArray(obj) {\n    return _toString.call(obj) === '[object Array]';\n};\nvar isString = function isString(obj) {\n    return _toString.call(obj) === '[object String]';\n};\n\nvar supportsDescriptors = Object.defineProperty && (function () {\n    try {\n        Object.defineProperty({}, 'x', {});\n        return true;\n    } catch (e) { /* this is ES3 */\n        return false;\n    }\n}());\n\n// Define configurable, writable and non-enumerable props\n// if they don't exist.\nvar defineProperty;\nif (supportsDescriptors) {\n    defineProperty = function (object, name, method, forceAssign) {\n        if (!forceAssign && (name in object)) { return; }\n        Object.defineProperty(object, name, {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: method\n        });\n    };\n} else {\n    defineProperty = function (object, name, method, forceAssign) {\n        if (!forceAssign && (name in object)) { return; }\n        object[name] = method;\n    };\n}\nvar defineProperties = function (object, map, forceAssign) {\n    for (var name in map) {\n        if (ObjectPrototype.hasOwnProperty.call(map, name)) {\n          defineProperty(object, name, map[name], forceAssign);\n        }\n    }\n};\n\nvar toObject = function (o) {\n    if (o == null) { // this matches both null and undefined\n        throw new TypeError(\"can't convert \" + o + ' to object');\n    }\n    return Object(o);\n};\n\n//\n// Util\n// ======\n//\n\n// ES5 9.4\n// http://es5.github.com/#x9.4\n// http://jsperf.com/to-integer\n\nfunction toInteger(num) {\n    var n = +num;\n    if (n !== n) { // isNaN\n        n = 0;\n    } else if (n !== 0 && n !== (1 / 0) && n !== -(1 / 0)) {\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n    }\n    return n;\n}\n\nfunction ToUint32(x) {\n    return x >>> 0;\n}\n\n//\n// Function\n// ========\n//\n\n// ES-5 15.3.4.5\n// http://es5.github.com/#x15.3.4.5\n\nfunction Empty() {}\n\ndefineProperties(FunctionPrototype, {\n    bind: function bind(that) { // .length is 1\n        // 1. Let Target be the this value.\n        var target = this;\n        // 2. If IsCallable(Target) is false, throw a TypeError exception.\n        if (!isFunction(target)) {\n            throw new TypeError('Function.prototype.bind called on incompatible ' + target);\n        }\n        // 3. Let A be a new (possibly empty) internal list of all of the\n        //   argument values provided after thisArg (arg1, arg2 etc), in order.\n        // XXX slicedArgs will stand in for \"A\" if used\n        var args = array_slice.call(arguments, 1); // for normal call\n        // 4. Let F be a new native ECMAScript object.\n        // 11. Set the [[Prototype]] internal property of F to the standard\n        //   built-in Function prototype object as specified in 15.3.3.1.\n        // 12. Set the [[Call]] internal property of F as described in\n        //   15.3.4.5.1.\n        // 13. Set the [[Construct]] internal property of F as described in\n        //   15.3.4.5.2.\n        // 14. Set the [[HasInstance]] internal property of F as described in\n        //   15.3.4.5.3.\n        var binder = function () {\n\n            if (this instanceof bound) {\n                // 15.3.4.5.2 [[Construct]]\n                // When the [[Construct]] internal method of a function object,\n                // F that was created using the bind function is called with a\n                // list of arguments ExtraArgs, the following steps are taken:\n                // 1. Let target be the value of F's [[TargetFunction]]\n                //   internal property.\n                // 2. If target has no [[Construct]] internal method, a\n                //   TypeError exception is thrown.\n                // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\n                //   property.\n                // 4. Let args be a new list containing the same values as the\n                //   list boundArgs in the same order followed by the same\n                //   values as the list ExtraArgs in the same order.\n                // 5. Return the result of calling the [[Construct]] internal\n                //   method of target providing args as the arguments.\n\n                var result = target.apply(\n                    this,\n                    args.concat(array_slice.call(arguments))\n                );\n                if (Object(result) === result) {\n                    return result;\n                }\n                return this;\n\n            } else {\n                // 15.3.4.5.1 [[Call]]\n                // When the [[Call]] internal method of a function object, F,\n                // which was created using the bind function is called with a\n                // this value and a list of arguments ExtraArgs, the following\n                // steps are taken:\n                // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\n                //   property.\n                // 2. Let boundThis be the value of F's [[BoundThis]] internal\n                //   property.\n                // 3. Let target be the value of F's [[TargetFunction]] internal\n                //   property.\n                // 4. Let args be a new list containing the same values as the\n                //   list boundArgs in the same order followed by the same\n                //   values as the list ExtraArgs in the same order.\n                // 5. Return the result of calling the [[Call]] internal method\n                //   of target providing boundThis as the this value and\n                //   providing args as the arguments.\n\n                // equiv: target.call(this, ...boundArgs, ...args)\n                return target.apply(\n                    that,\n                    args.concat(array_slice.call(arguments))\n                );\n\n            }\n\n        };\n\n        // 15. If the [[Class]] internal property of Target is \"Function\", then\n        //     a. Let L be the length property of Target minus the length of A.\n        //     b. Set the length own property of F to either 0 or L, whichever is\n        //       larger.\n        // 16. Else set the length own property of F to 0.\n\n        var boundLength = Math.max(0, target.length - args.length);\n\n        // 17. Set the attributes of the length own property of F to the values\n        //   specified in 15.3.5.1.\n        var boundArgs = [];\n        for (var i = 0; i < boundLength; i++) {\n            boundArgs.push('$' + i);\n        }\n\n        // XXX Build a dynamic function with desired amount of arguments is the only\n        // way to set the length property of a function.\n        // In environments where Content Security Policies enabled (Chrome extensions,\n        // for ex.) all use of eval or Function costructor throws an exception.\n        // However in all of these environments Function.prototype.bind exists\n        // and so this code will never be executed.\n        var bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\n\n        if (target.prototype) {\n            Empty.prototype = target.prototype;\n            bound.prototype = new Empty();\n            // Clean up dangling references.\n            Empty.prototype = null;\n        }\n\n        // TODO\n        // 18. Set the [[Extensible]] internal property of F to true.\n\n        // TODO\n        // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\n        // 20. Call the [[DefineOwnProperty]] internal method of F with\n        //   arguments \"caller\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\n        //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\n        //   false.\n        // 21. Call the [[DefineOwnProperty]] internal method of F with\n        //   arguments \"arguments\", PropertyDescriptor {[[Get]]: thrower,\n        //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\n        //   and false.\n\n        // TODO\n        // NOTE Function objects created using Function.prototype.bind do not\n        // have a prototype property or the [[Code]], [[FormalParameters]], and\n        // [[Scope]] internal properties.\n        // XXX can't delete prototype in pure-js.\n\n        // 22. Return F.\n        return bound;\n    }\n});\n\n//\n// Array\n// =====\n//\n\n// ES5 15.4.3.2\n// http://es5.github.com/#x15.4.3.2\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray\ndefineProperties(Array, { isArray: isArray });\n\n\nvar boxedString = Object('a');\nvar splitString = boxedString[0] !== 'a' || !(0 in boxedString);\n\nvar properlyBoxesContext = function properlyBoxed(method) {\n    // Check node 0.6.21 bug where third parameter is not boxed\n    var properlyBoxesNonStrict = true;\n    var properlyBoxesStrict = true;\n    if (method) {\n        method.call('foo', function (_, __, context) {\n            if (typeof context !== 'object') { properlyBoxesNonStrict = false; }\n        });\n\n        method.call([1], function () {\n            'use strict';\n            properlyBoxesStrict = typeof this === 'string';\n        }, 'x');\n    }\n    return !!method && properlyBoxesNonStrict && properlyBoxesStrict;\n};\n\ndefineProperties(ArrayPrototype, {\n    forEach: function forEach(fun /*, thisp*/) {\n        var object = toObject(this),\n            self = splitString && isString(this) ? this.split('') : object,\n            thisp = arguments[1],\n            i = -1,\n            length = self.length >>> 0;\n\n        // If no callback function or if callback is not a callable function\n        if (!isFunction(fun)) {\n            throw new TypeError(); // TODO message\n        }\n\n        while (++i < length) {\n            if (i in self) {\n                // Invoke the callback function with call, passing arguments:\n                // context, property value, property key, thisArg object\n                // context\n                fun.call(thisp, self[i], i, object);\n            }\n        }\n    }\n}, !properlyBoxesContext(ArrayPrototype.forEach));\n\n// ES5 15.4.4.14\n// http://es5.github.com/#x15.4.4.14\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf\nvar hasFirefox2IndexOfBug = Array.prototype.indexOf && [0, 1].indexOf(1, 2) !== -1;\ndefineProperties(ArrayPrototype, {\n    indexOf: function indexOf(sought /*, fromIndex */ ) {\n        var self = splitString && isString(this) ? this.split('') : toObject(this),\n            length = self.length >>> 0;\n\n        if (!length) {\n            return -1;\n        }\n\n        var i = 0;\n        if (arguments.length > 1) {\n            i = toInteger(arguments[1]);\n        }\n\n        // handle negative indices\n        i = i >= 0 ? i : Math.max(0, length + i);\n        for (; i < length; i++) {\n            if (i in self && self[i] === sought) {\n                return i;\n            }\n        }\n        return -1;\n    }\n}, hasFirefox2IndexOfBug);\n\n//\n// String\n// ======\n//\n\n// ES5 15.5.4.14\n// http://es5.github.com/#x15.5.4.14\n\n// [bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]\n// Many browsers do not split properly with regular expressions or they\n// do not perform the split correctly under obscure conditions.\n// See http://blog.stevenlevithan.com/archives/cross-browser-split\n// I've tested in many browsers and this seems to cover the deviant ones:\n//    'ab'.split(/(?:ab)*/) should be [\"\", \"\"], not [\"\"]\n//    '.'.split(/(.?)(.?)/) should be [\"\", \".\", \"\", \"\"], not [\"\", \"\"]\n//    'tesst'.split(/(s)*/) should be [\"t\", undefined, \"e\", \"s\", \"t\"], not\n//       [undefined, \"t\", undefined, \"e\", ...]\n//    ''.split(/.?/) should be [], not [\"\"]\n//    '.'.split(/()()/) should be [\".\"], not [\"\", \"\", \".\"]\n\nvar string_split = StringPrototype.split;\nif (\n    'ab'.split(/(?:ab)*/).length !== 2 ||\n    '.'.split(/(.?)(.?)/).length !== 4 ||\n    'tesst'.split(/(s)*/)[1] === 't' ||\n    'test'.split(/(?:)/, -1).length !== 4 ||\n    ''.split(/.?/).length ||\n    '.'.split(/()()/).length > 1\n) {\n    (function () {\n        var compliantExecNpcg = /()??/.exec('')[1] === void 0; // NPCG: nonparticipating capturing group\n\n        StringPrototype.split = function (separator, limit) {\n            var string = this;\n            if (separator === void 0 && limit === 0) {\n                return [];\n            }\n\n            // If `separator` is not a regex, use native split\n            if (_toString.call(separator) !== '[object RegExp]') {\n                return string_split.call(this, separator, limit);\n            }\n\n            var output = [],\n                flags = (separator.ignoreCase ? 'i' : '') +\n                        (separator.multiline  ? 'm' : '') +\n                        (separator.extended   ? 'x' : '') + // Proposed for ES6\n                        (separator.sticky     ? 'y' : ''), // Firefox 3+\n                lastLastIndex = 0,\n                // Make `global` and avoid `lastIndex` issues by working with a copy\n                separator2, match, lastIndex, lastLength;\n            separator = new RegExp(separator.source, flags + 'g');\n            string += ''; // Type-convert\n            if (!compliantExecNpcg) {\n                // Doesn't need flags gy, but they don't hurt\n                separator2 = new RegExp('^' + separator.source + '$(?!\\\\s)', flags);\n            }\n            /* Values for `limit`, per the spec:\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\n             * If 0, Infinity, or NaN: 0\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n             * If other: Type-convert, then use the above rules\n             */\n            limit = limit === void 0 ?\n                -1 >>> 0 : // Math.pow(2, 32) - 1\n                ToUint32(limit);\n            while (match = separator.exec(string)) {\n                // `separator.lastIndex` is not reliable cross-browser\n                lastIndex = match.index + match[0].length;\n                if (lastIndex > lastLastIndex) {\n                    output.push(string.slice(lastLastIndex, match.index));\n                    // Fix browsers whose `exec` methods don't consistently return `undefined` for\n                    // nonparticipating capturing groups\n                    if (!compliantExecNpcg && match.length > 1) {\n                        match[0].replace(separator2, function () {\n                            for (var i = 1; i < arguments.length - 2; i++) {\n                                if (arguments[i] === void 0) {\n                                    match[i] = void 0;\n                                }\n                            }\n                        });\n                    }\n                    if (match.length > 1 && match.index < string.length) {\n                        ArrayPrototype.push.apply(output, match.slice(1));\n                    }\n                    lastLength = match[0].length;\n                    lastLastIndex = lastIndex;\n                    if (output.length >= limit) {\n                        break;\n                    }\n                }\n                if (separator.lastIndex === match.index) {\n                    separator.lastIndex++; // Avoid an infinite loop\n                }\n            }\n            if (lastLastIndex === string.length) {\n                if (lastLength || !separator.test('')) {\n                    output.push('');\n                }\n            } else {\n                output.push(string.slice(lastLastIndex));\n            }\n            return output.length > limit ? output.slice(0, limit) : output;\n        };\n    }());\n\n// [bugfix, chrome]\n// If separator is undefined, then the result array contains just one String,\n// which is the this value (converted to a String). If limit is not undefined,\n// then the output array is truncated so that it contains no more than limit\n// elements.\n// \"0\".split(undefined, 0) -> []\n} else if ('0'.split(void 0, 0).length) {\n    StringPrototype.split = function split(separator, limit) {\n        if (separator === void 0 && limit === 0) { return []; }\n        return string_split.call(this, separator, limit);\n    };\n}\n\n// ES5 15.5.4.20\n// whitespace from: http://es5.github.io/#x15.5.4.20\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n    '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' +\n    '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar wsRegexChars = '[' + ws + ']';\nvar trimBeginRegexp = new RegExp('^' + wsRegexChars + wsRegexChars + '*');\nvar trimEndRegexp = new RegExp(wsRegexChars + wsRegexChars + '*$');\nvar hasTrimWhitespaceBug = StringPrototype.trim && (ws.trim() || !zeroWidth.trim());\ndefineProperties(StringPrototype, {\n    // http://blog.stevenlevithan.com/archives/faster-trim-javascript\n    // http://perfectionkills.com/whitespace-deviations/\n    trim: function trim() {\n        if (this === void 0 || this === null) {\n            throw new TypeError(\"can't convert \" + this + ' to object');\n        }\n        return String(this).replace(trimBeginRegexp, '').replace(trimEndRegexp, '');\n    }\n}, hasTrimWhitespaceBug);\n\n// ECMA-262, 3rd B.2.3\n// Not an ECMAScript standard, although ECMAScript 3rd Edition has a\n// non-normative section suggesting uniform semantics and it should be\n// normalized across all browsers\n// [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE\nvar string_substr = StringPrototype.substr;\nvar hasNegativeSubstrBug = ''.substr && '0b'.substr(-1) !== 'b';\ndefineProperties(StringPrototype, {\n    substr: function substr(start, length) {\n        return string_substr.call(\n            this,\n            start < 0 ? ((start = this.length + start) < 0 ? 0 : start) : start,\n            length\n        );\n    }\n}, hasNegativeSubstrBug);\n//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval("'use strict';\n\nmodule.exports = [\n  // streaming transports\n  __webpack_require__(72)\n, __webpack_require__(74)\n, __webpack_require__(32)\n, __webpack_require__(28)\n, __webpack_require__(17)(__webpack_require__(28))\n\n  // polling transports\n, __webpack_require__(29)\n, __webpack_require__(17)(__webpack_require__(29))\n, __webpack_require__(33)\n, __webpack_require__(73)\n, __webpack_require__(17)(__webpack_require__(33))\n, __webpack_require__(64)\n];\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQtbGlzdC5qcz8yZmFiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gW1xuICAvLyBzdHJlYW1pbmcgdHJhbnNwb3J0c1xuICByZXF1aXJlKCcuL3RyYW5zcG9ydC93ZWJzb2NrZXQnKVxuLCByZXF1aXJlKCcuL3RyYW5zcG9ydC94aHItc3RyZWFtaW5nJylcbiwgcmVxdWlyZSgnLi90cmFuc3BvcnQveGRyLXN0cmVhbWluZycpXG4sIHJlcXVpcmUoJy4vdHJhbnNwb3J0L2V2ZW50c291cmNlJylcbiwgcmVxdWlyZSgnLi90cmFuc3BvcnQvbGliL2lmcmFtZS13cmFwJykocmVxdWlyZSgnLi90cmFuc3BvcnQvZXZlbnRzb3VyY2UnKSlcblxuICAvLyBwb2xsaW5nIHRyYW5zcG9ydHNcbiwgcmVxdWlyZSgnLi90cmFuc3BvcnQvaHRtbGZpbGUnKVxuLCByZXF1aXJlKCcuL3RyYW5zcG9ydC9saWIvaWZyYW1lLXdyYXAnKShyZXF1aXJlKCcuL3RyYW5zcG9ydC9odG1sZmlsZScpKVxuLCByZXF1aXJlKCcuL3RyYW5zcG9ydC94aHItcG9sbGluZycpXG4sIHJlcXVpcmUoJy4vdHJhbnNwb3J0L3hkci1wb2xsaW5nJylcbiwgcmVxdWlyZSgnLi90cmFuc3BvcnQvbGliL2lmcmFtZS13cmFwJykocmVxdWlyZSgnLi90cmFuc3BvcnQveGhyLXBvbGxpbmcnKSlcbiwgcmVxdWlyZSgnLi90cmFuc3BvcnQvanNvbnAtcG9sbGluZycpXG5dO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC1saXN0LmpzXG4gKiogbW9kdWxlIGlkID0gNjJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports){eval("/* WEBPACK VAR INJECTION */(function(global) {module.exports = global.WebSocket || global.MozWebSocket;\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvYnJvd3Nlci93ZWJzb2NrZXQuanM/MDgzZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI2My5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZ2xvYmFsLldlYlNvY2tldCB8fCBnbG9iYWwuTW96V2ViU29ja2V0O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC9icm93c2VyL3dlYnNvY2tldC5qc1xuICoqIG1vZHVsZSBpZCA9IDYzXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n// The simplest and most robust transport, using the well-know cross\n// domain hack - JSONP. This transport is quite inefficient - one\n// message could use up to one http request. But at least it works almost\n// everywhere.\n// Known limitations:\n//   o you will get a spinning cursor\n//   o for Konqueror a dumb timer is needed to detect errors\n\nvar inherits = __webpack_require__(1)\n  , SenderReceiver = __webpack_require__(31)\n  , JsonpReceiver = __webpack_require__(69)\n  , jsonpSender = __webpack_require__(70)\n  ;\n\nfunction JsonPTransport(transUrl) {\n  if (!JsonPTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n  SenderReceiver.call(this, transUrl, '/jsonp', jsonpSender, JsonpReceiver);\n}\n\ninherits(JsonPTransport, SenderReceiver);\n\nJsonPTransport.enabled = function() {\n  return !!global.document;\n};\n\nJsonPTransport.transportName = 'jsonp-polling';\nJsonPTransport.roundTrips = 1;\nJsonPTransport.needBody = true;\n\nmodule.exports = JsonPTransport;\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvanNvbnAtcG9sbGluZy5qcz8yMmRmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vIFRoZSBzaW1wbGVzdCBhbmQgbW9zdCByb2J1c3QgdHJhbnNwb3J0LCB1c2luZyB0aGUgd2VsbC1rbm93IGNyb3NzXG4vLyBkb21haW4gaGFjayAtIEpTT05QLiBUaGlzIHRyYW5zcG9ydCBpcyBxdWl0ZSBpbmVmZmljaWVudCAtIG9uZVxuLy8gbWVzc2FnZSBjb3VsZCB1c2UgdXAgdG8gb25lIGh0dHAgcmVxdWVzdC4gQnV0IGF0IGxlYXN0IGl0IHdvcmtzIGFsbW9zdFxuLy8gZXZlcnl3aGVyZS5cbi8vIEtub3duIGxpbWl0YXRpb25zOlxuLy8gICBvIHlvdSB3aWxsIGdldCBhIHNwaW5uaW5nIGN1cnNvclxuLy8gICBvIGZvciBLb25xdWVyb3IgYSBkdW1iIHRpbWVyIGlzIG5lZWRlZCB0byBkZXRlY3QgZXJyb3JzXG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBTZW5kZXJSZWNlaXZlciA9IHJlcXVpcmUoJy4vbGliL3NlbmRlci1yZWNlaXZlcicpXG4gICwgSnNvbnBSZWNlaXZlciA9IHJlcXVpcmUoJy4vcmVjZWl2ZXIvanNvbnAnKVxuICAsIGpzb25wU2VuZGVyID0gcmVxdWlyZSgnLi9zZW5kZXIvanNvbnAnKVxuICA7XG5cbmZ1bmN0aW9uIEpzb25QVHJhbnNwb3J0KHRyYW5zVXJsKSB7XG4gIGlmICghSnNvblBUcmFuc3BvcnQuZW5hYmxlZCgpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUcmFuc3BvcnQgY3JlYXRlZCB3aGVuIGRpc2FibGVkJyk7XG4gIH1cbiAgU2VuZGVyUmVjZWl2ZXIuY2FsbCh0aGlzLCB0cmFuc1VybCwgJy9qc29ucCcsIGpzb25wU2VuZGVyLCBKc29ucFJlY2VpdmVyKTtcbn1cblxuaW5oZXJpdHMoSnNvblBUcmFuc3BvcnQsIFNlbmRlclJlY2VpdmVyKTtcblxuSnNvblBUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gISFnbG9iYWwuZG9jdW1lbnQ7XG59O1xuXG5Kc29uUFRyYW5zcG9ydC50cmFuc3BvcnROYW1lID0gJ2pzb25wLXBvbGxpbmcnO1xuSnNvblBUcmFuc3BvcnQucm91bmRUcmlwcyA9IDE7XG5Kc29uUFRyYW5zcG9ydC5uZWVkQm9keSA9IHRydWU7XG5cbm1vZHVsZS5leHBvcnRzID0gSnNvblBUcmFuc3BvcnQ7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2pzb25wLXBvbGxpbmcuanNcbiAqKiBtb2R1bGUgaWQgPSA2NFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\nvar inherits = __webpack_require__(1)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:buffered-sender');\n}\n\nfunction BufferedSender(url, sender) {\n  debug(url);\n  EventEmitter.call(this);\n  this.sendBuffer = [];\n  this.sender = sender;\n  this.url = url;\n}\n\ninherits(BufferedSender, EventEmitter);\n\nBufferedSender.prototype.send = function(message) {\n  debug('send', message);\n  this.sendBuffer.push(message);\n  if (!this.sendStop) {\n    this.sendSchedule();\n  }\n};\n\n// For polling transports in a situation when in the message callback,\n// new message is being send. If the sending connection was started\n// before receiving one, it is possible to saturate the network and\n// timeout due to the lack of receiving socket. To avoid that we delay\n// sending messages by some small time, in order to let receiving\n// connection be started beforehand. This is only a halfmeasure and\n// does not fix the big problem, but it does make the tests go more\n// stable on slow networks.\nBufferedSender.prototype.sendScheduleWait = function() {\n  debug('sendScheduleWait');\n  var self = this;\n  var tref;\n  this.sendStop = function() {\n    debug('sendStop');\n    self.sendStop = null;\n    clearTimeout(tref);\n  };\n  tref = setTimeout(function() {\n    debug('timeout');\n    self.sendStop = null;\n    self.sendSchedule();\n  }, 25);\n};\n\nBufferedSender.prototype.sendSchedule = function() {\n  debug('sendSchedule', this.sendBuffer.length);\n  var self = this;\n  if (this.sendBuffer.length > 0) {\n    var payload = '[' + this.sendBuffer.join(',') + ']';\n    this.sendStop = this.sender(this.url, payload, function(err) {\n      self.sendStop = null;\n      if (err) {\n        debug('error', err);\n        self.emit('close', err.code || 1006, 'Sending error: ' + err);\n        self._cleanup();\n      } else {\n        self.sendScheduleWait();\n      }\n    });\n    this.sendBuffer = [];\n  }\n};\n\nBufferedSender.prototype._cleanup = function() {\n  debug('_cleanup');\n  this.removeAllListeners();\n};\n\nBufferedSender.prototype.stop = function() {\n  debug('stop');\n  this._cleanup();\n  if (this.sendStop) {\n    this.sendStop();\n    this.sendStop = null;\n  }\n};\n\nmodule.exports = BufferedSender;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvbGliL2J1ZmZlcmVkLXNlbmRlci5qcz9jY2UwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjY1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDpidWZmZXJlZC1zZW5kZXInKTtcbn1cblxuZnVuY3Rpb24gQnVmZmVyZWRTZW5kZXIodXJsLCBzZW5kZXIpIHtcbiAgZGVidWcodXJsKTtcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG4gIHRoaXMuc2VuZEJ1ZmZlciA9IFtdO1xuICB0aGlzLnNlbmRlciA9IHNlbmRlcjtcbiAgdGhpcy51cmwgPSB1cmw7XG59XG5cbmluaGVyaXRzKEJ1ZmZlcmVkU2VuZGVyLCBFdmVudEVtaXR0ZXIpO1xuXG5CdWZmZXJlZFNlbmRlci5wcm90b3R5cGUuc2VuZCA9IGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgZGVidWcoJ3NlbmQnLCBtZXNzYWdlKTtcbiAgdGhpcy5zZW5kQnVmZmVyLnB1c2gobWVzc2FnZSk7XG4gIGlmICghdGhpcy5zZW5kU3RvcCkge1xuICAgIHRoaXMuc2VuZFNjaGVkdWxlKCk7XG4gIH1cbn07XG5cbi8vIEZvciBwb2xsaW5nIHRyYW5zcG9ydHMgaW4gYSBzaXR1YXRpb24gd2hlbiBpbiB0aGUgbWVzc2FnZSBjYWxsYmFjayxcbi8vIG5ldyBtZXNzYWdlIGlzIGJlaW5nIHNlbmQuIElmIHRoZSBzZW5kaW5nIGNvbm5lY3Rpb24gd2FzIHN0YXJ0ZWRcbi8vIGJlZm9yZSByZWNlaXZpbmcgb25lLCBpdCBpcyBwb3NzaWJsZSB0byBzYXR1cmF0ZSB0aGUgbmV0d29yayBhbmRcbi8vIHRpbWVvdXQgZHVlIHRvIHRoZSBsYWNrIG9mIHJlY2VpdmluZyBzb2NrZXQuIFRvIGF2b2lkIHRoYXQgd2UgZGVsYXlcbi8vIHNlbmRpbmcgbWVzc2FnZXMgYnkgc29tZSBzbWFsbCB0aW1lLCBpbiBvcmRlciB0byBsZXQgcmVjZWl2aW5nXG4vLyBjb25uZWN0aW9uIGJlIHN0YXJ0ZWQgYmVmb3JlaGFuZC4gVGhpcyBpcyBvbmx5IGEgaGFsZm1lYXN1cmUgYW5kXG4vLyBkb2VzIG5vdCBmaXggdGhlIGJpZyBwcm9ibGVtLCBidXQgaXQgZG9lcyBtYWtlIHRoZSB0ZXN0cyBnbyBtb3JlXG4vLyBzdGFibGUgb24gc2xvdyBuZXR3b3Jrcy5cbkJ1ZmZlcmVkU2VuZGVyLnByb3RvdHlwZS5zZW5kU2NoZWR1bGVXYWl0ID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdzZW5kU2NoZWR1bGVXYWl0Jyk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIHRyZWY7XG4gIHRoaXMuc2VuZFN0b3AgPSBmdW5jdGlvbigpIHtcbiAgICBkZWJ1Zygnc2VuZFN0b3AnKTtcbiAgICBzZWxmLnNlbmRTdG9wID0gbnVsbDtcbiAgICBjbGVhclRpbWVvdXQodHJlZik7XG4gIH07XG4gIHRyZWYgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCd0aW1lb3V0Jyk7XG4gICAgc2VsZi5zZW5kU3RvcCA9IG51bGw7XG4gICAgc2VsZi5zZW5kU2NoZWR1bGUoKTtcbiAgfSwgMjUpO1xufTtcblxuQnVmZmVyZWRTZW5kZXIucHJvdG90eXBlLnNlbmRTY2hlZHVsZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1Zygnc2VuZFNjaGVkdWxlJywgdGhpcy5zZW5kQnVmZmVyLmxlbmd0aCk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgaWYgKHRoaXMuc2VuZEJ1ZmZlci5sZW5ndGggPiAwKSB7XG4gICAgdmFyIHBheWxvYWQgPSAnWycgKyB0aGlzLnNlbmRCdWZmZXIuam9pbignLCcpICsgJ10nO1xuICAgIHRoaXMuc2VuZFN0b3AgPSB0aGlzLnNlbmRlcih0aGlzLnVybCwgcGF5bG9hZCwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICBzZWxmLnNlbmRTdG9wID0gbnVsbDtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgZGVidWcoJ2Vycm9yJywgZXJyKTtcbiAgICAgICAgc2VsZi5lbWl0KCdjbG9zZScsIGVyci5jb2RlIHx8IDEwMDYsICdTZW5kaW5nIGVycm9yOiAnICsgZXJyKTtcbiAgICAgICAgc2VsZi5fY2xlYW51cCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2VsZi5zZW5kU2NoZWR1bGVXYWl0KCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5zZW5kQnVmZmVyID0gW107XG4gIH1cbn07XG5cbkJ1ZmZlcmVkU2VuZGVyLnByb3RvdHlwZS5fY2xlYW51cCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnX2NsZWFudXAnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbn07XG5cbkJ1ZmZlcmVkU2VuZGVyLnByb3RvdHlwZS5zdG9wID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdzdG9wJyk7XG4gIHRoaXMuX2NsZWFudXAoKTtcbiAgaWYgKHRoaXMuc2VuZFN0b3ApIHtcbiAgICB0aGlzLnNlbmRTdG9wKCk7XG4gICAgdGhpcy5zZW5kU3RvcCA9IG51bGw7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQnVmZmVyZWRTZW5kZXI7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2xpYi9idWZmZXJlZC1zZW5kZXIuanNcbiAqKiBtb2R1bGUgaWQgPSA2NVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\nvar inherits = __webpack_require__(1)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:polling');\n}\n\nfunction Polling(Receiver, receiveUrl, AjaxObject) {\n  debug(receiveUrl);\n  EventEmitter.call(this);\n  this.Receiver = Receiver;\n  this.receiveUrl = receiveUrl;\n  this.AjaxObject = AjaxObject;\n  this._scheduleReceiver();\n}\n\ninherits(Polling, EventEmitter);\n\nPolling.prototype._scheduleReceiver = function() {\n  debug('_scheduleReceiver');\n  var self = this;\n  var poll = this.poll = new this.Receiver(this.receiveUrl, this.AjaxObject);\n\n  poll.on('message', function(msg) {\n    debug('message', msg);\n    self.emit('message', msg);\n  });\n\n  poll.once('close', function(code, reason) {\n    debug('close', code, reason, self.pollIsClosing);\n    self.poll = poll = null;\n\n    if (!self.pollIsClosing) {\n      if (reason === 'network') {\n        self._scheduleReceiver();\n      } else {\n        self.emit('close', code || 1006, reason);\n        self.removeAllListeners();\n      }\n    }\n  });\n};\n\nPolling.prototype.abort = function() {\n  debug('abort');\n  this.removeAllListeners();\n  this.pollIsClosing = true;\n  if (this.poll) {\n    this.poll.abort();\n  }\n};\n\nmodule.exports = Polling;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvbGliL3BvbGxpbmcuanM/ZmM5MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiI2Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6cG9sbGluZycpO1xufVxuXG5mdW5jdGlvbiBQb2xsaW5nKFJlY2VpdmVyLCByZWNlaXZlVXJsLCBBamF4T2JqZWN0KSB7XG4gIGRlYnVnKHJlY2VpdmVVcmwpO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcbiAgdGhpcy5SZWNlaXZlciA9IFJlY2VpdmVyO1xuICB0aGlzLnJlY2VpdmVVcmwgPSByZWNlaXZlVXJsO1xuICB0aGlzLkFqYXhPYmplY3QgPSBBamF4T2JqZWN0O1xuICB0aGlzLl9zY2hlZHVsZVJlY2VpdmVyKCk7XG59XG5cbmluaGVyaXRzKFBvbGxpbmcsIEV2ZW50RW1pdHRlcik7XG5cblBvbGxpbmcucHJvdG90eXBlLl9zY2hlZHVsZVJlY2VpdmVyID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdfc2NoZWR1bGVSZWNlaXZlcicpO1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBwb2xsID0gdGhpcy5wb2xsID0gbmV3IHRoaXMuUmVjZWl2ZXIodGhpcy5yZWNlaXZlVXJsLCB0aGlzLkFqYXhPYmplY3QpO1xuXG4gIHBvbGwub24oJ21lc3NhZ2UnLCBmdW5jdGlvbihtc2cpIHtcbiAgICBkZWJ1ZygnbWVzc2FnZScsIG1zZyk7XG4gICAgc2VsZi5lbWl0KCdtZXNzYWdlJywgbXNnKTtcbiAgfSk7XG5cbiAgcG9sbC5vbmNlKCdjbG9zZScsIGZ1bmN0aW9uKGNvZGUsIHJlYXNvbikge1xuICAgIGRlYnVnKCdjbG9zZScsIGNvZGUsIHJlYXNvbiwgc2VsZi5wb2xsSXNDbG9zaW5nKTtcbiAgICBzZWxmLnBvbGwgPSBwb2xsID0gbnVsbDtcblxuICAgIGlmICghc2VsZi5wb2xsSXNDbG9zaW5nKSB7XG4gICAgICBpZiAocmVhc29uID09PSAnbmV0d29yaycpIHtcbiAgICAgICAgc2VsZi5fc2NoZWR1bGVSZWNlaXZlcigpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2VsZi5lbWl0KCdjbG9zZScsIGNvZGUgfHwgMTAwNiwgcmVhc29uKTtcbiAgICAgICAgc2VsZi5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufTtcblxuUG9sbGluZy5wcm90b3R5cGUuYWJvcnQgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ2Fib3J0Jyk7XG4gIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gIHRoaXMucG9sbElzQ2xvc2luZyA9IHRydWU7XG4gIGlmICh0aGlzLnBvbGwpIHtcbiAgICB0aGlzLnBvbGwuYWJvcnQoKTtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBQb2xsaW5nO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC9saWIvcG9sbGluZy5qc1xuICoqIG1vZHVsZSBpZCA9IDY2XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\nvar inherits = __webpack_require__(1)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  , EventSourceDriver = __webpack_require__(27)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:receiver:eventsource');\n}\n\nfunction EventSourceReceiver(url) {\n  debug(url);\n  EventEmitter.call(this);\n\n  var self = this;\n  var es = this.es = new EventSourceDriver(url);\n  es.onmessage = function(e) {\n    debug('message', e.data);\n    self.emit('message', decodeURI(e.data));\n  };\n  es.onerror = function(e) {\n    debug('error', es.readyState, e);\n    // ES on reconnection has readyState = 0 or 1.\n    // on network error it's CLOSED = 2\n    var reason = (es.readyState !== 2 ? 'network' : 'permanent');\n    self._cleanup();\n    self._close(reason);\n  };\n}\n\ninherits(EventSourceReceiver, EventEmitter);\n\nEventSourceReceiver.prototype.abort = function() {\n  debug('abort');\n  this._cleanup();\n  this._close('user');\n};\n\nEventSourceReceiver.prototype._cleanup = function() {\n  debug('cleanup');\n  var es = this.es;\n  if (es) {\n    es.onmessage = es.onerror = null;\n    es.close();\n    this.es = null;\n  }\n};\n\nEventSourceReceiver.prototype._close = function(reason) {\n  debug('close', reason);\n  var self = this;\n  // Safari and chrome < 15 crash if we close window before\n  // waiting for ES cleanup. See:\n  // https://code.google.com/p/chromium/issues/detail?id=89155\n  setTimeout(function() {\n    self.emit('close', null, reason);\n    self.removeAllListeners();\n  }, 200);\n};\n\nmodule.exports = EventSourceReceiver;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvcmVjZWl2ZXIvZXZlbnRzb3VyY2UuanM/Nzg2MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsImZpbGUiOiI2Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIEV2ZW50U291cmNlRHJpdmVyID0gcmVxdWlyZSgnZXZlbnRzb3VyY2UnKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6cmVjZWl2ZXI6ZXZlbnRzb3VyY2UnKTtcbn1cblxuZnVuY3Rpb24gRXZlbnRTb3VyY2VSZWNlaXZlcih1cmwpIHtcbiAgZGVidWcodXJsKTtcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG5cbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgZXMgPSB0aGlzLmVzID0gbmV3IEV2ZW50U291cmNlRHJpdmVyKHVybCk7XG4gIGVzLm9ubWVzc2FnZSA9IGZ1bmN0aW9uKGUpIHtcbiAgICBkZWJ1ZygnbWVzc2FnZScsIGUuZGF0YSk7XG4gICAgc2VsZi5lbWl0KCdtZXNzYWdlJywgZGVjb2RlVVJJKGUuZGF0YSkpO1xuICB9O1xuICBlcy5vbmVycm9yID0gZnVuY3Rpb24oZSkge1xuICAgIGRlYnVnKCdlcnJvcicsIGVzLnJlYWR5U3RhdGUsIGUpO1xuICAgIC8vIEVTIG9uIHJlY29ubmVjdGlvbiBoYXMgcmVhZHlTdGF0ZSA9IDAgb3IgMS5cbiAgICAvLyBvbiBuZXR3b3JrIGVycm9yIGl0J3MgQ0xPU0VEID0gMlxuICAgIHZhciByZWFzb24gPSAoZXMucmVhZHlTdGF0ZSAhPT0gMiA/ICduZXR3b3JrJyA6ICdwZXJtYW5lbnQnKTtcbiAgICBzZWxmLl9jbGVhbnVwKCk7XG4gICAgc2VsZi5fY2xvc2UocmVhc29uKTtcbiAgfTtcbn1cblxuaW5oZXJpdHMoRXZlbnRTb3VyY2VSZWNlaXZlciwgRXZlbnRFbWl0dGVyKTtcblxuRXZlbnRTb3VyY2VSZWNlaXZlci5wcm90b3R5cGUuYWJvcnQgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ2Fib3J0Jyk7XG4gIHRoaXMuX2NsZWFudXAoKTtcbiAgdGhpcy5fY2xvc2UoJ3VzZXInKTtcbn07XG5cbkV2ZW50U291cmNlUmVjZWl2ZXIucHJvdG90eXBlLl9jbGVhbnVwID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdjbGVhbnVwJyk7XG4gIHZhciBlcyA9IHRoaXMuZXM7XG4gIGlmIChlcykge1xuICAgIGVzLm9ubWVzc2FnZSA9IGVzLm9uZXJyb3IgPSBudWxsO1xuICAgIGVzLmNsb3NlKCk7XG4gICAgdGhpcy5lcyA9IG51bGw7XG4gIH1cbn07XG5cbkV2ZW50U291cmNlUmVjZWl2ZXIucHJvdG90eXBlLl9jbG9zZSA9IGZ1bmN0aW9uKHJlYXNvbikge1xuICBkZWJ1ZygnY2xvc2UnLCByZWFzb24pO1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIC8vIFNhZmFyaSBhbmQgY2hyb21lIDwgMTUgY3Jhc2ggaWYgd2UgY2xvc2Ugd2luZG93IGJlZm9yZVxuICAvLyB3YWl0aW5nIGZvciBFUyBjbGVhbnVwLiBTZWU6XG4gIC8vIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD04OTE1NVxuICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIHNlbGYuZW1pdCgnY2xvc2UnLCBudWxsLCByZWFzb24pO1xuICAgIHNlbGYucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gIH0sIDIwMCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50U291cmNlUmVjZWl2ZXI7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3JlY2VpdmVyL2V2ZW50c291cmNlLmpzXG4gKiogbW9kdWxlIGlkID0gNjdcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process, global) {'use strict';\n\nvar inherits = __webpack_require__(1)\n  , iframeUtils = __webpack_require__(12)\n  , urlUtils = __webpack_require__(5)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  , random = __webpack_require__(9)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:receiver:htmlfile');\n}\n\nfunction HtmlfileReceiver(url) {\n  debug(url);\n  EventEmitter.call(this);\n  var self = this;\n  iframeUtils.polluteGlobalNamespace();\n\n  this.id = 'a' + random.string(6);\n  url = urlUtils.addQuery(url, 'c=' + decodeURIComponent(iframeUtils.WPrefix + '.' + this.id));\n\n  debug('using htmlfile', HtmlfileReceiver.htmlfileEnabled);\n  var constructFunc = HtmlfileReceiver.htmlfileEnabled ?\n      iframeUtils.createHtmlfile : iframeUtils.createIframe;\n\n  global[iframeUtils.WPrefix][this.id] = {\n    start: function() {\n      debug('start');\n      self.iframeObj.loaded();\n    }\n  , message: function(data) {\n      debug('message', data);\n      self.emit('message', data);\n    }\n  , stop: function() {\n      debug('stop');\n      self._cleanup();\n      self._close('network');\n    }\n  };\n  this.iframeObj = constructFunc(url, function() {\n    debug('callback');\n    self._cleanup();\n    self._close('permanent');\n  });\n}\n\ninherits(HtmlfileReceiver, EventEmitter);\n\nHtmlfileReceiver.prototype.abort = function() {\n  debug('abort');\n  this._cleanup();\n  this._close('user');\n};\n\nHtmlfileReceiver.prototype._cleanup = function() {\n  debug('_cleanup');\n  if (this.iframeObj) {\n    this.iframeObj.cleanup();\n    this.iframeObj = null;\n  }\n  delete global[iframeUtils.WPrefix][this.id];\n};\n\nHtmlfileReceiver.prototype._close = function(reason) {\n  debug('_close', reason);\n  this.emit('close', null, reason);\n  this.removeAllListeners();\n};\n\nHtmlfileReceiver.htmlfileEnabled = false;\n\n// obfuscate to avoid firewalls\nvar axo = ['Active'].concat('Object').join('X');\nif (axo in global) {\n  try {\n    HtmlfileReceiver.htmlfileEnabled = !!new global[axo]('htmlfile');\n  } catch (x) {}\n}\n\nHtmlfileReceiver.enabled = HtmlfileReceiver.htmlfileEnabled || iframeUtils.iframeEnabled;\n\nmodule.exports = HtmlfileReceiver;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvcmVjZWl2ZXIvaHRtbGZpbGUuanM/MjNhMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBOztBQUVBIiwiZmlsZSI6IjY4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgaWZyYW1lVXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy9pZnJhbWUnKVxuICAsIHVybFV0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvdXJsJylcbiAgLCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgLCByYW5kb20gPSByZXF1aXJlKCcuLi8uLi91dGlscy9yYW5kb20nKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6cmVjZWl2ZXI6aHRtbGZpbGUnKTtcbn1cblxuZnVuY3Rpb24gSHRtbGZpbGVSZWNlaXZlcih1cmwpIHtcbiAgZGVidWcodXJsKTtcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgaWZyYW1lVXRpbHMucG9sbHV0ZUdsb2JhbE5hbWVzcGFjZSgpO1xuXG4gIHRoaXMuaWQgPSAnYScgKyByYW5kb20uc3RyaW5nKDYpO1xuICB1cmwgPSB1cmxVdGlscy5hZGRRdWVyeSh1cmwsICdjPScgKyBkZWNvZGVVUklDb21wb25lbnQoaWZyYW1lVXRpbHMuV1ByZWZpeCArICcuJyArIHRoaXMuaWQpKTtcblxuICBkZWJ1ZygndXNpbmcgaHRtbGZpbGUnLCBIdG1sZmlsZVJlY2VpdmVyLmh0bWxmaWxlRW5hYmxlZCk7XG4gIHZhciBjb25zdHJ1Y3RGdW5jID0gSHRtbGZpbGVSZWNlaXZlci5odG1sZmlsZUVuYWJsZWQgP1xuICAgICAgaWZyYW1lVXRpbHMuY3JlYXRlSHRtbGZpbGUgOiBpZnJhbWVVdGlscy5jcmVhdGVJZnJhbWU7XG5cbiAgZ2xvYmFsW2lmcmFtZVV0aWxzLldQcmVmaXhdW3RoaXMuaWRdID0ge1xuICAgIHN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIGRlYnVnKCdzdGFydCcpO1xuICAgICAgc2VsZi5pZnJhbWVPYmoubG9hZGVkKCk7XG4gICAgfVxuICAsIG1lc3NhZ2U6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIGRlYnVnKCdtZXNzYWdlJywgZGF0YSk7XG4gICAgICBzZWxmLmVtaXQoJ21lc3NhZ2UnLCBkYXRhKTtcbiAgICB9XG4gICwgc3RvcDogZnVuY3Rpb24oKSB7XG4gICAgICBkZWJ1Zygnc3RvcCcpO1xuICAgICAgc2VsZi5fY2xlYW51cCgpO1xuICAgICAgc2VsZi5fY2xvc2UoJ25ldHdvcmsnKTtcbiAgICB9XG4gIH07XG4gIHRoaXMuaWZyYW1lT2JqID0gY29uc3RydWN0RnVuYyh1cmwsIGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdjYWxsYmFjaycpO1xuICAgIHNlbGYuX2NsZWFudXAoKTtcbiAgICBzZWxmLl9jbG9zZSgncGVybWFuZW50Jyk7XG4gIH0pO1xufVxuXG5pbmhlcml0cyhIdG1sZmlsZVJlY2VpdmVyLCBFdmVudEVtaXR0ZXIpO1xuXG5IdG1sZmlsZVJlY2VpdmVyLnByb3RvdHlwZS5hYm9ydCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnYWJvcnQnKTtcbiAgdGhpcy5fY2xlYW51cCgpO1xuICB0aGlzLl9jbG9zZSgndXNlcicpO1xufTtcblxuSHRtbGZpbGVSZWNlaXZlci5wcm90b3R5cGUuX2NsZWFudXAgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ19jbGVhbnVwJyk7XG4gIGlmICh0aGlzLmlmcmFtZU9iaikge1xuICAgIHRoaXMuaWZyYW1lT2JqLmNsZWFudXAoKTtcbiAgICB0aGlzLmlmcmFtZU9iaiA9IG51bGw7XG4gIH1cbiAgZGVsZXRlIGdsb2JhbFtpZnJhbWVVdGlscy5XUHJlZml4XVt0aGlzLmlkXTtcbn07XG5cbkh0bWxmaWxlUmVjZWl2ZXIucHJvdG90eXBlLl9jbG9zZSA9IGZ1bmN0aW9uKHJlYXNvbikge1xuICBkZWJ1ZygnX2Nsb3NlJywgcmVhc29uKTtcbiAgdGhpcy5lbWl0KCdjbG9zZScsIG51bGwsIHJlYXNvbik7XG4gIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG59O1xuXG5IdG1sZmlsZVJlY2VpdmVyLmh0bWxmaWxlRW5hYmxlZCA9IGZhbHNlO1xuXG4vLyBvYmZ1c2NhdGUgdG8gYXZvaWQgZmlyZXdhbGxzXG52YXIgYXhvID0gWydBY3RpdmUnXS5jb25jYXQoJ09iamVjdCcpLmpvaW4oJ1gnKTtcbmlmIChheG8gaW4gZ2xvYmFsKSB7XG4gIHRyeSB7XG4gICAgSHRtbGZpbGVSZWNlaXZlci5odG1sZmlsZUVuYWJsZWQgPSAhIW5ldyBnbG9iYWxbYXhvXSgnaHRtbGZpbGUnKTtcbiAgfSBjYXRjaCAoeCkge31cbn1cblxuSHRtbGZpbGVSZWNlaXZlci5lbmFibGVkID0gSHRtbGZpbGVSZWNlaXZlci5odG1sZmlsZUVuYWJsZWQgfHwgaWZyYW1lVXRpbHMuaWZyYW1lRW5hYmxlZDtcblxubW9kdWxlLmV4cG9ydHMgPSBIdG1sZmlsZVJlY2VpdmVyO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC9yZWNlaXZlci9odG1sZmlsZS5qc1xuICoqIG1vZHVsZSBpZCA9IDY4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process, global) {'use strict';\n\nvar utils = __webpack_require__(12)\n  , random = __webpack_require__(9)\n  , browser = __webpack_require__(11)\n  , urlUtils = __webpack_require__(5)\n  , inherits = __webpack_require__(1)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:receiver:jsonp');\n}\n\nfunction JsonpReceiver(url) {\n  debug(url);\n  var self = this;\n  EventEmitter.call(this);\n\n  utils.polluteGlobalNamespace();\n\n  this.id = 'a' + random.string(6);\n  var urlWithId = urlUtils.addQuery(url, 'c=' + encodeURIComponent(utils.WPrefix + '.' + this.id));\n\n  global[utils.WPrefix][this.id] = this._callback.bind(this);\n  this._createScript(urlWithId);\n\n  // Fallback mostly for Konqueror - stupid timer, 35 seconds shall be plenty.\n  this.timeoutId = setTimeout(function() {\n    debug('timeout');\n    self._abort(new Error('JSONP script loaded abnormally (timeout)'));\n  }, JsonpReceiver.timeout);\n}\n\ninherits(JsonpReceiver, EventEmitter);\n\nJsonpReceiver.prototype.abort = function() {\n  debug('abort');\n  if (global[utils.WPrefix][this.id]) {\n    var err = new Error('JSONP user aborted read');\n    err.code = 1000;\n    this._abort(err);\n  }\n};\n\nJsonpReceiver.timeout = 35000;\nJsonpReceiver.scriptErrorTimeout = 1000;\n\nJsonpReceiver.prototype._callback = function(data) {\n  debug('_callback', data);\n  this._cleanup();\n\n  if (this.aborting) {\n    return;\n  }\n\n  if (data) {\n    debug('message', data);\n    this.emit('message', data);\n  }\n  this.emit('close', null, 'network');\n  this.removeAllListeners();\n};\n\nJsonpReceiver.prototype._abort = function(err) {\n  debug('_abort', err);\n  this._cleanup();\n  this.aborting = true;\n  this.emit('close', err.code, err.message);\n  this.removeAllListeners();\n};\n\nJsonpReceiver.prototype._cleanup = function() {\n  debug('_cleanup');\n  clearTimeout(this.timeoutId);\n  if (this.script2) {\n    this.script2.parentNode.removeChild(this.script2);\n    this.script2 = null;\n  }\n  if (this.script) {\n    var script = this.script;\n    // Unfortunately, you can't really abort script loading of\n    // the script.\n    script.parentNode.removeChild(script);\n    script.onreadystatechange = script.onerror =\n        script.onload = script.onclick = null;\n    this.script = null;\n  }\n  delete global[utils.WPrefix][this.id];\n};\n\nJsonpReceiver.prototype._scriptError = function() {\n  debug('_scriptError');\n  var self = this;\n  if (this.errorTimer) {\n    return;\n  }\n\n  this.errorTimer = setTimeout(function() {\n    if (!self.loadedOkay) {\n      self._abort(new Error('JSONP script loaded abnormally (onerror)'));\n    }\n  }, JsonpReceiver.scriptErrorTimeout);\n};\n\nJsonpReceiver.prototype._createScript = function(url) {\n  debug('_createScript', url);\n  var self = this;\n  var script = this.script = global.document.createElement('script');\n  var script2;  // Opera synchronous load trick.\n\n  script.id = 'a' + random.string(8);\n  script.src = url;\n  script.type = 'text/javascript';\n  script.charset = 'UTF-8';\n  script.onerror = this._scriptError.bind(this);\n  script.onload = function() {\n    debug('onload');\n    self._abort(new Error('JSONP script loaded abnormally (onload)'));\n  };\n\n  // IE9 fires 'error' event after onreadystatechange or before, in random order.\n  // Use loadedOkay to determine if actually errored\n  script.onreadystatechange = function() {\n    debug('onreadystatechange', script.readyState);\n    if (/loaded|closed/.test(script.readyState)) {\n      if (script && script.htmlFor && script.onclick) {\n        self.loadedOkay = true;\n        try {\n          // In IE, actually execute the script.\n          script.onclick();\n        } catch (x) {}\n      }\n      if (script) {\n        self._abort(new Error('JSONP script loaded abnormally (onreadystatechange)'));\n      }\n    }\n  };\n  // IE: event/htmlFor/onclick trick.\n  // One can't rely on proper order for onreadystatechange. In order to\n  // make sure, set a 'htmlFor' and 'event' properties, so that\n  // script code will be installed as 'onclick' handler for the\n  // script object. Later, onreadystatechange, manually execute this\n  // code. FF and Chrome doesn't work with 'event' and 'htmlFor'\n  // set. For reference see:\n  //   http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html\n  // Also, read on that about script ordering:\n  //   http://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order\n  if (typeof script.async === 'undefined' && global.document.attachEvent) {\n    // According to mozilla docs, in recent browsers script.async defaults\n    // to 'true', so we may use it to detect a good browser:\n    // https://developer.mozilla.org/en/HTML/Element/script\n    if (!browser.isOpera()) {\n      // Naively assume we're in IE\n      try {\n        script.htmlFor = script.id;\n        script.event = 'onclick';\n      } catch (x) {}\n      script.async = true;\n    } else {\n      // Opera, second sync script hack\n      script2 = this.script2 = global.document.createElement('script');\n      script2.text = \"try{var a = document.getElementById('\" + script.id + \"'); if(a)a.onerror();}catch(x){};\";\n      script.async = script2.async = false;\n    }\n  }\n  if (typeof script.async !== 'undefined') {\n    script.async = true;\n  }\n\n  var head = global.document.getElementsByTagName('head')[0];\n  head.insertBefore(script, head.firstChild);\n  if (script2) {\n    head.insertBefore(script2, head.firstChild);\n  }\n};\n\nmodule.exports = JsonpReceiver;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process, global) {'use strict';\n\nvar random = __webpack_require__(9)\n  , urlUtils = __webpack_require__(5)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:sender:jsonp');\n}\n\nvar form, area;\n\nfunction createIframe(id) {\n  debug('createIframe', id);\n  try {\n    // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n    return global.document.createElement('<iframe name=\"' + id + '\">');\n  } catch (x) {\n    var iframe = global.document.createElement('iframe');\n    iframe.name = id;\n    return iframe;\n  }\n}\n\nfunction createForm() {\n  debug('createForm');\n  form = global.document.createElement('form');\n  form.style.display = 'none';\n  form.style.position = 'absolute';\n  form.method = 'POST';\n  form.enctype = 'application/x-www-form-urlencoded';\n  form.acceptCharset = 'UTF-8';\n\n  area = global.document.createElement('textarea');\n  area.name = 'd';\n  form.appendChild(area);\n\n  global.document.body.appendChild(form);\n}\n\nmodule.exports = function(url, payload, callback) {\n  debug(url, payload);\n  if (!form) {\n    createForm();\n  }\n  var id = 'a' + random.string(8);\n  form.target = id;\n  form.action = urlUtils.addQuery(urlUtils.addPath(url, '/jsonp_send'), 'i=' + id);\n\n  var iframe = createIframe(id);\n  iframe.id = id;\n  iframe.style.display = 'none';\n  form.appendChild(iframe);\n\n  try {\n    area.value = payload;\n  } catch (e) {\n    // seriously broken browsers get here\n  }\n  form.submit();\n\n  var completed = function(err) {\n    debug('completed', id, err);\n    if (!iframe.onerror) {\n      return;\n    }\n    iframe.onreadystatechange = iframe.onerror = iframe.onload = null;\n    // Opera mini doesn't like if we GC iframe\n    // immediately, thus this timeout.\n    setTimeout(function() {\n      debug('cleaning up', id);\n      iframe.parentNode.removeChild(iframe);\n      iframe = null;\n    }, 500);\n    area.value = '';\n    // It is not possible to detect if the iframe succeeded or\n    // failed to submit our form.\n    callback(err);\n  };\n  iframe.onerror = function() {\n    debug('onerror', id);\n    completed();\n  };\n  iframe.onload = function() {\n    debug('onload', id);\n    completed();\n  };\n  iframe.onreadystatechange = function(e) {\n    debug('onreadystatechange', id, iframe.readyState, e);\n    if (iframe.readyState === 'complete') {\n      completed();\n    }\n  };\n  return function() {\n    debug('aborted', id);\n    completed(new Error('Aborted'));\n  };\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvc2VuZGVyL2pzb25wLmpzP2Q1MjgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI3MC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHJhbmRvbSA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL3JhbmRvbScpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy91cmwnKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6c2VuZGVyOmpzb25wJyk7XG59XG5cbnZhciBmb3JtLCBhcmVhO1xuXG5mdW5jdGlvbiBjcmVhdGVJZnJhbWUoaWQpIHtcbiAgZGVidWcoJ2NyZWF0ZUlmcmFtZScsIGlkKTtcbiAgdHJ5IHtcbiAgICAvLyBpZTYgZHluYW1pYyBpZnJhbWVzIHdpdGggdGFyZ2V0PVwiXCIgc3VwcG9ydCAodGhhbmtzIENocmlzIExhbWJhY2hlcilcbiAgICByZXR1cm4gZ2xvYmFsLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJzxpZnJhbWUgbmFtZT1cIicgKyBpZCArICdcIj4nKTtcbiAgfSBjYXRjaCAoeCkge1xuICAgIHZhciBpZnJhbWUgPSBnbG9iYWwuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG4gICAgaWZyYW1lLm5hbWUgPSBpZDtcbiAgICByZXR1cm4gaWZyYW1lO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUZvcm0oKSB7XG4gIGRlYnVnKCdjcmVhdGVGb3JtJyk7XG4gIGZvcm0gPSBnbG9iYWwuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpO1xuICBmb3JtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gIGZvcm0uc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xuICBmb3JtLm1ldGhvZCA9ICdQT1NUJztcbiAgZm9ybS5lbmN0eXBlID0gJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCc7XG4gIGZvcm0uYWNjZXB0Q2hhcnNldCA9ICdVVEYtOCc7XG5cbiAgYXJlYSA9IGdsb2JhbC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZXh0YXJlYScpO1xuICBhcmVhLm5hbWUgPSAnZCc7XG4gIGZvcm0uYXBwZW5kQ2hpbGQoYXJlYSk7XG5cbiAgZ2xvYmFsLmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZm9ybSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXJsLCBwYXlsb2FkLCBjYWxsYmFjaykge1xuICBkZWJ1Zyh1cmwsIHBheWxvYWQpO1xuICBpZiAoIWZvcm0pIHtcbiAgICBjcmVhdGVGb3JtKCk7XG4gIH1cbiAgdmFyIGlkID0gJ2EnICsgcmFuZG9tLnN0cmluZyg4KTtcbiAgZm9ybS50YXJnZXQgPSBpZDtcbiAgZm9ybS5hY3Rpb24gPSB1cmxVdGlscy5hZGRRdWVyeSh1cmxVdGlscy5hZGRQYXRoKHVybCwgJy9qc29ucF9zZW5kJyksICdpPScgKyBpZCk7XG5cbiAgdmFyIGlmcmFtZSA9IGNyZWF0ZUlmcmFtZShpZCk7XG4gIGlmcmFtZS5pZCA9IGlkO1xuICBpZnJhbWUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgZm9ybS5hcHBlbmRDaGlsZChpZnJhbWUpO1xuXG4gIHRyeSB7XG4gICAgYXJlYS52YWx1ZSA9IHBheWxvYWQ7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBzZXJpb3VzbHkgYnJva2VuIGJyb3dzZXJzIGdldCBoZXJlXG4gIH1cbiAgZm9ybS5zdWJtaXQoKTtcblxuICB2YXIgY29tcGxldGVkID0gZnVuY3Rpb24oZXJyKSB7XG4gICAgZGVidWcoJ2NvbXBsZXRlZCcsIGlkLCBlcnIpO1xuICAgIGlmICghaWZyYW1lLm9uZXJyb3IpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWZyYW1lLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGlmcmFtZS5vbmVycm9yID0gaWZyYW1lLm9ubG9hZCA9IG51bGw7XG4gICAgLy8gT3BlcmEgbWluaSBkb2Vzbid0IGxpa2UgaWYgd2UgR0MgaWZyYW1lXG4gICAgLy8gaW1tZWRpYXRlbHksIHRodXMgdGhpcyB0aW1lb3V0LlxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICBkZWJ1ZygnY2xlYW5pbmcgdXAnLCBpZCk7XG4gICAgICBpZnJhbWUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChpZnJhbWUpO1xuICAgICAgaWZyYW1lID0gbnVsbDtcbiAgICB9LCA1MDApO1xuICAgIGFyZWEudmFsdWUgPSAnJztcbiAgICAvLyBJdCBpcyBub3QgcG9zc2libGUgdG8gZGV0ZWN0IGlmIHRoZSBpZnJhbWUgc3VjY2VlZGVkIG9yXG4gICAgLy8gZmFpbGVkIHRvIHN1Ym1pdCBvdXIgZm9ybS5cbiAgICBjYWxsYmFjayhlcnIpO1xuICB9O1xuICBpZnJhbWUub25lcnJvciA9IGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdvbmVycm9yJywgaWQpO1xuICAgIGNvbXBsZXRlZCgpO1xuICB9O1xuICBpZnJhbWUub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgZGVidWcoJ29ubG9hZCcsIGlkKTtcbiAgICBjb21wbGV0ZWQoKTtcbiAgfTtcbiAgaWZyYW1lLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKGUpIHtcbiAgICBkZWJ1Zygnb25yZWFkeXN0YXRlY2hhbmdlJywgaWQsIGlmcmFtZS5yZWFkeVN0YXRlLCBlKTtcbiAgICBpZiAoaWZyYW1lLnJlYWR5U3RhdGUgPT09ICdjb21wbGV0ZScpIHtcbiAgICAgIGNvbXBsZXRlZCgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdhYm9ydGVkJywgaWQpO1xuICAgIGNvbXBsZXRlZChuZXcgRXJyb3IoJ0Fib3J0ZWQnKSk7XG4gIH07XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC9zZW5kZXIvanNvbnAuanNcbiAqKiBtb2R1bGUgaWQgPSA3MFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar EventEmitter = __webpack_require__(4).EventEmitter\n  , inherits = __webpack_require__(1)\n  ;\n\nfunction XHRFake(/* method, url, payload, opts */) {\n  var self = this;\n  EventEmitter.call(this);\n\n  this.to = setTimeout(function() {\n    self.emit('finish', 200, '{}');\n  }, XHRFake.timeout);\n}\n\ninherits(XHRFake, EventEmitter);\n\nXHRFake.prototype.close = function() {\n  clearTimeout(this.to);\n};\n\nXHRFake.timeout = 2000;\n\nmodule.exports = XHRFake;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvc2VuZGVyL3hoci1mYWtlLmpzPzA3NDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdDQUFnQztBQUNoQyxHQUFHO0FBQ0g7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBIiwiZmlsZSI6IjcxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gICwgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gIDtcblxuZnVuY3Rpb24gWEhSRmFrZSgvKiBtZXRob2QsIHVybCwgcGF5bG9hZCwgb3B0cyAqLykge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuXG4gIHRoaXMudG8gPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIHNlbGYuZW1pdCgnZmluaXNoJywgMjAwLCAne30nKTtcbiAgfSwgWEhSRmFrZS50aW1lb3V0KTtcbn1cblxuaW5oZXJpdHMoWEhSRmFrZSwgRXZlbnRFbWl0dGVyKTtcblxuWEhSRmFrZS5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgY2xlYXJUaW1lb3V0KHRoaXMudG8pO1xufTtcblxuWEhSRmFrZS50aW1lb3V0ID0gMjAwMDtcblxubW9kdWxlLmV4cG9ydHMgPSBYSFJGYWtlO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC9zZW5kZXIveGhyLWZha2UuanNcbiAqKiBtb2R1bGUgaWQgPSA3MVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\nvar utils = __webpack_require__(7)\n  , urlUtils = __webpack_require__(5)\n  , inherits = __webpack_require__(1)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  , WebsocketDriver = __webpack_require__(63)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:websocket');\n}\n\nfunction WebSocketTransport(transUrl) {\n  if (!WebSocketTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n\n  EventEmitter.call(this);\n  debug('constructor', transUrl);\n\n  var self = this;\n  var url = urlUtils.addPath(transUrl, '/websocket');\n  if (url.slice(0, 5) === 'https') {\n    url = 'wss' + url.slice(5);\n  } else {\n    url = 'ws' + url.slice(4);\n  }\n  this.url = url;\n\n  this.ws = new WebsocketDriver(this.url);\n  this.ws.onmessage = function(e) {\n    debug('message event', e.data);\n    self.emit('message', e.data);\n  };\n  // Firefox has an interesting bug. If a websocket connection is\n  // created after onunload, it stays alive even when user\n  // navigates away from the page. In such situation let's lie -\n  // let's not open the ws connection at all. See:\n  // https://github.com/sockjs/sockjs-client/issues/28\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=696085\n  this.unloadRef = utils.unloadAdd(function() {\n    debug('unload');\n    self.ws.close();\n  });\n  this.ws.onclose = function(e) {\n    debug('close event', e.code, e.reason);\n    self.emit('close', e.code, e.reason);\n    self._cleanup();\n  };\n  this.ws.onerror = function(e) {\n    debug('error event', e);\n    self.emit('close', 1006, 'WebSocket connection broken');\n    self._cleanup();\n  };\n}\n\ninherits(WebSocketTransport, EventEmitter);\n\nWebSocketTransport.prototype.send = function(data) {\n  var msg = '[' + data + ']';\n  debug('send', msg);\n  this.ws.send(msg);\n};\n\nWebSocketTransport.prototype.close = function() {\n  debug('close');\n  if (this.ws) {\n    this.ws.close();\n  }\n  this._cleanup();\n};\n\nWebSocketTransport.prototype._cleanup = function() {\n  debug('_cleanup');\n  var ws = this.ws;\n  if (ws) {\n    ws.onmessage = ws.onclose = ws.onerror = null;\n  }\n  utils.unloadDel(this.unloadRef);\n  this.unloadRef = this.ws = null;\n  this.removeAllListeners();\n};\n\nWebSocketTransport.enabled = function() {\n  debug('enabled');\n  return !!WebsocketDriver;\n};\nWebSocketTransport.transportName = 'websocket';\n\n// In theory, ws should require 1 round trip. But in chrome, this is\n// not very stable over SSL. Most likely a ws connection requires a\n// separate SSL connection, in which case 2 round trips are an\n// absolute minumum.\nWebSocketTransport.roundTrips = 2;\n\nmodule.exports = WebSocketTransport;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvd2Vic29ja2V0LmpzPzVkNTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiI3Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMvZXZlbnQnKVxuICAsIHVybFV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMvdXJsJylcbiAgLCBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgLCBXZWJzb2NrZXREcml2ZXIgPSByZXF1aXJlKCcuL2RyaXZlci93ZWJzb2NrZXQnKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6d2Vic29ja2V0Jyk7XG59XG5cbmZ1bmN0aW9uIFdlYlNvY2tldFRyYW5zcG9ydCh0cmFuc1VybCkge1xuICBpZiAoIVdlYlNvY2tldFRyYW5zcG9ydC5lbmFibGVkKCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyYW5zcG9ydCBjcmVhdGVkIHdoZW4gZGlzYWJsZWQnKTtcbiAgfVxuXG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuICBkZWJ1ZygnY29uc3RydWN0b3InLCB0cmFuc1VybCk7XG5cbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgdXJsID0gdXJsVXRpbHMuYWRkUGF0aCh0cmFuc1VybCwgJy93ZWJzb2NrZXQnKTtcbiAgaWYgKHVybC5zbGljZSgwLCA1KSA9PT0gJ2h0dHBzJykge1xuICAgIHVybCA9ICd3c3MnICsgdXJsLnNsaWNlKDUpO1xuICB9IGVsc2Uge1xuICAgIHVybCA9ICd3cycgKyB1cmwuc2xpY2UoNCk7XG4gIH1cbiAgdGhpcy51cmwgPSB1cmw7XG5cbiAgdGhpcy53cyA9IG5ldyBXZWJzb2NrZXREcml2ZXIodGhpcy51cmwpO1xuICB0aGlzLndzLm9ubWVzc2FnZSA9IGZ1bmN0aW9uKGUpIHtcbiAgICBkZWJ1ZygnbWVzc2FnZSBldmVudCcsIGUuZGF0YSk7XG4gICAgc2VsZi5lbWl0KCdtZXNzYWdlJywgZS5kYXRhKTtcbiAgfTtcbiAgLy8gRmlyZWZveCBoYXMgYW4gaW50ZXJlc3RpbmcgYnVnLiBJZiBhIHdlYnNvY2tldCBjb25uZWN0aW9uIGlzXG4gIC8vIGNyZWF0ZWQgYWZ0ZXIgb251bmxvYWQsIGl0IHN0YXlzIGFsaXZlIGV2ZW4gd2hlbiB1c2VyXG4gIC8vIG5hdmlnYXRlcyBhd2F5IGZyb20gdGhlIHBhZ2UuIEluIHN1Y2ggc2l0dWF0aW9uIGxldCdzIGxpZSAtXG4gIC8vIGxldCdzIG5vdCBvcGVuIHRoZSB3cyBjb25uZWN0aW9uIGF0IGFsbC4gU2VlOlxuICAvLyBodHRwczovL2dpdGh1Yi5jb20vc29ja2pzL3NvY2tqcy1jbGllbnQvaXNzdWVzLzI4XG4gIC8vIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTY5NjA4NVxuICB0aGlzLnVubG9hZFJlZiA9IHV0aWxzLnVubG9hZEFkZChmdW5jdGlvbigpIHtcbiAgICBkZWJ1ZygndW5sb2FkJyk7XG4gICAgc2VsZi53cy5jbG9zZSgpO1xuICB9KTtcbiAgdGhpcy53cy5vbmNsb3NlID0gZnVuY3Rpb24oZSkge1xuICAgIGRlYnVnKCdjbG9zZSBldmVudCcsIGUuY29kZSwgZS5yZWFzb24pO1xuICAgIHNlbGYuZW1pdCgnY2xvc2UnLCBlLmNvZGUsIGUucmVhc29uKTtcbiAgICBzZWxmLl9jbGVhbnVwKCk7XG4gIH07XG4gIHRoaXMud3Mub25lcnJvciA9IGZ1bmN0aW9uKGUpIHtcbiAgICBkZWJ1ZygnZXJyb3IgZXZlbnQnLCBlKTtcbiAgICBzZWxmLmVtaXQoJ2Nsb3NlJywgMTAwNiwgJ1dlYlNvY2tldCBjb25uZWN0aW9uIGJyb2tlbicpO1xuICAgIHNlbGYuX2NsZWFudXAoKTtcbiAgfTtcbn1cblxuaW5oZXJpdHMoV2ViU29ja2V0VHJhbnNwb3J0LCBFdmVudEVtaXR0ZXIpO1xuXG5XZWJTb2NrZXRUcmFuc3BvcnQucHJvdG90eXBlLnNlbmQgPSBmdW5jdGlvbihkYXRhKSB7XG4gIHZhciBtc2cgPSAnWycgKyBkYXRhICsgJ10nO1xuICBkZWJ1Zygnc2VuZCcsIG1zZyk7XG4gIHRoaXMud3Muc2VuZChtc2cpO1xufTtcblxuV2ViU29ja2V0VHJhbnNwb3J0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnY2xvc2UnKTtcbiAgaWYgKHRoaXMud3MpIHtcbiAgICB0aGlzLndzLmNsb3NlKCk7XG4gIH1cbiAgdGhpcy5fY2xlYW51cCgpO1xufTtcblxuV2ViU29ja2V0VHJhbnNwb3J0LnByb3RvdHlwZS5fY2xlYW51cCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnX2NsZWFudXAnKTtcbiAgdmFyIHdzID0gdGhpcy53cztcbiAgaWYgKHdzKSB7XG4gICAgd3Mub25tZXNzYWdlID0gd3Mub25jbG9zZSA9IHdzLm9uZXJyb3IgPSBudWxsO1xuICB9XG4gIHV0aWxzLnVubG9hZERlbCh0aGlzLnVubG9hZFJlZik7XG4gIHRoaXMudW5sb2FkUmVmID0gdGhpcy53cyA9IG51bGw7XG4gIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG59O1xuXG5XZWJTb2NrZXRUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnZW5hYmxlZCcpO1xuICByZXR1cm4gISFXZWJzb2NrZXREcml2ZXI7XG59O1xuV2ViU29ja2V0VHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUgPSAnd2Vic29ja2V0JztcblxuLy8gSW4gdGhlb3J5LCB3cyBzaG91bGQgcmVxdWlyZSAxIHJvdW5kIHRyaXAuIEJ1dCBpbiBjaHJvbWUsIHRoaXMgaXNcbi8vIG5vdCB2ZXJ5IHN0YWJsZSBvdmVyIFNTTC4gTW9zdCBsaWtlbHkgYSB3cyBjb25uZWN0aW9uIHJlcXVpcmVzIGFcbi8vIHNlcGFyYXRlIFNTTCBjb25uZWN0aW9uLCBpbiB3aGljaCBjYXNlIDIgcm91bmQgdHJpcHMgYXJlIGFuXG4vLyBhYnNvbHV0ZSBtaW51bXVtLlxuV2ViU29ja2V0VHJhbnNwb3J0LnJvdW5kVHJpcHMgPSAyO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFdlYlNvY2tldFRyYW5zcG9ydDtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvd2Vic29ja2V0LmpzXG4gKiogbW9kdWxlIGlkID0gNzJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar inherits = __webpack_require__(1)\n  , AjaxBasedTransport = __webpack_require__(8)\n  , XdrStreamingTransport = __webpack_require__(32)\n  , XhrReceiver = __webpack_require__(13)\n  , XDRObject = __webpack_require__(18)\n  ;\n\nfunction XdrPollingTransport(transUrl) {\n  if (!XDRObject.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n  AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XDRObject);\n}\n\ninherits(XdrPollingTransport, AjaxBasedTransport);\n\nXdrPollingTransport.enabled = XdrStreamingTransport.enabled;\nXdrPollingTransport.transportName = 'xdr-polling';\nXdrPollingTransport.roundTrips = 2; // preflight, ajax\n\nmodule.exports = XdrPollingTransport;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQveGRyLXBvbGxpbmcuanM/NDQxOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxtQ0FBbUM7O0FBRW5DIiwiZmlsZSI6IjczLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgQWpheEJhc2VkVHJhbnNwb3J0ID0gcmVxdWlyZSgnLi9saWIvYWpheC1iYXNlZCcpXG4gICwgWGRyU3RyZWFtaW5nVHJhbnNwb3J0ID0gcmVxdWlyZSgnLi94ZHItc3RyZWFtaW5nJylcbiAgLCBYaHJSZWNlaXZlciA9IHJlcXVpcmUoJy4vcmVjZWl2ZXIveGhyJylcbiAgLCBYRFJPYmplY3QgPSByZXF1aXJlKCcuL3NlbmRlci94ZHInKVxuICA7XG5cbmZ1bmN0aW9uIFhkclBvbGxpbmdUcmFuc3BvcnQodHJhbnNVcmwpIHtcbiAgaWYgKCFYRFJPYmplY3QuZW5hYmxlZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignVHJhbnNwb3J0IGNyZWF0ZWQgd2hlbiBkaXNhYmxlZCcpO1xuICB9XG4gIEFqYXhCYXNlZFRyYW5zcG9ydC5jYWxsKHRoaXMsIHRyYW5zVXJsLCAnL3hocicsIFhoclJlY2VpdmVyLCBYRFJPYmplY3QpO1xufVxuXG5pbmhlcml0cyhYZHJQb2xsaW5nVHJhbnNwb3J0LCBBamF4QmFzZWRUcmFuc3BvcnQpO1xuXG5YZHJQb2xsaW5nVHJhbnNwb3J0LmVuYWJsZWQgPSBYZHJTdHJlYW1pbmdUcmFuc3BvcnQuZW5hYmxlZDtcblhkclBvbGxpbmdUcmFuc3BvcnQudHJhbnNwb3J0TmFtZSA9ICd4ZHItcG9sbGluZyc7XG5YZHJQb2xsaW5nVHJhbnNwb3J0LnJvdW5kVHJpcHMgPSAyOyAvLyBwcmVmbGlnaHQsIGFqYXhcblxubW9kdWxlLmV4cG9ydHMgPSBYZHJQb2xsaW5nVHJhbnNwb3J0O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC94ZHItcG9sbGluZy5qc1xuICoqIG1vZHVsZSBpZCA9IDczXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\nvar inherits = __webpack_require__(1)\n  , AjaxBasedTransport = __webpack_require__(8)\n  , XhrReceiver = __webpack_require__(13)\n  , XHRCorsObject = __webpack_require__(14)\n  , XHRLocalObject = __webpack_require__(10)\n  , browser = __webpack_require__(11)\n  ;\n\nfunction XhrStreamingTransport(transUrl) {\n  if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n  AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XHRCorsObject);\n}\n\ninherits(XhrStreamingTransport, AjaxBasedTransport);\n\nXhrStreamingTransport.enabled = function(info) {\n  if (info.nullOrigin) {\n    return false;\n  }\n  // Opera doesn't support xhr-streaming #60\n  // But it might be able to #92\n  if (browser.isOpera()) {\n    return false;\n  }\n\n  return XHRCorsObject.enabled;\n};\n\nXhrStreamingTransport.transportName = 'xhr-streaming';\nXhrStreamingTransport.roundTrips = 2; // preflight, ajax\n\n// Safari gets confused when a streaming ajax request is started\n// before onload. This causes the load indicator to spin indefinetely.\n// Only require body when used in a browser\nXhrStreamingTransport.needBody = !!global.document;\n\nmodule.exports = XhrStreamingTransport;\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQveGhyLXN0cmVhbWluZy5qcz9jOGUxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLHFDQUFxQzs7QUFFckM7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiNzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBBamF4QmFzZWRUcmFuc3BvcnQgPSByZXF1aXJlKCcuL2xpYi9hamF4LWJhc2VkJylcbiAgLCBYaHJSZWNlaXZlciA9IHJlcXVpcmUoJy4vcmVjZWl2ZXIveGhyJylcbiAgLCBYSFJDb3JzT2JqZWN0ID0gcmVxdWlyZSgnLi9zZW5kZXIveGhyLWNvcnMnKVxuICAsIFhIUkxvY2FsT2JqZWN0ID0gcmVxdWlyZSgnLi9zZW5kZXIveGhyLWxvY2FsJylcbiAgLCBicm93c2VyID0gcmVxdWlyZSgnLi4vdXRpbHMvYnJvd3NlcicpXG4gIDtcblxuZnVuY3Rpb24gWGhyU3RyZWFtaW5nVHJhbnNwb3J0KHRyYW5zVXJsKSB7XG4gIGlmICghWEhSTG9jYWxPYmplY3QuZW5hYmxlZCAmJiAhWEhSQ29yc09iamVjdC5lbmFibGVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUcmFuc3BvcnQgY3JlYXRlZCB3aGVuIGRpc2FibGVkJyk7XG4gIH1cbiAgQWpheEJhc2VkVHJhbnNwb3J0LmNhbGwodGhpcywgdHJhbnNVcmwsICcveGhyX3N0cmVhbWluZycsIFhoclJlY2VpdmVyLCBYSFJDb3JzT2JqZWN0KTtcbn1cblxuaW5oZXJpdHMoWGhyU3RyZWFtaW5nVHJhbnNwb3J0LCBBamF4QmFzZWRUcmFuc3BvcnQpO1xuXG5YaHJTdHJlYW1pbmdUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKGluZm8pIHtcbiAgaWYgKGluZm8ubnVsbE9yaWdpbikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvLyBPcGVyYSBkb2Vzbid0IHN1cHBvcnQgeGhyLXN0cmVhbWluZyAjNjBcbiAgLy8gQnV0IGl0IG1pZ2h0IGJlIGFibGUgdG8gIzkyXG4gIGlmIChicm93c2VyLmlzT3BlcmEoKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBYSFJDb3JzT2JqZWN0LmVuYWJsZWQ7XG59O1xuXG5YaHJTdHJlYW1pbmdUcmFuc3BvcnQudHJhbnNwb3J0TmFtZSA9ICd4aHItc3RyZWFtaW5nJztcblhoclN0cmVhbWluZ1RyYW5zcG9ydC5yb3VuZFRyaXBzID0gMjsgLy8gcHJlZmxpZ2h0LCBhamF4XG5cbi8vIFNhZmFyaSBnZXRzIGNvbmZ1c2VkIHdoZW4gYSBzdHJlYW1pbmcgYWpheCByZXF1ZXN0IGlzIHN0YXJ0ZWRcbi8vIGJlZm9yZSBvbmxvYWQuIFRoaXMgY2F1c2VzIHRoZSBsb2FkIGluZGljYXRvciB0byBzcGluIGluZGVmaW5ldGVseS5cbi8vIE9ubHkgcmVxdWlyZSBib2R5IHdoZW4gdXNlZCBpbiBhIGJyb3dzZXJcblhoclN0cmVhbWluZ1RyYW5zcG9ydC5uZWVkQm9keSA9ICEhZ2xvYmFsLmRvY3VtZW50O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFhoclN0cmVhbWluZ1RyYW5zcG9ydDtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQveGhyLXN0cmVhbWluZy5qc1xuICoqIG1vZHVsZSBpZCA9IDc0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports){eval("/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\nif (global.crypto && global.crypto.getRandomValues) {\n  module.exports.randomBytes = function(length) {\n    var bytes = new Uint8Array(length);\n    global.crypto.getRandomValues(bytes);\n    return bytes;\n  };\n} else {\n  module.exports.randomBytes = function(length) {\n    var bytes = new Array(length);\n    for (var i = 0; i < length; i++) {\n      bytes[i] = Math.floor(Math.random() * 256);\n    }\n    return bytes;\n  };\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi91dGlscy9icm93c2VyLWNyeXB0by5qcz82MWY1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsbUJBQW1CLFlBQVk7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI3NS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKGdsb2JhbC5jcnlwdG8gJiYgZ2xvYmFsLmNyeXB0by5nZXRSYW5kb21WYWx1ZXMpIHtcbiAgbW9kdWxlLmV4cG9ydHMucmFuZG9tQnl0ZXMgPSBmdW5jdGlvbihsZW5ndGgpIHtcbiAgICB2YXIgYnl0ZXMgPSBuZXcgVWludDhBcnJheShsZW5ndGgpO1xuICAgIGdsb2JhbC5jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKGJ5dGVzKTtcbiAgICByZXR1cm4gYnl0ZXM7XG4gIH07XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cy5yYW5kb21CeXRlcyA9IGZ1bmN0aW9uKGxlbmd0aCkge1xuICAgIHZhciBieXRlcyA9IG5ldyBBcnJheShsZW5ndGgpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgIGJ5dGVzW2ldID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjU2KTtcbiAgICB9XG4gICAgcmV0dXJuIGJ5dGVzO1xuICB9O1xufVxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL3V0aWxzL2Jyb3dzZXItY3J5cHRvLmpzXG4gKiogbW9kdWxlIGlkID0gNzVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar JSON3 = __webpack_require__(6);\n\n// Some extra characters that Chrome gets wrong, and substitutes with\n// something else on the wire.\nvar extraEscapable = /[\\x00-\\x1f\\ud800-\\udfff\\ufffe\\uffff\\u0300-\\u0333\\u033d-\\u0346\\u034a-\\u034c\\u0350-\\u0352\\u0357-\\u0358\\u035c-\\u0362\\u0374\\u037e\\u0387\\u0591-\\u05af\\u05c4\\u0610-\\u0617\\u0653-\\u0654\\u0657-\\u065b\\u065d-\\u065e\\u06df-\\u06e2\\u06eb-\\u06ec\\u0730\\u0732-\\u0733\\u0735-\\u0736\\u073a\\u073d\\u073f-\\u0741\\u0743\\u0745\\u0747\\u07eb-\\u07f1\\u0951\\u0958-\\u095f\\u09dc-\\u09dd\\u09df\\u0a33\\u0a36\\u0a59-\\u0a5b\\u0a5e\\u0b5c-\\u0b5d\\u0e38-\\u0e39\\u0f43\\u0f4d\\u0f52\\u0f57\\u0f5c\\u0f69\\u0f72-\\u0f76\\u0f78\\u0f80-\\u0f83\\u0f93\\u0f9d\\u0fa2\\u0fa7\\u0fac\\u0fb9\\u1939-\\u193a\\u1a17\\u1b6b\\u1cda-\\u1cdb\\u1dc0-\\u1dcf\\u1dfc\\u1dfe\\u1f71\\u1f73\\u1f75\\u1f77\\u1f79\\u1f7b\\u1f7d\\u1fbb\\u1fbe\\u1fc9\\u1fcb\\u1fd3\\u1fdb\\u1fe3\\u1feb\\u1fee-\\u1fef\\u1ff9\\u1ffb\\u1ffd\\u2000-\\u2001\\u20d0-\\u20d1\\u20d4-\\u20d7\\u20e7-\\u20e9\\u2126\\u212a-\\u212b\\u2329-\\u232a\\u2adc\\u302b-\\u302c\\uaab2-\\uaab3\\uf900-\\ufa0d\\ufa10\\ufa12\\ufa15-\\ufa1e\\ufa20\\ufa22\\ufa25-\\ufa26\\ufa2a-\\ufa2d\\ufa30-\\ufa6d\\ufa70-\\ufad9\\ufb1d\\ufb1f\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufb4e\\ufff0-\\uffff]/g\n  , extraLookup;\n\n// This may be quite slow, so let's delay until user actually uses bad\n// characters.\nvar unrollLookup = function(escapable) {\n  var i;\n  var unrolled = {};\n  var c = [];\n  for (i = 0; i < 65536; i++) {\n    c.push( String.fromCharCode(i) );\n  }\n  escapable.lastIndex = 0;\n  c.join('').replace(escapable, function(a) {\n    unrolled[ a ] = '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    return '';\n  });\n  escapable.lastIndex = 0;\n  return unrolled;\n};\n\n// Quote string, also taking care of unicode characters that browsers\n// often break. Especially, take care of unicode surrogates:\n// http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters#Surrogates\nmodule.exports = {\n  quote: function(string) {\n    var quoted = JSON3.stringify(string);\n\n    // In most cases this should be very fast and good enough.\n    extraEscapable.lastIndex = 0;\n    if (!extraEscapable.test(quoted)) {\n      return quoted;\n    }\n\n    if (!extraLookup) {\n      extraLookup = unrollLookup(extraEscapable);\n    }\n\n    return quoted.replace(extraEscapable, function(a) {\n      return extraLookup[a];\n    });\n  }\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi91dGlscy9lc2NhcGUuanM/ZDdjNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFdBQVc7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwiZmlsZSI6Ijc2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgSlNPTjMgPSByZXF1aXJlKCdqc29uMycpO1xuXG4vLyBTb21lIGV4dHJhIGNoYXJhY3RlcnMgdGhhdCBDaHJvbWUgZ2V0cyB3cm9uZywgYW5kIHN1YnN0aXR1dGVzIHdpdGhcbi8vIHNvbWV0aGluZyBlbHNlIG9uIHRoZSB3aXJlLlxudmFyIGV4dHJhRXNjYXBhYmxlID0gL1tcXHgwMC1cXHgxZlxcdWQ4MDAtXFx1ZGZmZlxcdWZmZmVcXHVmZmZmXFx1MDMwMC1cXHUwMzMzXFx1MDMzZC1cXHUwMzQ2XFx1MDM0YS1cXHUwMzRjXFx1MDM1MC1cXHUwMzUyXFx1MDM1Ny1cXHUwMzU4XFx1MDM1Yy1cXHUwMzYyXFx1MDM3NFxcdTAzN2VcXHUwMzg3XFx1MDU5MS1cXHUwNWFmXFx1MDVjNFxcdTA2MTAtXFx1MDYxN1xcdTA2NTMtXFx1MDY1NFxcdTA2NTctXFx1MDY1YlxcdTA2NWQtXFx1MDY1ZVxcdTA2ZGYtXFx1MDZlMlxcdTA2ZWItXFx1MDZlY1xcdTA3MzBcXHUwNzMyLVxcdTA3MzNcXHUwNzM1LVxcdTA3MzZcXHUwNzNhXFx1MDczZFxcdTA3M2YtXFx1MDc0MVxcdTA3NDNcXHUwNzQ1XFx1MDc0N1xcdTA3ZWItXFx1MDdmMVxcdTA5NTFcXHUwOTU4LVxcdTA5NWZcXHUwOWRjLVxcdTA5ZGRcXHUwOWRmXFx1MGEzM1xcdTBhMzZcXHUwYTU5LVxcdTBhNWJcXHUwYTVlXFx1MGI1Yy1cXHUwYjVkXFx1MGUzOC1cXHUwZTM5XFx1MGY0M1xcdTBmNGRcXHUwZjUyXFx1MGY1N1xcdTBmNWNcXHUwZjY5XFx1MGY3Mi1cXHUwZjc2XFx1MGY3OFxcdTBmODAtXFx1MGY4M1xcdTBmOTNcXHUwZjlkXFx1MGZhMlxcdTBmYTdcXHUwZmFjXFx1MGZiOVxcdTE5MzktXFx1MTkzYVxcdTFhMTdcXHUxYjZiXFx1MWNkYS1cXHUxY2RiXFx1MWRjMC1cXHUxZGNmXFx1MWRmY1xcdTFkZmVcXHUxZjcxXFx1MWY3M1xcdTFmNzVcXHUxZjc3XFx1MWY3OVxcdTFmN2JcXHUxZjdkXFx1MWZiYlxcdTFmYmVcXHUxZmM5XFx1MWZjYlxcdTFmZDNcXHUxZmRiXFx1MWZlM1xcdTFmZWJcXHUxZmVlLVxcdTFmZWZcXHUxZmY5XFx1MWZmYlxcdTFmZmRcXHUyMDAwLVxcdTIwMDFcXHUyMGQwLVxcdTIwZDFcXHUyMGQ0LVxcdTIwZDdcXHUyMGU3LVxcdTIwZTlcXHUyMTI2XFx1MjEyYS1cXHUyMTJiXFx1MjMyOS1cXHUyMzJhXFx1MmFkY1xcdTMwMmItXFx1MzAyY1xcdWFhYjItXFx1YWFiM1xcdWY5MDAtXFx1ZmEwZFxcdWZhMTBcXHVmYTEyXFx1ZmExNS1cXHVmYTFlXFx1ZmEyMFxcdWZhMjJcXHVmYTI1LVxcdWZhMjZcXHVmYTJhLVxcdWZhMmRcXHVmYTMwLVxcdWZhNmRcXHVmYTcwLVxcdWZhZDlcXHVmYjFkXFx1ZmIxZlxcdWZiMmEtXFx1ZmIzNlxcdWZiMzgtXFx1ZmIzY1xcdWZiM2VcXHVmYjQwLVxcdWZiNDFcXHVmYjQzLVxcdWZiNDRcXHVmYjQ2LVxcdWZiNGVcXHVmZmYwLVxcdWZmZmZdL2dcbiAgLCBleHRyYUxvb2t1cDtcblxuLy8gVGhpcyBtYXkgYmUgcXVpdGUgc2xvdywgc28gbGV0J3MgZGVsYXkgdW50aWwgdXNlciBhY3R1YWxseSB1c2VzIGJhZFxuLy8gY2hhcmFjdGVycy5cbnZhciB1bnJvbGxMb29rdXAgPSBmdW5jdGlvbihlc2NhcGFibGUpIHtcbiAgdmFyIGk7XG4gIHZhciB1bnJvbGxlZCA9IHt9O1xuICB2YXIgYyA9IFtdO1xuICBmb3IgKGkgPSAwOyBpIDwgNjU1MzY7IGkrKykge1xuICAgIGMucHVzaCggU3RyaW5nLmZyb21DaGFyQ29kZShpKSApO1xuICB9XG4gIGVzY2FwYWJsZS5sYXN0SW5kZXggPSAwO1xuICBjLmpvaW4oJycpLnJlcGxhY2UoZXNjYXBhYmxlLCBmdW5jdGlvbihhKSB7XG4gICAgdW5yb2xsZWRbIGEgXSA9ICdcXFxcdScgKyAoJzAwMDAnICsgYS5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KSkuc2xpY2UoLTQpO1xuICAgIHJldHVybiAnJztcbiAgfSk7XG4gIGVzY2FwYWJsZS5sYXN0SW5kZXggPSAwO1xuICByZXR1cm4gdW5yb2xsZWQ7XG59O1xuXG4vLyBRdW90ZSBzdHJpbmcsIGFsc28gdGFraW5nIGNhcmUgb2YgdW5pY29kZSBjaGFyYWN0ZXJzIHRoYXQgYnJvd3NlcnNcbi8vIG9mdGVuIGJyZWFrLiBFc3BlY2lhbGx5LCB0YWtlIGNhcmUgb2YgdW5pY29kZSBzdXJyb2dhdGVzOlxuLy8gaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9NYXBwaW5nX29mX1VuaWNvZGVfY2hhcmFjdGVycyNTdXJyb2dhdGVzXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcXVvdGU6IGZ1bmN0aW9uKHN0cmluZykge1xuICAgIHZhciBxdW90ZWQgPSBKU09OMy5zdHJpbmdpZnkoc3RyaW5nKTtcblxuICAgIC8vIEluIG1vc3QgY2FzZXMgdGhpcyBzaG91bGQgYmUgdmVyeSBmYXN0IGFuZCBnb29kIGVub3VnaC5cbiAgICBleHRyYUVzY2FwYWJsZS5sYXN0SW5kZXggPSAwO1xuICAgIGlmICghZXh0cmFFc2NhcGFibGUudGVzdChxdW90ZWQpKSB7XG4gICAgICByZXR1cm4gcXVvdGVkO1xuICAgIH1cblxuICAgIGlmICghZXh0cmFMb29rdXApIHtcbiAgICAgIGV4dHJhTG9va3VwID0gdW5yb2xsTG9va3VwKGV4dHJhRXNjYXBhYmxlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcXVvdGVkLnJlcGxhY2UoZXh0cmFFc2NhcGFibGUsIGZ1bmN0aW9uKGEpIHtcbiAgICAgIHJldHVybiBleHRyYUxvb2t1cFthXTtcbiAgICB9KTtcbiAgfVxufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi91dGlscy9lc2NhcGUuanNcbiAqKiBtb2R1bGUgaWQgPSA3NlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports){eval("/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\nvar logObject = {};\n['log', 'debug', 'warn'].forEach(function (level) {\n  var levelExists = global.console && global.console[level] && global.console[level].apply;\n  logObject[level] = levelExists ? function () {\n    return global.console[level].apply(global.console, arguments);\n  } : (level === 'log' ? function () {} : logObject.log);\n});\n\nmodule.exports = logObject;\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi91dGlscy9sb2cuanM/NzIyOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxvQ0FBb0M7QUFDdkMsQ0FBQzs7QUFFRCIsImZpbGUiOiI3Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGxvZ09iamVjdCA9IHt9O1xuWydsb2cnLCAnZGVidWcnLCAnd2FybiddLmZvckVhY2goZnVuY3Rpb24gKGxldmVsKSB7XG4gIHZhciBsZXZlbEV4aXN0cyA9IGdsb2JhbC5jb25zb2xlICYmIGdsb2JhbC5jb25zb2xlW2xldmVsXSAmJiBnbG9iYWwuY29uc29sZVtsZXZlbF0uYXBwbHk7XG4gIGxvZ09iamVjdFtsZXZlbF0gPSBsZXZlbEV4aXN0cyA/IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZ2xvYmFsLmNvbnNvbGVbbGV2ZWxdLmFwcGx5KGdsb2JhbC5jb25zb2xlLCBhcmd1bWVudHMpO1xuICB9IDogKGxldmVsID09PSAnbG9nJyA/IGZ1bmN0aW9uICgpIHt9IDogbG9nT2JqZWN0LmxvZyk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBsb2dPYmplY3Q7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9saWIvdXRpbHMvbG9nLmpzXG4gKiogbW9kdWxlIGlkID0gNzdcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");
},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:utils:transport');\n}\n\nmodule.exports = function(availableTransports) {\n  return {\n    filterToEnabled: function(transportsWhitelist, info) {\n      var transports = {\n        main: []\n      , facade: []\n      };\n      if (!transportsWhitelist) {\n        transportsWhitelist = [];\n      } else if (typeof transportsWhitelist === 'string') {\n        transportsWhitelist = [transportsWhitelist];\n      }\n\n      availableTransports.forEach(function(trans) {\n        if (!trans) {\n          return;\n        }\n\n        if (trans.transportName === 'websocket' && info.websocket === false) {\n          debug('disabled from server', 'websocket');\n          return;\n        }\n\n        if (transportsWhitelist.length &&\n            transportsWhitelist.indexOf(trans.transportName) === -1) {\n          debug('not in whitelist', trans.transportName);\n          return;\n        }\n\n        if (trans.enabled(info)) {\n          debug('enabled', trans.transportName);\n          transports.main.push(trans);\n          if (trans.facadeTransport) {\n            transports.facade.push(trans.facadeTransport);\n          }\n        } else {\n          debug('disabled', trans.transportName);\n        }\n      });\n      return transports;\n    }\n  };\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L2xpYi91dGlscy90cmFuc3BvcnQuanM/MmU3MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ijc4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OnV0aWxzOnRyYW5zcG9ydCcpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGF2YWlsYWJsZVRyYW5zcG9ydHMpIHtcbiAgcmV0dXJuIHtcbiAgICBmaWx0ZXJUb0VuYWJsZWQ6IGZ1bmN0aW9uKHRyYW5zcG9ydHNXaGl0ZWxpc3QsIGluZm8pIHtcbiAgICAgIHZhciB0cmFuc3BvcnRzID0ge1xuICAgICAgICBtYWluOiBbXVxuICAgICAgLCBmYWNhZGU6IFtdXG4gICAgICB9O1xuICAgICAgaWYgKCF0cmFuc3BvcnRzV2hpdGVsaXN0KSB7XG4gICAgICAgIHRyYW5zcG9ydHNXaGl0ZWxpc3QgPSBbXTtcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHRyYW5zcG9ydHNXaGl0ZWxpc3QgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRyYW5zcG9ydHNXaGl0ZWxpc3QgPSBbdHJhbnNwb3J0c1doaXRlbGlzdF07XG4gICAgICB9XG5cbiAgICAgIGF2YWlsYWJsZVRyYW5zcG9ydHMuZm9yRWFjaChmdW5jdGlvbih0cmFucykge1xuICAgICAgICBpZiAoIXRyYW5zKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRyYW5zLnRyYW5zcG9ydE5hbWUgPT09ICd3ZWJzb2NrZXQnICYmIGluZm8ud2Vic29ja2V0ID09PSBmYWxzZSkge1xuICAgICAgICAgIGRlYnVnKCdkaXNhYmxlZCBmcm9tIHNlcnZlcicsICd3ZWJzb2NrZXQnKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHJhbnNwb3J0c1doaXRlbGlzdC5sZW5ndGggJiZcbiAgICAgICAgICAgIHRyYW5zcG9ydHNXaGl0ZWxpc3QuaW5kZXhPZih0cmFucy50cmFuc3BvcnROYW1lKSA9PT0gLTEpIHtcbiAgICAgICAgICBkZWJ1Zygnbm90IGluIHdoaXRlbGlzdCcsIHRyYW5zLnRyYW5zcG9ydE5hbWUpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0cmFucy5lbmFibGVkKGluZm8pKSB7XG4gICAgICAgICAgZGVidWcoJ2VuYWJsZWQnLCB0cmFucy50cmFuc3BvcnROYW1lKTtcbiAgICAgICAgICB0cmFuc3BvcnRzLm1haW4ucHVzaCh0cmFucyk7XG4gICAgICAgICAgaWYgKHRyYW5zLmZhY2FkZVRyYW5zcG9ydCkge1xuICAgICAgICAgICAgdHJhbnNwb3J0cy5mYWNhZGUucHVzaCh0cmFucy5mYWNhZGVUcmFuc3BvcnQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkZWJ1ZygnZGlzYWJsZWQnLCB0cmFucy50cmFuc3BvcnROYW1lKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gdHJhbnNwb3J0cztcbiAgICB9XG4gIH07XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvbGliL3V0aWxzL3RyYW5zcG9ydC5qc1xuICoqIG1vZHVsZSBpZCA9IDc4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(80);\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L34vZGVidWcvZGVidWcuanM/MDZjMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQixTQUFTO0FBQzFCLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQSx5Q0FBeUMsU0FBUztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxTQUFTO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNzkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogVGhpcyBpcyB0aGUgY29tbW9uIGxvZ2ljIGZvciBib3RoIHRoZSBOb2RlLmpzIGFuZCB3ZWIgYnJvd3NlclxuICogaW1wbGVtZW50YXRpb25zIG9mIGBkZWJ1ZygpYC5cbiAqXG4gKiBFeHBvc2UgYGRlYnVnKClgIGFzIHRoZSBtb2R1bGUuXG4gKi9cblxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZGVidWc7XG5leHBvcnRzLmNvZXJjZSA9IGNvZXJjZTtcbmV4cG9ydHMuZGlzYWJsZSA9IGRpc2FibGU7XG5leHBvcnRzLmVuYWJsZSA9IGVuYWJsZTtcbmV4cG9ydHMuZW5hYmxlZCA9IGVuYWJsZWQ7XG5leHBvcnRzLmh1bWFuaXplID0gcmVxdWlyZSgnbXMnKTtcblxuLyoqXG4gKiBUaGUgY3VycmVudGx5IGFjdGl2ZSBkZWJ1ZyBtb2RlIG5hbWVzLCBhbmQgbmFtZXMgdG8gc2tpcC5cbiAqL1xuXG5leHBvcnRzLm5hbWVzID0gW107XG5leHBvcnRzLnNraXBzID0gW107XG5cbi8qKlxuICogTWFwIG9mIHNwZWNpYWwgXCIlblwiIGhhbmRsaW5nIGZ1bmN0aW9ucywgZm9yIHRoZSBkZWJ1ZyBcImZvcm1hdFwiIGFyZ3VtZW50LlxuICpcbiAqIFZhbGlkIGtleSBuYW1lcyBhcmUgYSBzaW5nbGUsIGxvd2VyY2FzZWQgbGV0dGVyLCBpLmUuIFwiblwiLlxuICovXG5cbmV4cG9ydHMuZm9ybWF0dGVycyA9IHt9O1xuXG4vKipcbiAqIFByZXZpb3VzbHkgYXNzaWduZWQgY29sb3IuXG4gKi9cblxudmFyIHByZXZDb2xvciA9IDA7XG5cbi8qKlxuICogUHJldmlvdXMgbG9nIHRpbWVzdGFtcC5cbiAqL1xuXG52YXIgcHJldlRpbWU7XG5cbi8qKlxuICogU2VsZWN0IGEgY29sb3IuXG4gKlxuICogQHJldHVybiB7TnVtYmVyfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2VsZWN0Q29sb3IoKSB7XG4gIHJldHVybiBleHBvcnRzLmNvbG9yc1twcmV2Q29sb3IrKyAlIGV4cG9ydHMuY29sb3JzLmxlbmd0aF07XG59XG5cbi8qKlxuICogQ3JlYXRlIGEgZGVidWdnZXIgd2l0aCB0aGUgZ2l2ZW4gYG5hbWVzcGFjZWAuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVzcGFjZVxuICogQHJldHVybiB7RnVuY3Rpb259XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIGRlYnVnKG5hbWVzcGFjZSkge1xuXG4gIC8vIGRlZmluZSB0aGUgYGRpc2FibGVkYCB2ZXJzaW9uXG4gIGZ1bmN0aW9uIGRpc2FibGVkKCkge1xuICB9XG4gIGRpc2FibGVkLmVuYWJsZWQgPSBmYWxzZTtcblxuICAvLyBkZWZpbmUgdGhlIGBlbmFibGVkYCB2ZXJzaW9uXG4gIGZ1bmN0aW9uIGVuYWJsZWQoKSB7XG5cbiAgICB2YXIgc2VsZiA9IGVuYWJsZWQ7XG5cbiAgICAvLyBzZXQgYGRpZmZgIHRpbWVzdGFtcFxuICAgIHZhciBjdXJyID0gK25ldyBEYXRlKCk7XG4gICAgdmFyIG1zID0gY3VyciAtIChwcmV2VGltZSB8fCBjdXJyKTtcbiAgICBzZWxmLmRpZmYgPSBtcztcbiAgICBzZWxmLnByZXYgPSBwcmV2VGltZTtcbiAgICBzZWxmLmN1cnIgPSBjdXJyO1xuICAgIHByZXZUaW1lID0gY3VycjtcblxuICAgIC8vIGFkZCB0aGUgYGNvbG9yYCBpZiBub3Qgc2V0XG4gICAgaWYgKG51bGwgPT0gc2VsZi51c2VDb2xvcnMpIHNlbGYudXNlQ29sb3JzID0gZXhwb3J0cy51c2VDb2xvcnMoKTtcbiAgICBpZiAobnVsbCA9PSBzZWxmLmNvbG9yICYmIHNlbGYudXNlQ29sb3JzKSBzZWxmLmNvbG9yID0gc2VsZWN0Q29sb3IoKTtcblxuICAgIHZhciBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtcblxuICAgIGFyZ3NbMF0gPSBleHBvcnRzLmNvZXJjZShhcmdzWzBdKTtcblxuICAgIGlmICgnc3RyaW5nJyAhPT0gdHlwZW9mIGFyZ3NbMF0pIHtcbiAgICAgIC8vIGFueXRoaW5nIGVsc2UgbGV0J3MgaW5zcGVjdCB3aXRoICVvXG4gICAgICBhcmdzID0gWyclbyddLmNvbmNhdChhcmdzKTtcbiAgICB9XG5cbiAgICAvLyBhcHBseSBhbnkgYGZvcm1hdHRlcnNgIHRyYW5zZm9ybWF0aW9uc1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgYXJnc1swXSA9IGFyZ3NbMF0ucmVwbGFjZSgvJShbYS16JV0pL2csIGZ1bmN0aW9uKG1hdGNoLCBmb3JtYXQpIHtcbiAgICAgIC8vIGlmIHdlIGVuY291bnRlciBhbiBlc2NhcGVkICUgdGhlbiBkb24ndCBpbmNyZWFzZSB0aGUgYXJyYXkgaW5kZXhcbiAgICAgIGlmIChtYXRjaCA9PT0gJyUlJykgcmV0dXJuIG1hdGNoO1xuICAgICAgaW5kZXgrKztcbiAgICAgIHZhciBmb3JtYXR0ZXIgPSBleHBvcnRzLmZvcm1hdHRlcnNbZm9ybWF0XTtcbiAgICAgIGlmICgnZnVuY3Rpb24nID09PSB0eXBlb2YgZm9ybWF0dGVyKSB7XG4gICAgICAgIHZhciB2YWwgPSBhcmdzW2luZGV4XTtcbiAgICAgICAgbWF0Y2ggPSBmb3JtYXR0ZXIuY2FsbChzZWxmLCB2YWwpO1xuXG4gICAgICAgIC8vIG5vdyB3ZSBuZWVkIHRvIHJlbW92ZSBgYXJnc1tpbmRleF1gIHNpbmNlIGl0J3MgaW5saW5lZCBpbiB0aGUgYGZvcm1hdGBcbiAgICAgICAgYXJncy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICBpbmRleC0tO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG1hdGNoO1xuICAgIH0pO1xuXG4gICAgaWYgKCdmdW5jdGlvbicgPT09IHR5cGVvZiBleHBvcnRzLmZvcm1hdEFyZ3MpIHtcbiAgICAgIGFyZ3MgPSBleHBvcnRzLmZvcm1hdEFyZ3MuYXBwbHkoc2VsZiwgYXJncyk7XG4gICAgfVxuICAgIHZhciBsb2dGbiA9IGVuYWJsZWQubG9nIHx8IGV4cG9ydHMubG9nIHx8IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7XG4gICAgbG9nRm4uYXBwbHkoc2VsZiwgYXJncyk7XG4gIH1cbiAgZW5hYmxlZC5lbmFibGVkID0gdHJ1ZTtcblxuICB2YXIgZm4gPSBleHBvcnRzLmVuYWJsZWQobmFtZXNwYWNlKSA/IGVuYWJsZWQgOiBkaXNhYmxlZDtcblxuICBmbi5uYW1lc3BhY2UgPSBuYW1lc3BhY2U7XG5cbiAgcmV0dXJuIGZuO1xufVxuXG4vKipcbiAqIEVuYWJsZXMgYSBkZWJ1ZyBtb2RlIGJ5IG5hbWVzcGFjZXMuIFRoaXMgY2FuIGluY2x1ZGUgbW9kZXNcbiAqIHNlcGFyYXRlZCBieSBhIGNvbG9uIGFuZCB3aWxkY2FyZHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVzcGFjZXNcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZW5hYmxlKG5hbWVzcGFjZXMpIHtcbiAgZXhwb3J0cy5zYXZlKG5hbWVzcGFjZXMpO1xuXG4gIHZhciBzcGxpdCA9IChuYW1lc3BhY2VzIHx8ICcnKS5zcGxpdCgvW1xccyxdKy8pO1xuICB2YXIgbGVuID0gc3BsaXQubGVuZ3RoO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoIXNwbGl0W2ldKSBjb250aW51ZTsgLy8gaWdub3JlIGVtcHR5IHN0cmluZ3NcbiAgICBuYW1lc3BhY2VzID0gc3BsaXRbaV0ucmVwbGFjZSgvXFwqL2csICcuKj8nKTtcbiAgICBpZiAobmFtZXNwYWNlc1swXSA9PT0gJy0nKSB7XG4gICAgICBleHBvcnRzLnNraXBzLnB1c2gobmV3IFJlZ0V4cCgnXicgKyBuYW1lc3BhY2VzLnN1YnN0cigxKSArICckJykpO1xuICAgIH0gZWxzZSB7XG4gICAgICBleHBvcnRzLm5hbWVzLnB1c2gobmV3IFJlZ0V4cCgnXicgKyBuYW1lc3BhY2VzICsgJyQnKSk7XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogRGlzYWJsZSBkZWJ1ZyBvdXRwdXQuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBkaXNhYmxlKCkge1xuICBleHBvcnRzLmVuYWJsZSgnJyk7XG59XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBnaXZlbiBtb2RlIG5hbWUgaXMgZW5hYmxlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBlbmFibGVkKG5hbWUpIHtcbiAgdmFyIGksIGxlbjtcbiAgZm9yIChpID0gMCwgbGVuID0gZXhwb3J0cy5za2lwcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIGlmIChleHBvcnRzLnNraXBzW2ldLnRlc3QobmFtZSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgZm9yIChpID0gMCwgbGVuID0gZXhwb3J0cy5uYW1lcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIGlmIChleHBvcnRzLm5hbWVzW2ldLnRlc3QobmFtZSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbi8qKlxuICogQ29lcmNlIGB2YWxgLlxuICpcbiAqIEBwYXJhbSB7TWl4ZWR9IHZhbFxuICogQHJldHVybiB7TWl4ZWR9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBjb2VyY2UodmFsKSB7XG4gIGlmICh2YWwgaW5zdGFuY2VvZiBFcnJvcikgcmV0dXJuIHZhbC5zdGFjayB8fCB2YWwubWVzc2FnZTtcbiAgcmV0dXJuIHZhbDtcbn1cblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L34vZGVidWcvZGVidWcuanNcbiAqKiBtb2R1bGUgaWQgPSA3OVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports){eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L34vZGVidWcvfi9tcy9pbmRleC5qcz9hMzlmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjgwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBIZWxwZXJzLlxuICovXG5cbnZhciBzID0gMTAwMDtcbnZhciBtID0gcyAqIDYwO1xudmFyIGggPSBtICogNjA7XG52YXIgZCA9IGggKiAyNDtcbnZhciB5ID0gZCAqIDM2NS4yNTtcblxuLyoqXG4gKiBQYXJzZSBvciBmb3JtYXQgdGhlIGdpdmVuIGB2YWxgLlxuICpcbiAqIE9wdGlvbnM6XG4gKlxuICogIC0gYGxvbmdgIHZlcmJvc2UgZm9ybWF0dGluZyBbZmFsc2VdXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8TnVtYmVyfSB2YWxcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtTdHJpbmd8TnVtYmVyfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHZhbCwgb3B0aW9ucyl7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBpZiAoJ3N0cmluZycgPT0gdHlwZW9mIHZhbCkgcmV0dXJuIHBhcnNlKHZhbCk7XG4gIHJldHVybiBvcHRpb25zLmxvbmdcbiAgICA/IGxvbmcodmFsKVxuICAgIDogc2hvcnQodmFsKTtcbn07XG5cbi8qKlxuICogUGFyc2UgdGhlIGdpdmVuIGBzdHJgIGFuZCByZXR1cm4gbWlsbGlzZWNvbmRzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge051bWJlcn1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHBhcnNlKHN0cikge1xuICBzdHIgPSAnJyArIHN0cjtcbiAgaWYgKHN0ci5sZW5ndGggPiAxMDAwMCkgcmV0dXJuO1xuICB2YXIgbWF0Y2ggPSAvXigoPzpcXGQrKT9cXC4/XFxkKykgKihtaWxsaXNlY29uZHM/fG1zZWNzP3xtc3xzZWNvbmRzP3xzZWNzP3xzfG1pbnV0ZXM/fG1pbnM/fG18aG91cnM/fGhycz98aHxkYXlzP3xkfHllYXJzP3x5cnM/fHkpPyQvaS5leGVjKHN0cik7XG4gIGlmICghbWF0Y2gpIHJldHVybjtcbiAgdmFyIG4gPSBwYXJzZUZsb2F0KG1hdGNoWzFdKTtcbiAgdmFyIHR5cGUgPSAobWF0Y2hbMl0gfHwgJ21zJykudG9Mb3dlckNhc2UoKTtcbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSAneWVhcnMnOlxuICAgIGNhc2UgJ3llYXInOlxuICAgIGNhc2UgJ3lycyc6XG4gICAgY2FzZSAneXInOlxuICAgIGNhc2UgJ3knOlxuICAgICAgcmV0dXJuIG4gKiB5O1xuICAgIGNhc2UgJ2RheXMnOlxuICAgIGNhc2UgJ2RheSc6XG4gICAgY2FzZSAnZCc6XG4gICAgICByZXR1cm4gbiAqIGQ7XG4gICAgY2FzZSAnaG91cnMnOlxuICAgIGNhc2UgJ2hvdXInOlxuICAgIGNhc2UgJ2hycyc6XG4gICAgY2FzZSAnaHInOlxuICAgIGNhc2UgJ2gnOlxuICAgICAgcmV0dXJuIG4gKiBoO1xuICAgIGNhc2UgJ21pbnV0ZXMnOlxuICAgIGNhc2UgJ21pbnV0ZSc6XG4gICAgY2FzZSAnbWlucyc6XG4gICAgY2FzZSAnbWluJzpcbiAgICBjYXNlICdtJzpcbiAgICAgIHJldHVybiBuICogbTtcbiAgICBjYXNlICdzZWNvbmRzJzpcbiAgICBjYXNlICdzZWNvbmQnOlxuICAgIGNhc2UgJ3NlY3MnOlxuICAgIGNhc2UgJ3NlYyc6XG4gICAgY2FzZSAncyc6XG4gICAgICByZXR1cm4gbiAqIHM7XG4gICAgY2FzZSAnbWlsbGlzZWNvbmRzJzpcbiAgICBjYXNlICdtaWxsaXNlY29uZCc6XG4gICAgY2FzZSAnbXNlY3MnOlxuICAgIGNhc2UgJ21zZWMnOlxuICAgIGNhc2UgJ21zJzpcbiAgICAgIHJldHVybiBuO1xuICB9XG59XG5cbi8qKlxuICogU2hvcnQgZm9ybWF0IGZvciBgbXNgLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBtc1xuICogQHJldHVybiB7U3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2hvcnQobXMpIHtcbiAgaWYgKG1zID49IGQpIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gZCkgKyAnZCc7XG4gIGlmIChtcyA+PSBoKSByZXR1cm4gTWF0aC5yb3VuZChtcyAvIGgpICsgJ2gnO1xuICBpZiAobXMgPj0gbSkgcmV0dXJuIE1hdGgucm91bmQobXMgLyBtKSArICdtJztcbiAgaWYgKG1zID49IHMpIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gcykgKyAncyc7XG4gIHJldHVybiBtcyArICdtcyc7XG59XG5cbi8qKlxuICogTG9uZyBmb3JtYXQgZm9yIGBtc2AuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IG1zXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBsb25nKG1zKSB7XG4gIHJldHVybiBwbHVyYWwobXMsIGQsICdkYXknKVxuICAgIHx8IHBsdXJhbChtcywgaCwgJ2hvdXInKVxuICAgIHx8IHBsdXJhbChtcywgbSwgJ21pbnV0ZScpXG4gICAgfHwgcGx1cmFsKG1zLCBzLCAnc2Vjb25kJylcbiAgICB8fCBtcyArICcgbXMnO1xufVxuXG4vKipcbiAqIFBsdXJhbGl6YXRpb24gaGVscGVyLlxuICovXG5cbmZ1bmN0aW9uIHBsdXJhbChtcywgbiwgbmFtZSkge1xuICBpZiAobXMgPCBuKSByZXR1cm47XG4gIGlmIChtcyA8IG4gKiAxLjUpIHJldHVybiBNYXRoLmZsb29yKG1zIC8gbikgKyAnICcgKyBuYW1lO1xuICByZXR1cm4gTWF0aC5jZWlsKG1zIC8gbikgKyAnICcgKyBuYW1lICsgJ3MnO1xufVxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9+L3NvY2tqcy1jbGllbnQvfi9kZWJ1Zy9+L21zL2luZGV4LmpzXG4gKiogbW9kdWxlIGlkID0gODBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as the a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 }\n  , URL;\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @api public\n */\nmodule.exports = function lolcation(loc) {\n  loc = loc || global.location || {};\n  URL = URL || __webpack_require__(20);\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new URL(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new URL(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) for (key in loc) {\n    if (key in ignore) continue;\n    finaldestination[key] = loc[key];\n  }\n\n  return finaldestination;\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L34vdXJsLXBhcnNlL2xvbGNhdGlvbi5qcz8xMTI1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLGNBQWM7QUFDZDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHlEQUF5RDtBQUN6RCxHQUFHO0FBQ0gsc0NBQXNDO0FBQ3RDO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjgxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFRoZXNlIHByb3BlcnRpZXMgc2hvdWxkIG5vdCBiZSBjb3BpZWQgb3IgaW5oZXJpdGVkIGZyb20uIFRoaXMgaXMgb25seSBuZWVkZWRcbiAqIGZvciBhbGwgbm9uIGJsb2IgVVJMJ3MgYXMgdGhlIGEgYmxvYiBVUkwgZG9lcyBub3QgaW5jbHVkZSBhIGhhc2gsIG9ubHkgdGhlXG4gKiBvcmlnaW4uXG4gKlxuICogQHR5cGUge09iamVjdH1cbiAqIEBwcml2YXRlXG4gKi9cbnZhciBpZ25vcmUgPSB7IGhhc2g6IDEsIHF1ZXJ5OiAxIH1cbiAgLCBVUkw7XG5cbi8qKlxuICogVGhlIGxvY2F0aW9uIG9iamVjdCBkaWZmZXJzIHdoZW4geW91ciBjb2RlIGlzIGxvYWRlZCB0aHJvdWdoIGEgbm9ybWFsIHBhZ2UsXG4gKiBXb3JrZXIgb3IgdGhyb3VnaCBhIHdvcmtlciB1c2luZyBhIGJsb2IuIEFuZCB3aXRoIHRoZSBibG9iYmxlIGJlZ2lucyB0aGVcbiAqIHRyb3VibGUgYXMgdGhlIGxvY2F0aW9uIG9iamVjdCB3aWxsIGNvbnRhaW4gdGhlIFVSTCBvZiB0aGUgYmxvYiwgbm90IHRoZVxuICogbG9jYXRpb24gb2YgdGhlIHBhZ2Ugd2hlcmUgb3VyIGNvZGUgaXMgbG9hZGVkIGluLiBUaGUgYWN0dWFsIG9yaWdpbiBpc1xuICogZW5jb2RlZCBpbiB0aGUgYHBhdGhuYW1lYCBzbyB3ZSBjYW4gdGhhbmtmdWxseSBnZW5lcmF0ZSBhIGdvb2QgXCJkZWZhdWx0XCJcbiAqIGxvY2F0aW9uIGZyb20gaXQgc28gd2UgY2FuIGdlbmVyYXRlIHByb3BlciByZWxhdGl2ZSBVUkwncyBhZ2Fpbi5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gbG9jIE9wdGlvbmFsIGRlZmF1bHQgbG9jYXRpb24gb2JqZWN0LlxuICogQHJldHVybnMge09iamVjdH0gbG9sY2F0aW9uIG9iamVjdC5cbiAqIEBhcGkgcHVibGljXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbG9sY2F0aW9uKGxvYykge1xuICBsb2MgPSBsb2MgfHwgZ2xvYmFsLmxvY2F0aW9uIHx8IHt9O1xuICBVUkwgPSBVUkwgfHwgcmVxdWlyZSgnLi8nKTtcblxuICB2YXIgZmluYWxkZXN0aW5hdGlvbiA9IHt9XG4gICAgLCB0eXBlID0gdHlwZW9mIGxvY1xuICAgICwga2V5O1xuXG4gIGlmICgnYmxvYjonID09PSBsb2MucHJvdG9jb2wpIHtcbiAgICBmaW5hbGRlc3RpbmF0aW9uID0gbmV3IFVSTCh1bmVzY2FwZShsb2MucGF0aG5hbWUpLCB7fSk7XG4gIH0gZWxzZSBpZiAoJ3N0cmluZycgPT09IHR5cGUpIHtcbiAgICBmaW5hbGRlc3RpbmF0aW9uID0gbmV3IFVSTChsb2MsIHt9KTtcbiAgICBmb3IgKGtleSBpbiBpZ25vcmUpIGRlbGV0ZSBmaW5hbGRlc3RpbmF0aW9uW2tleV07XG4gIH0gZWxzZSBpZiAoJ29iamVjdCcgPT09IHR5cGUpIGZvciAoa2V5IGluIGxvYykge1xuICAgIGlmIChrZXkgaW4gaWdub3JlKSBjb250aW51ZTtcbiAgICBmaW5hbGRlc3RpbmF0aW9uW2tleV0gPSBsb2Nba2V5XTtcbiAgfVxuXG4gIHJldHVybiBmaW5hbGRlc3RpbmF0aW9uO1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L34vdXJsLXBhcnNlL2xvbGNhdGlvbi5qc1xuICoqIG1vZHVsZSBpZCA9IDgxXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports){eval("'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=([^&]*)/g\n    , result = {}\n    , part;\n\n  //\n  // Little nifty parsing hack, leverage the fact that RegExp.exec increments\n  // the lastIndex property so we can continue executing this loop until we've\n  // parsed all results.\n  //\n  for (;\n    part = parser.exec(query);\n    result[decodeURIComponent(part[1])] = decodeURIComponent(part[2])\n  );\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = [];\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L34vdXJsLXBhcnNlL34vcXVlcnlzdHJpbmdpZnkvaW5kZXguanM/MTI5YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI4Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGhhcyA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogU2ltcGxlIHF1ZXJ5IHN0cmluZyBwYXJzZXIuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHF1ZXJ5IFRoZSBxdWVyeSBzdHJpbmcgdGhhdCBuZWVkcyB0byBiZSBwYXJzZWQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fVxuICogQGFwaSBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gcXVlcnlzdHJpbmcocXVlcnkpIHtcbiAgdmFyIHBhcnNlciA9IC8oW149PyZdKyk9KFteJl0qKS9nXG4gICAgLCByZXN1bHQgPSB7fVxuICAgICwgcGFydDtcblxuICAvL1xuICAvLyBMaXR0bGUgbmlmdHkgcGFyc2luZyBoYWNrLCBsZXZlcmFnZSB0aGUgZmFjdCB0aGF0IFJlZ0V4cC5leGVjIGluY3JlbWVudHNcbiAgLy8gdGhlIGxhc3RJbmRleCBwcm9wZXJ0eSBzbyB3ZSBjYW4gY29udGludWUgZXhlY3V0aW5nIHRoaXMgbG9vcCB1bnRpbCB3ZSd2ZVxuICAvLyBwYXJzZWQgYWxsIHJlc3VsdHMuXG4gIC8vXG4gIGZvciAoO1xuICAgIHBhcnQgPSBwYXJzZXIuZXhlYyhxdWVyeSk7XG4gICAgcmVzdWx0W2RlY29kZVVSSUNvbXBvbmVudChwYXJ0WzFdKV0gPSBkZWNvZGVVUklDb21wb25lbnQocGFydFsyXSlcbiAgKTtcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhIHF1ZXJ5IHN0cmluZyB0byBhbiBvYmplY3QuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9iaiBPYmplY3QgdGhhdCBzaG91bGQgYmUgdHJhbnNmb3JtZWQuXG4gKiBAcGFyYW0ge1N0cmluZ30gcHJlZml4IE9wdGlvbmFsIHByZWZpeC5cbiAqIEByZXR1cm5zIHtTdHJpbmd9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5mdW5jdGlvbiBxdWVyeXN0cmluZ2lmeShvYmosIHByZWZpeCkge1xuICBwcmVmaXggPSBwcmVmaXggfHwgJyc7XG5cbiAgdmFyIHBhaXJzID0gW107XG5cbiAgLy9cbiAgLy8gT3B0aW9uYWxseSBwcmVmaXggd2l0aCBhICc/JyBpZiBuZWVkZWRcbiAgLy9cbiAgaWYgKCdzdHJpbmcnICE9PSB0eXBlb2YgcHJlZml4KSBwcmVmaXggPSAnPyc7XG5cbiAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgIGlmIChoYXMuY2FsbChvYmosIGtleSkpIHtcbiAgICAgIHBhaXJzLnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KGtleSkgKyc9JysgZW5jb2RlVVJJQ29tcG9uZW50KG9ialtrZXldKSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHBhaXJzLmxlbmd0aCA/IHByZWZpeCArIHBhaXJzLmpvaW4oJyYnKSA6ICcnO1xufVxuXG4vL1xuLy8gRXhwb3NlIHRoZSBtb2R1bGUuXG4vL1xuZXhwb3J0cy5zdHJpbmdpZnkgPSBxdWVyeXN0cmluZ2lmeTtcbmV4cG9ydHMucGFyc2UgPSBxdWVyeXN0cmluZztcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L34vdXJsLXBhcnNlL34vcXVlcnlzdHJpbmdpZnkvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSA4MlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports){eval("'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zb2NranMtY2xpZW50L34vdXJsLXBhcnNlL34vcmVxdWlyZXMtcG9ydC9pbmRleC5qcz85NjkzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjgzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENoZWNrIGlmIHdlJ3JlIHJlcXVpcmVkIHRvIGFkZCBhIHBvcnQgbnVtYmVyLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly91cmwuc3BlYy53aGF0d2cub3JnLyNkZWZhdWx0LXBvcnRcbiAqIEBwYXJhbSB7TnVtYmVyfFN0cmluZ30gcG9ydCBQb3J0IG51bWJlciB3ZSBuZWVkIHRvIGNoZWNrXG4gKiBAcGFyYW0ge1N0cmluZ30gcHJvdG9jb2wgUHJvdG9jb2wgd2UgbmVlZCB0byBjaGVjayBhZ2FpbnN0LlxuICogQHJldHVybnMge0Jvb2xlYW59IElzIGl0IGEgZGVmYXVsdCBwb3J0IGZvciB0aGUgZ2l2ZW4gcHJvdG9jb2xcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJlcXVpcmVkKHBvcnQsIHByb3RvY29sKSB7XG4gIHByb3RvY29sID0gcHJvdG9jb2wuc3BsaXQoJzonKVswXTtcbiAgcG9ydCA9ICtwb3J0O1xuXG4gIGlmICghcG9ydCkgcmV0dXJuIGZhbHNlO1xuXG4gIHN3aXRjaCAocHJvdG9jb2wpIHtcbiAgICBjYXNlICdodHRwJzpcbiAgICBjYXNlICd3cyc6XG4gICAgcmV0dXJuIHBvcnQgIT09IDgwO1xuXG4gICAgY2FzZSAnaHR0cHMnOlxuICAgIGNhc2UgJ3dzcyc6XG4gICAgcmV0dXJuIHBvcnQgIT09IDQ0MztcblxuICAgIGNhc2UgJ2Z0cCc6XG4gICAgcmV0dXJuIHBvcnQgIT09IDIxO1xuXG4gICAgY2FzZSAnZ29waGVyJzpcbiAgICByZXR1cm4gcG9ydCAhPT0gNzA7XG5cbiAgICBjYXNlICdmaWxlJzpcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gcG9ydCAhPT0gMDtcbn07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc29ja2pzLWNsaWVudC9+L3VybC1wYXJzZS9+L3JlcXVpcmVzLXBvcnQvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSA4M1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");
},function(module,exports,__webpack_require__){eval("'use strict';\nvar ansiRegex = __webpack_require__(85)();\n\nmodule.exports = function (str) {\n	return typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zdHJpcC1hbnNpL2luZGV4LmpzPzllZjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiODQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgYW5zaVJlZ2V4ID0gcmVxdWlyZSgnYW5zaS1yZWdleCcpKCk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHN0cikge1xuXHRyZXR1cm4gdHlwZW9mIHN0ciA9PT0gJ3N0cmluZycgPyBzdHIucmVwbGFjZShhbnNpUmVnZXgsICcnKSA6IHN0cjtcbn07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1kZXYtc2VydmVyL34vc3RyaXAtYW5zaS9pbmRleC5qc1xuICoqIG1vZHVsZSBpZCA9IDg0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports){eval("'use strict';\nmodule.exports = function () {\n	return /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zdHJpcC1hbnNpL34vYW5zaS1yZWdleC9pbmRleC5qcz80ZTA3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSw2QkFBNkIsWUFBWSxJQUFJLElBQUksTUFBTSxJQUFJO0FBQzNEIiwiZmlsZSI6Ijg1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cdHJldHVybiAvW1xcdTAwMWJcXHUwMDliXVtbKCkjOz9dKig/OlswLTldezEsNH0oPzo7WzAtOV17MCw0fSkqKT9bMC05QS1PUlpjZi1ucXJ5PT48XS9nO1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvfi9zdHJpcC1hbnNpL34vYW5zaS1yZWdleC9pbmRleC5qc1xuICoqIG1vZHVsZSBpZCA9IDg1XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports){eval("/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, {}))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vYW1kLW9wdGlvbnMuanM/NWY3MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI4Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX2FtZF9vcHRpb25zX187XHJcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spL2J1aWxkaW4vYW1kLW9wdGlvbnMuanNcbiAqKiBtb2R1bGUgaWQgPSA4NlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports){eval('/*\r\n	MIT License http://www.opensource.org/licenses/mit-license.php\r\n	Author Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(updatedModules, renewedModules) {\r\n	var unacceptedModules = updatedModules.filter(function(moduleId) {\r\n		return renewedModules && renewedModules.indexOf(moduleId) < 0;\r\n	});\r\n\r\n	if(unacceptedModules.length > 0) {\r\n		console.warn("[HMR] The following modules couldn\'t be hot updated: (They would need a full reload!)");\r\n		unacceptedModules.forEach(function(moduleId) {\r\n			console.warn("[HMR]  - " + moduleId);\r\n		});\r\n	}\r\n\r\n	if(!renewedModules || renewedModules.length === 0) {\r\n		console.log("[HMR] Nothing hot updated.");\r\n	} else {\r\n		console.log("[HMR] Updated modules:");\r\n		renewedModules.forEach(function(moduleId) {\r\n			console.log("[HMR]  - " + moduleId);\r\n		});\r\n	}\r\n};\r\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2hvdC9sb2ctYXBwbHktcmVzdWx0LmpzP2Q3NjIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EiLCJmaWxlIjoiODcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXHJcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxyXG4qL1xyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVwZGF0ZWRNb2R1bGVzLCByZW5ld2VkTW9kdWxlcykge1xyXG5cdHZhciB1bmFjY2VwdGVkTW9kdWxlcyA9IHVwZGF0ZWRNb2R1bGVzLmZpbHRlcihmdW5jdGlvbihtb2R1bGVJZCkge1xyXG5cdFx0cmV0dXJuIHJlbmV3ZWRNb2R1bGVzICYmIHJlbmV3ZWRNb2R1bGVzLmluZGV4T2YobW9kdWxlSWQpIDwgMDtcclxuXHR9KTtcclxuXHJcblx0aWYodW5hY2NlcHRlZE1vZHVsZXMubGVuZ3RoID4gMCkge1xyXG5cdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gVGhlIGZvbGxvd2luZyBtb2R1bGVzIGNvdWxkbid0IGJlIGhvdCB1cGRhdGVkOiAoVGhleSB3b3VsZCBuZWVkIGEgZnVsbCByZWxvYWQhKVwiKTtcclxuXHRcdHVuYWNjZXB0ZWRNb2R1bGVzLmZvckVhY2goZnVuY3Rpb24obW9kdWxlSWQpIHtcclxuXHRcdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gIC0gXCIgKyBtb2R1bGVJZCk7XHJcblx0XHR9KTtcclxuXHR9XHJcblxyXG5cdGlmKCFyZW5ld2VkTW9kdWxlcyB8fCByZW5ld2VkTW9kdWxlcy5sZW5ndGggPT09IDApIHtcclxuXHRcdGNvbnNvbGUubG9nKFwiW0hNUl0gTm90aGluZyBob3QgdXBkYXRlZC5cIik7XHJcblx0fSBlbHNlIHtcclxuXHRcdGNvbnNvbGUubG9nKFwiW0hNUl0gVXBkYXRlZCBtb2R1bGVzOlwiKTtcclxuXHRcdHJlbmV3ZWRNb2R1bGVzLmZvckVhY2goZnVuY3Rpb24obW9kdWxlSWQpIHtcclxuXHRcdFx0Y29uc29sZS5sb2coXCJbSE1SXSAgLSBcIiArIG1vZHVsZUlkKTtcclxuXHRcdH0pO1xyXG5cdH1cclxufTtcclxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjaykvaG90L2xvZy1hcHBseS1yZXN1bHQuanNcbiAqKiBtb2R1bGUgaWQgPSA4N1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==')},function(module,exports,__webpack_require__){eval('/*\r\n	MIT License http://www.opensource.org/licenses/mit-license.php\r\n	Author Tobias Koppers @sokra\r\n*/\r\n/*globals window __webpack_hash__ */\r\nif(true) {\r\n	var lastData;\r\n	var upToDate = function upToDate() {\r\n		return lastData.indexOf(__webpack_require__.h()) >= 0;\r\n	};\r\n	var check = function check() {\r\n		module.hot.check(function(err, updatedModules) {\r\n			if(err) {\r\n				if(module.hot.status() in {\r\n						abort: 1,\r\n						fail: 1\r\n					}) {\r\n					console.warn("[HMR] Cannot check for update. Need to do a full reload!");\r\n					console.warn("[HMR] " + err.stack || err.message);\r\n				} else {\r\n					console.warn("[HMR] Update check failed: " + err.stack || err.message);\r\n				}\r\n				return;\r\n			}\r\n\r\n			if(!updatedModules) {\r\n				console.warn("[HMR] Cannot find update. Need to do a full reload!");\r\n				console.warn("[HMR] (Probably because of restarting the webpack-dev-server)");\r\n				return;\r\n			}\r\n\r\n			module.hot.apply({\r\n				ignoreUnaccepted: true\r\n			}, function(err, renewedModules) {\r\n				if(err) {\r\n					if(module.hot.status() in {\r\n							abort: 1,\r\n							fail: 1\r\n						}) {\r\n						console.warn("[HMR] Cannot apply update. Need to do a full reload!");\r\n						console.warn("[HMR] " + err.stack || err.message);\r\n					} else {\r\n						console.warn("[HMR] Update failed: " + err.stack || err.message);\r\n					}\r\n					return;\r\n				}\r\n\r\n				if(!upToDate()) {\r\n					check();\r\n				}\r\n\r\n				__webpack_require__(87)(updatedModules, renewedModules);\r\n\r\n				if(upToDate()) {\r\n					console.log("[HMR] App is up to date.");\r\n				}\r\n			});\r\n		});\r\n	};\r\n	var addEventListener = window.addEventListener ? function(eventName, listener) {\r\n		window.addEventListener(eventName, listener, false);\r\n	} : function(eventName, listener) {\r\n		window.attachEvent("on" + eventName, listener);\r\n	};\r\n	addEventListener("message", function(event) {\r\n		if(typeof event.data === "string" && event.data.indexOf("webpackHotUpdate") === 0) {\r\n			lastData = event.data;\r\n			if(!upToDate() && module.hot.status() === "idle") {\r\n				console.log("[HMR] Checking for updates on the server...");\r\n				check();\r\n			}\r\n		}\r\n	});\r\n	console.log("[HMR] Waiting for update signal from WDS...");\r\n} else {\r\n	throw new Error("[HMR] Hot Module Replacement is disabled.");\r\n}\r\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2hvdC9vbmx5LWRldi1zZXJ2ZXIuanM/MmY4NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBLENBQUM7QUFDRDtBQUNBIiwiZmlsZSI6Ijg4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxyXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcclxuKi9cclxuLypnbG9iYWxzIHdpbmRvdyBfX3dlYnBhY2tfaGFzaF9fICovXHJcbmlmKG1vZHVsZS5ob3QpIHtcclxuXHR2YXIgbGFzdERhdGE7XHJcblx0dmFyIHVwVG9EYXRlID0gZnVuY3Rpb24gdXBUb0RhdGUoKSB7XHJcblx0XHRyZXR1cm4gbGFzdERhdGEuaW5kZXhPZihfX3dlYnBhY2tfaGFzaF9fKSA+PSAwO1xyXG5cdH07XHJcblx0dmFyIGNoZWNrID0gZnVuY3Rpb24gY2hlY2soKSB7XHJcblx0XHRtb2R1bGUuaG90LmNoZWNrKGZ1bmN0aW9uKGVyciwgdXBkYXRlZE1vZHVsZXMpIHtcclxuXHRcdFx0aWYoZXJyKSB7XHJcblx0XHRcdFx0aWYobW9kdWxlLmhvdC5zdGF0dXMoKSBpbiB7XHJcblx0XHRcdFx0XHRcdGFib3J0OiAxLFxyXG5cdFx0XHRcdFx0XHRmYWlsOiAxXHJcblx0XHRcdFx0XHR9KSB7XHJcblx0XHRcdFx0XHRjb25zb2xlLndhcm4oXCJbSE1SXSBDYW5ub3QgY2hlY2sgZm9yIHVwZGF0ZS4gTmVlZCB0byBkbyBhIGZ1bGwgcmVsb2FkIVwiKTtcclxuXHRcdFx0XHRcdGNvbnNvbGUud2FybihcIltITVJdIFwiICsgZXJyLnN0YWNrIHx8IGVyci5tZXNzYWdlKTtcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gVXBkYXRlIGNoZWNrIGZhaWxlZDogXCIgKyBlcnIuc3RhY2sgfHwgZXJyLm1lc3NhZ2UpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmKCF1cGRhdGVkTW9kdWxlcykge1xyXG5cdFx0XHRcdGNvbnNvbGUud2FybihcIltITVJdIENhbm5vdCBmaW5kIHVwZGF0ZS4gTmVlZCB0byBkbyBhIGZ1bGwgcmVsb2FkIVwiKTtcclxuXHRcdFx0XHRjb25zb2xlLndhcm4oXCJbSE1SXSAoUHJvYmFibHkgYmVjYXVzZSBvZiByZXN0YXJ0aW5nIHRoZSB3ZWJwYWNrLWRldi1zZXJ2ZXIpXCIpO1xyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0bW9kdWxlLmhvdC5hcHBseSh7XHJcblx0XHRcdFx0aWdub3JlVW5hY2NlcHRlZDogdHJ1ZVxyXG5cdFx0XHR9LCBmdW5jdGlvbihlcnIsIHJlbmV3ZWRNb2R1bGVzKSB7XHJcblx0XHRcdFx0aWYoZXJyKSB7XHJcblx0XHRcdFx0XHRpZihtb2R1bGUuaG90LnN0YXR1cygpIGluIHtcclxuXHRcdFx0XHRcdFx0XHRhYm9ydDogMSxcclxuXHRcdFx0XHRcdFx0XHRmYWlsOiAxXHJcblx0XHRcdFx0XHRcdH0pIHtcclxuXHRcdFx0XHRcdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gQ2Fubm90IGFwcGx5IHVwZGF0ZS4gTmVlZCB0byBkbyBhIGZ1bGwgcmVsb2FkIVwiKTtcclxuXHRcdFx0XHRcdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gXCIgKyBlcnIuc3RhY2sgfHwgZXJyLm1lc3NhZ2UpO1xyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gVXBkYXRlIGZhaWxlZDogXCIgKyBlcnIuc3RhY2sgfHwgZXJyLm1lc3NhZ2UpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0aWYoIXVwVG9EYXRlKCkpIHtcclxuXHRcdFx0XHRcdGNoZWNrKCk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRyZXF1aXJlKFwiLi9sb2ctYXBwbHktcmVzdWx0XCIpKHVwZGF0ZWRNb2R1bGVzLCByZW5ld2VkTW9kdWxlcyk7XHJcblxyXG5cdFx0XHRcdGlmKHVwVG9EYXRlKCkpIHtcclxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKFwiW0hNUl0gQXBwIGlzIHVwIHRvIGRhdGUuXCIpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblx0XHR9KTtcclxuXHR9O1xyXG5cdHZhciBhZGRFdmVudExpc3RlbmVyID0gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIgPyBmdW5jdGlvbihldmVudE5hbWUsIGxpc3RlbmVyKSB7XHJcblx0XHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGxpc3RlbmVyLCBmYWxzZSk7XHJcblx0fSA6IGZ1bmN0aW9uKGV2ZW50TmFtZSwgbGlzdGVuZXIpIHtcclxuXHRcdHdpbmRvdy5hdHRhY2hFdmVudChcIm9uXCIgKyBldmVudE5hbWUsIGxpc3RlbmVyKTtcclxuXHR9O1xyXG5cdGFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcblx0XHRpZih0eXBlb2YgZXZlbnQuZGF0YSA9PT0gXCJzdHJpbmdcIiAmJiBldmVudC5kYXRhLmluZGV4T2YoXCJ3ZWJwYWNrSG90VXBkYXRlXCIpID09PSAwKSB7XHJcblx0XHRcdGxhc3REYXRhID0gZXZlbnQuZGF0YTtcclxuXHRcdFx0aWYoIXVwVG9EYXRlKCkgJiYgbW9kdWxlLmhvdC5zdGF0dXMoKSA9PT0gXCJpZGxlXCIpIHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhcIltITVJdIENoZWNraW5nIGZvciB1cGRhdGVzIG9uIHRoZSBzZXJ2ZXIuLi5cIik7XHJcblx0XHRcdFx0Y2hlY2soKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH0pO1xyXG5cdGNvbnNvbGUubG9nKFwiW0hNUl0gV2FpdGluZyBmb3IgdXBkYXRlIHNpZ25hbCBmcm9tIFdEUy4uLlwiKTtcclxufSBlbHNlIHtcclxuXHR0aHJvdyBuZXcgRXJyb3IoXCJbSE1SXSBIb3QgTW9kdWxlIFJlcGxhY2VtZW50IGlzIGRpc2FibGVkLlwiKTtcclxufVxyXG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS9ob3Qvb25seS1kZXYtc2VydmVyLmpzXG4gKiogbW9kdWxlIGlkID0gODhcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')}]);